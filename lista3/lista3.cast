{"version": 2, "width": 101, "height": 55, "timestamp": 1650995986, "idle_time_limit": 0.1, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.020878, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[4.022193, "o", "#"]
[4.619118, "o", " "]
[5.107075, "o", "M"]
[5.379, "o", "a"]
[5.687113, "o", "r"]
[5.891038, "o", "e"]
[6.07905, "o", "k"]
[6.315258, "o", " "]
[7.967019, "o", "Ś"]
[8.398851, "o", "w"]
[8.626724, "o", "i"]
[8.863111, "o", "e"]
[9.027086, "o", "r"]
[9.499032, "o", "g"]
[10.24303, "o", "o"]
[10.790285, "o", "ń"]
[11.759184, "o", " "]
[12.139024, "o", "2"]
[12.566824, "o", "6"]
[12.747051, "o", "1"]
[12.914994, "o", "7"]
[13.175029, "o", "5"]
[13.907121, "o", "0"]
[14.378462, "o", " "]
[15.323001, "o", "A"]
[15.667184, "o", "i"]
[16.219031, "o", "S"]
[16.643124, "o", "D"]
[16.979267, "o", " "]
[17.523017, "o", "L"]
[17.931072, "o", "i"]
[18.08305, "o", "s"]
[18.359076, "o", "t"]
[18.7432, "o", "a"]
[19.351079, "o", " "]
[19.687161, "o", "3"]
[20.799484, "o", "\r\n"]
[20.799747, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[24.550967, "o", "#"]
[24.907142, "o", " "]
[25.383021, "o", "Z"]
[27.207055, "o", "\b\u001b[K"]
[28.091211, "o", "P"]
[29.603147, "o", "o"]
[29.771152, "o", "b"]
[30.315, "o", "r"]
[30.583258, "o", "a"]
[30.847894, "o", "n"]
[30.947075, "o", "i"]
[31.095101, "o", "e"]
[31.31916, "o", " "]
[32.526959, "o", "z"]
[32.655096, "o", " "]
[32.907216, "o", "r"]
[33.11111, "o", "e"]
[33.230886, "o", "p"]
[33.370994, "o", "o"]
[33.695133, "o", "z"]
[34.107056, "o", "y"]
[34.31429, "o", "t"]
[34.539015, "o", "o"]
[34.899348, "o", "e"]
[35.679149, "o", "\b\u001b[K"]
[35.839161, "o", "r"]
[35.995283, "o", "i"]
[36.178973, "o", "u"]
[36.379085, "o", "m"]
[37.107234, "o", "\r\n"]
[37.107528, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[301.706173, "o", "\r\u001b[K\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[315.245006, "o", "\r\u001b[K\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[318.24991, "o", "s"]
[319.042165, "o", "v"]
[319.126308, "o", "n"]
[319.306305, "o", " "]
[319.885785, "o", "e"]
[320.174078, "o", "x"]
[320.370089, "o", "p"]
[320.586071, "o", "o"]
[320.834019, "o", "r"]
[321.378244, "o", "t"]
[325.837768, "o", " "]
[326.302198, "o", "h"]
[326.730154, "o", "t"]
[327.230128, "o", "t"]
[327.678168, "o", "p"]
[328.610021, "o", "s"]
[329.474167, "o", ":"]
[329.7981, "o", "/"]
[346.66584, "o", "/"]
[347.94182, "o", "r"]
[348.07797, "o", "e"]
[348.205982, "o", "p"]
[348.373826, "o", "o"]
[348.59364, "o", "."]
[349.201039, "o", "c"]
[349.36199, "o", "s"]
[349.485839, "o", "."]
[349.689812, "o", "p"]
[349.822009, "o", "w"]
[350.085958, "o", "r"]
[350.285945, "o", "."]
[350.453791, "o", "e"]
[350.645838, "o", "d"]
[350.973896, "o", "u"]
[351.073971, "o", "."]
[351.338004, "o", "p"]
[351.532774, "o", "l"]
[353.041769, "o", "/"]
[353.73773, "o", "2"]
[353.953667, "o", "6"]
[354.097852, "o", "1"]
[354.2177, "o", "7"]
[354.401937, "o", "5"]
[354.641972, "o", "0"]
[356.210071, "o", "/"]
[362.413955, "o", "l"]
[362.637869, "o", "i"]
[362.853945, "o", "s"]
[363.125885, "o", "t"]
[363.469912, "o", "a"]
[364.145576, "o", "3"]
[366.569477, "o", "\r\n"]
[367.237581, "o", "A    lista3\r\n"]
[367.239936, "o", "A    lista3/wyniki\r\n"]
[367.464203, "o", "A    lista3/binary_search.cpp\r\n"]
[367.466273, "o", "A    lista3/dual_pivot_quicksort.cpp\r\n"]
[367.468898, "o", "A    lista3/dual_pivot_quicksort_select.cpp\r\n"]
[367.470537, "o", "A    lista3/generator.cpp\r\n"]
[367.473222, "o", "A    lista3/generator_asc.cpp\r\n"]
[367.474892, "o", "A    lista3/generator_binary.cpp\r\n"]
[367.505232, "o", "A    lista3/kselect.cpp\r\n"]
[367.505275, "o", "A    lista3/quick_sort.cpp\r\n"]
[367.505362, "o", "A    lista3/quick_sort_select.cpp\r\n"]
[367.505554, "o", "A    lista3/randomized_select.cpp\r\n"]
[367.514386, "o", "A    lista3/select.cpp\r\n"]
[367.514424, "o", "A    lista3/tests_binary.sh\r\n"]
[367.514505, "o", "A    lista3/tests_select.sh\r\n"]
[367.514568, "o", "A    lista3/tests_sort.sh\r\n"]
[367.61445, "o", "A    lista3/wyniki/results_kselect3_div2.txt\r\n"]
[367.655017, "o", "A    lista3/wyniki/results_kselect9_div2.txt\r\n"]
[367.655387, "o", "A    lista3/wyniki/results_quick_sort_select.txt\r\n"]
[367.668686, "o", "A    lista3/wyniki/results_rselect_3div4.txt\r\n"]
[367.732524, "o", "A    lista3/wyniki/results_select_3div4.txt\r\n"]
[367.754184, "o", "A    lista3/wyniki/results_kselect5_3div4.txt\r\n"]
[367.852171, "o", "A    lista3/wyniki/results_kselect5_div4.txt\r\n"]
[367.859783, "o", "A    lista3/wyniki/results_kselect7_div2.txt\r\n"]
[367.872881, "o", "A    lista3/wyniki/wykres_binary_t_iloraz.png\r\n"]
[367.876934, "o", "A    lista3/wyniki/rselect_c.png\r\n"]
[367.879186, "o", "A    lista3/wyniki/wykres_dpqs_t_iloraz.png\r\n"]
[367.88075, "o", "A    lista3/wyniki/select_s.png\r\n"]
[367.919569, "o", "A    lista3/wyniki/wykres_binary_t.png\r\n"]
[367.924464, "o", "A    lista3/wyniki/wykres_dpqs_t.png\r\n"]
[368.013824, "o", "A    lista3/wyniki/wykres_kselect_c_ndiv4.png\r\n"]
[368.018514, "o", "A    lista3/wyniki/results_kselect9_3div4.txt\r\n"]
[368.018814, "o", "A    lista3/wyniki/results_quick_sort.txt\r\n"]
[368.024396, "o", "A    lista3/wyniki/results_quick_sort_worst.txt\r\n"]
[368.092923, "o", "A    lista3/wyniki/wykres_kselect_t_3ndiv4.png\r\n"]
[368.093155, "o", "A    lista3/wyniki/wykres_qs_c_iloraz.png\r\n"]
[368.093458, "o", "A    lista3/wyniki/wykres_qs_select_c_iloraz_worstcase.png\r\n"]
[368.121814, "o", "A    lista3/wyniki/results_rselect_div4.txt\r\n"]
[368.190923, "o", "A    lista3/wyniki/results_select_div4.txt"]
[368.191081, "o", "\r\n"]
[368.252685, "o", "A    lista3/wyniki/wykres_qs_t_worstcase.png\r\n"]
[368.348923, "o", "A    lista3/wyniki/wykres_kselect_s_3ndiv4.png\r\n"]
[368.36643, "o", "A    lista3/wyniki/select_c.png\r\n"]
[368.540858, "o", "A    lista3/wyniki/wykres_binary_c_iloraz.png\r\n"]
[368.565059, "o", "A    lista3/wyniki/wykres_dpqs_c_iloraz.png\r\n"]
[368.707248, "o", "A    lista3/wyniki/wykres_kselect_t_ndiv2.png\r\n"]
[368.737908, "o", "A    lista3/wyniki/wykres_kselect_c_ndiv2.png\r\n"]
[368.839972, "o", "A    lista3/wyniki/wykres_qs_c_worstcase.png\r\n"]
[368.918988, "o", "A    lista3/wyniki/wykres_kselect_s_ndiv4.png\r\n"]
[368.9479, "o", "A    lista3/wyniki/wykres_qs_c.png\r\n"]
[368.972508, "o", "A    lista3/wyniki/wykres_qs_klasyczny_t_iloraz_worstcase.png\r\n"]
[368.976228, "o", "A    lista3/wyniki/wykres_qs_select_t_iloraz_worstcase.png\r\n"]
[368.998389, "o", "A    lista3/wyniki/wykres_qs_t_iloraz.png\r\n"]
[372.569741, "o", "A    lista3/wyniki/AiSD L3.xlsx\r\n"]
[372.577419, "o", "A    lista3/wyniki/results_binary_h.txt\r\n"]
[372.599454, "o", "A    lista3/wyniki/results_binary_l.txt\r\n"]
[372.620421, "o", "A    lista3/wyniki/results_binary_m.txt\r\n"]
[372.629072, "o", "A    lista3/wyniki/results_binary_o.txt\r\n"]
[372.645876, "o", "A    lista3/wyniki/results_binary_r.txt\r\n"]
[372.649678, "o", "A    lista3/wyniki/results_dual_pivot_quicksort.txt\r\n"]
[372.656023, "o", "A    lista3/wyniki/results_dual_pivot_quicksort_select.txt\r\n"]
[372.684366, "o", "A    lista3/wyniki/results_dual_pivot_quicksort_select_worst.txt\r\n"]
[372.732894, "o", "A    lista3/wyniki/results_dual_pivot_quicksort_worst.txt\r\n"]
[372.81838, "o", "A    lista3/wyniki/results_kselect3_3div4.txt\r\n"]
[372.905493, "o", "A    lista3/wyniki/results_kselect3_div4.txt\r\n"]
[372.988832, "o", "A    lista3/wyniki/results_kselect5_div2.txt\r\n"]
[373.07639, "o", "A    lista3/wyniki/results_kselect7_3div4.txt\r\n"]
[373.166185, "o", "A    lista3/wyniki/results_kselect7_div4.txt\r\n"]
[373.220413, "o", "A    lista3/wyniki/results_kselect9_div4.txt\r\n"]
[373.267611, "o", "A    lista3/wyniki/results_quick_sort_select_worst.txt\r\n"]
[373.31102, "o", "A    lista3/wyniki/results_rselect_div2.txt\r\n"]
[373.356359, "o", "A    lista3/wyniki/results_select_div2.txt\r\n"]
[373.421039, "o", "A    lista3/wyniki/rselect_s.png\r\n"]
[373.520679, "o", "A    lista3/wyniki/wykres_binary_c.png\r\n"]
[373.524949, "o", "A    lista3/wyniki/wykres_dpqs_c.png\r\n"]
[373.619138, "o", "A    lista3/wyniki/wykres_kselect_c_3ndiv4.png\r\n"]
[373.702511, "o", "A    lista3/wyniki/wykres_kselect_s_ndiv2.png\r\n"]
[373.775128, "o", "A    lista3/wyniki/wykres_kselect_t_ndiv4.png\r\n"]
[373.791831, "o", "A    lista3/wyniki/wykres_qs_klasyczny_c_iloraz_worstcase.png\r\n"]
[373.819327, "o", "A    lista3/wyniki/wykres_qs_t.png\r\n"]
[373.819491, "o", "Wyeksportowano wersję 6.\r\n"]
[373.822182, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[376.533504, "o", "c"]
[376.729734, "o", "d"]
[376.861867, "o", " "]
[377.969636, "o", "l"]
[378.185697, "o", "i"]
[378.297598, "o", "s"]
[378.493418, "o", "t"]
[378.733577, "o", "a"]
[379.197456, "o", "3"]
[379.593791, "o", "\r\n"]
[379.59426, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[384.909692, "o", "#"]
[385.785705, "o", "z"]
[386.057518, "o", "a"]
[386.241746, "o", "d"]
[386.445825, "o", "a"]
[386.617406, "o", "n"]
[386.729776, "o", "i"]
[386.865573, "o", "e"]
[387.069709, "o", " "]
[387.249602, "o", "1"]
[387.985493, "o", "\r\n"]
[387.985886, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[443.885458, "o", "g"]
[444.317052, "o", "+"]
[444.484845, "o", "+"]
[444.913122, "o", " "]
[445.484499, "o", "-"]
[445.697152, "o", "o"]
[447.472988, "o", " "]
[447.85286, "o", "r"]
[448.268969, "o", "a"]
[448.42514, "o", "n"]
[448.573055, "o", "d"]
[448.713123, "o", "o"]
[448.900978, "o", "m"]
[449.012493, "o", "i"]
[449.168869, "o", "z"]
[449.401141, "o", "e"]
[449.569091, "o", "d"]
[450.001217, "o", "_"]
[450.316952, "o", "s"]
[450.50513, "o", "e"]
[450.773096, "o", "l"]
[450.905217, "o", "e"]
[451.169174, "o", "c"]
[451.589138, "o", "t"]
[451.804962, "o", " "]
[452.180841, "o", "r"]
[452.429017, "o", "a"]
[452.633014, "o", "n"]
[452.789137, "o", "d"]
[452.913153, "o", "o"]
[453.100969, "o", "m"]
[453.193084, "o", "i"]
[453.401088, "o", "z"]
[453.880983, "o", "e"]
[454.117123, "o", "d"]
[454.593179, "o", "_"]
[454.837131, "o", "s"]
[455.044973, "o", "e"]
[455.237099, "o", "l"]
[455.348936, "o", "e"]
[455.605025, "o", "c"]
[455.86917, "o", "t"]
[456.088911, "o", "."]
[456.301159, "o", "c"]
[456.493181, "o", "p"]
[456.657102, "o", "p \r"]
[457.729731, "o", "\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[Kp\r\n"]
[458.410423, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[459.700995, "o", "g"]
[460.029149, "o", "+"]
[460.205019, "o", "+"]
[460.780922, "o", " "]
[460.976986, "o", "-"]
[461.301065, "o", "o"]
[461.673166, "o", " "]
[461.845093, "o", "s"]
[462.016919, "o", "e"]
[462.200924, "o", "l"]
[462.384817, "o", "e"]
[462.621085, "o", "c"]
[462.85313, "o", "t"]
[463.12513, "o", " "]
[463.813277, "o", "s"]
[464.020939, "o", "e"]
[464.316968, "o", "l"]
[464.508922, "o", "e"]
[464.737107, "o", "c"]
[465.029115, "o", "t"]
[465.8008, "o", "."]
[465.980914, "o", "c"]
[466.085086, "o", "p"]
[466.245113, "o", "p"]
[466.753565, "o", "\r\n"]
[467.081402, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[468.04506, "o", "g"]
[468.332741, "o", "+"]
[468.528969, "o", "+"]
[469.048781, "o", " "]
[469.32094, "o", "-"]
[469.776259, "o", "o"]
[470.045017, "o", " "]
[470.47298, "o", "g"]
[470.732752, "o", "e"]
[470.87696, "o", "n"]
[471.056861, "o", "e"]
[471.273001, "o", "r"]
[471.532792, "o", "a"]
[471.76885, "o", "t"]
[471.921035, "o", "o"]
[472.03705, "o", "r"]
[472.504824, "o", " "]
[473.040855, "o", "g"]
[473.268989, "o", "e"]
[473.43288, "o", "n"]
[473.632851, "o", "e"]
[474.360868, "o", "r"]
[474.621022, "o", "a"]
[474.868916, "o", "t"]
[475.000968, "o", "o"]
[475.132821, "o", "r"]
[476.992932, "o", "."]
[477.360908, "o", "c"]
[477.500893, "o", "p"]
[477.680822, "o", "p"]
[478.716844, "o", "\r\n"]
[479.166484, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[483.984904, "o", "."]
[484.368976, "o", "/"]
[485.924881, "o", "g"]
[486.168658, "o", "e"]
[486.308811, "o", "n"]
[486.428888, "o", "e"]
[486.564729, "o", "r"]
[486.800525, "o", "a"]
[487.028822, "o", "t"]
[487.165147, "o", "o"]
[487.300792, "o", "r"]
[487.50876, "o", " "]
[489.264738, "o", "2"]
[489.408767, "o", "0"]
[490.508693, "o", " "]
[490.820791, "o", "|"]
[491.280718, "o", " "]
[495.532531, "o", "."]
[495.588673, "o", "/"]
[496.237403, "o", "r"]
[496.552671, "o", "a"]
[496.680526, "o", "n"]
[496.832564, "o", "d"]
[496.976767, "o", "o"]
[497.300743, "o", "i"]
[497.796734, "o", "\b\u001b[K"]
[498.048433, "o", "m"]
[498.172686, "o", "i"]
[498.376589, "o", "z"]
[498.576702, "o", "e"]
[498.760775, "o", "d"]
[499.332597, "o", "_"]
[499.564864, "o", "s"]
[499.772561, "o", "e"]
[499.920787, "o", "l"]
[500.052372, "o", "e"]
[500.276559, "o", "c"]
[500.54075, "o", "t"]
[501.112748, "o", " "]
[504.476637, "o", "\b\u001b[K"]
[504.976249, "o", "\b\u001b[K"]
[505.006462, "o", "\b\u001b[K"]
[505.036526, "o", "\b\u001b[K"]
[505.067462, "o", "\b\u001b[K"]
[505.096221, "o", "\b\u001b[K"]
[505.127045, "o", "\b\u001b[K"]
[505.157399, "o", "\b\u001b[K"]
[505.188003, "o", "\b\u001b[K"]
[505.219086, "o", "\b\u001b[K"]
[505.249031, "o", "\b\u001b[K"]
[505.279137, "o", "\b\u001b[K"]
[505.309508, "o", "\b\u001b[K"]
[505.339744, "o", "\b\u001b[K"]
[505.370121, "o", "\b\u001b[K"]
[505.40007, "o", "\b\u001b[K"]
[505.430018, "o", "\b\u001b[K"]
[505.460545, "o", "\b\u001b[K"]
[505.491653, "o", "\b\u001b[K"]
[505.521969, "o", "\b\u001b[K"]
[505.552689, "o", "\b\u001b[K"]
[505.583554, "o", "\b\u001b[K"]
[505.614498, "o", "\b\u001b[K"]
[505.644863, "o", "\b\u001b[K"]
[505.674387, "o", "\b\u001b[K"]
[505.704583, "o", "\b\u001b[K"]
[505.735067, "o", "\b\u001b[K"]
[505.765491, "o", "\b\u001b[K"]
[505.79684, "o", "\b\u001b[K"]
[505.827219, "o", "\b\u001b[K"]
[505.857295, "o", "\b\u001b[K"]
[505.887839, "o", "\b\u001b[K"]
[505.919162, "o", "\b\u001b[K"]
[505.948495, "o", "\b\u001b[K"]
[505.978531, "o", "\b\u001b[K"]
[506.009071, "o", "\b\u001b[K"]
[506.039392, "o", "\b\u001b[K"]
[506.070081, "o", "\u0007"]
[506.099949, "o", "\u0007"]
[506.130684, "o", "\u0007"]
[506.162046, "o", "\u0007"]
[506.192, "o", "\u0007"]
[506.222867, "o", "\u0007"]
[506.253129, "o", "\u0007"]
[506.284268, "o", "c"]
[506.492616, "o", "a"]
[506.712264, "o", "t"]
[507.368415, "o", " "]
[509.333349, "o", "r"]
[509.552676, "o", "a"]
[509.724675, "o", "n"]
[509.872616, "o", "d"]
[510.020523, "o", "o"]
[510.292438, "o", "m"]
[510.45664, "o", "i"]
[510.600619, "o", "z"]
[510.788394, "o", "e"]
[510.976612, "o", "d"]
[511.83649, "o", "_"]
[512.088659, "o", "s"]
[512.264499, "o", "e"]
[512.420538, "o", "l"]
[512.52859, "o", "e"]
[512.720529, "o", "c"]
[512.936663, "o", "t"]
[513.160584, "o", "."]
[513.328676, "o", "c"]
[513.540677, "o", "p"]
[513.816482, "o", "p"]
[514.184982, "o", "\r\n"]
[514.186609, "o", "#include <random>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <errno.h>\r\n#include <limits.h>\r\n#include <string.h>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint n = 0;\r\nint no_assigns = 0;\r\nint no_comparisons = 0;\r\n\r\nstatic random_device rd; // random device engine, usually based on /dev/random on UNIX-like systems\r\n// initialize Mersennes' twister using rd to generate the seed\r\nstatic mt19937 rng(rd()); \r\n\r\nvoid assignKey(int& i, int& j) {\r\n  i = j;\r\n  no_assigns++;\r\n}\r\n\r\nvoid swap(int& i, int& j) {\r\n  int help;\r\n  assignKey(help, i);\r\n  assignKey(i, j);\r\n  assignKey(j, help);\r\n}\r\n\r\nbool compare(int i, int j) {\r\n  no_comparisons++;\r\n  if(i > j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// ALGORYTM SORTUJĄCY ABY WYŚWIETLIĆ POSORTOWANA TABLICE\r\n// to się nie wlicza do liczby porównań i przestawień\r\n\r\nint lomutoPartition(int array[], int start, int end) {\r\n  int pivot = array[start];\r\n  int i = start;\r\n  for(int j = start+1; j <= end; j++) {\r\n    if(pivot > array[j]) {\r\n      i++;\r\n    "]
[514.186727, "o", "  int help = array[i];\r\n      array[i] = array[j];\r\n      array[j] = help;\r\n    }\r\n  }\r\n  int help = array[i];\r\n      array[i] = array[start];\r\n      array[start] = help;\r\n  return i;\r\n}\r\n\r\nvoid quickSort(int array[], int start, int end) {\r\n  if(start < end) {\r\n    int pivotIndex = lomutoPartition(array, start, end);\r\n    quickSort(array, start, pivotIndex-1);\r\n    quickSort(array, pivotIndex+1, end);\r\n  }\r\n}\r\n\r\n// KONIEC ALGORYTMU SORTUJĄCEGO\r\n\r\nint randomise(int from, int to)\r\n{\r\n  uniform_int_distribution<int> uid(from, to);\r\n  return uid(rng); //rng jako generator\r\n}\r\n\r\nvoid printArray(int array[]) {\r\n  if(n < 50) {\r\n    for(int i = 0; i < n; i++) {\r\n      cout << array[i] << \" \";\r\n    }\r\n    cout << endl;\r\n  }\r\n}\r\n\r\nint randPartition(int arr[], int p, int q) {\r\n  int pivotIndex = randomise(p, q);\r\n  if(pivotIndex != p)\r\n    swap(arr[pivotIndex], arr[p]);\r\n  pivotIndex = p;\r\n  int j = p;\r\n  for(int i = p+1; i <= q; i++) {\r\n    if(compare(arr[pivotIndex], arr[i])) {\r\n      j++;\r\n      swap(arr[j], arr[i])"]
[514.186773, "o", ";\r\n    }\r\n  }\r\n  swap(arr[j], arr[p]);\r\n  return j;\r\n}\r\n\r\nint randomizedSelect(int arr[], int p, int q, int i) {\r\n\r\n  if (p == q){\r\n    if(n <= 50) {\r\n      cout << \"Podtablica ma tylko jeden element - \" << arr[p] << endl << endl;\r\n    }\r\n    return arr[p];\r\n  } \r\n  int r = randPartition(arr, p, q);\r\n  int k = r - p + 1;\r\n  if(n <= 50) {\r\n    cout << \"Wybrany pivot: \" << arr[r] << \", p = \" \r\n    << p << \", q = \" << q << endl << \"Stan całej tablicy A po partition na podtablicy A[p...q]: \" << endl;\r\n    printArray(arr);\r\n    cout << \"Pivot jest \" << k << \". statystyką pozycyjną w tablicy A[p...q]\" << endl << endl;\r\n  }\r\n  if (k == i) return arr[r];\r\n  else if (i < k) return randomizedSelect(arr, p, r-1, i);\r\n  else return randomizedSelect(arr, r+1, q, i-k);\r\n\r\n}\r\n\r\nint main(int argc, char **argv){\r\n  if(argc > 1) {\r\n    //OBSŁUGA ARGUMENTU Z WIERSZA\r\n    if (strlen(argv[1]) == 0) {\r\n      return 1; // pusty string\r\n    }\r\n    char* p;\r\n    errno = 0;\r\n    long arg = strtol(argv[1], &p, 10);\r\n    if (*p != '"]
[514.186828, "o", "\\0' || errno != 0) {\r\n      return 1;\r\n    }\r\n    if (arg < INT_MIN || arg > INT_MAX) {\r\n      return 1;\r\n    }\r\n    cin >> n;\r\n    if (arg > n) {\r\n      cout << \"za duży numer szukanej statystyki!\" << endl;\r\n      return 0;\r\n    }\r\n    int array[n] = {0};\r\n    int element = 0;\r\n    int i = 0;\r\n    while(cin >> element) {\r\n      array[i] = element;\r\n      i++;\r\n    }\r\n    if(n <= 50) {\r\n      cout << \"Uwaga indeksy tablicy to liczby od 0 do n-1!\" << endl;\r\n      cout << \"Tablica początkowa:\" << endl << endl;\r\n      printArray(array);\r\n      cout << endl;\r\n    }\r\n    int result = randomizedSelect(array, 0, n-1, arg);\r\n    if(n <= 50) {\r\n      cout << \"Końcowy stan tablicy:\" << endl;\r\n      printArray(array);\r\n      cout << endl;\r\n      cout << \"Wynik: \" << result << \" to \" << arg << \". statystyka pozycyjna w tablicy: \" << endl;\r\n      quickSort(array, 0, n-1);\r\n      printArray(array);\r\n      cout << endl;\r\n    }\r\n    cout << n << \";\" << no_assigns << \";\" << no_comparisons << endl;\r\n  }\r\n  else {\r\n    cout "]
[514.186871, "o", "<< \"brakujący argument - statystyka pozycyjna\" << endl;\r\n  }\r\n  return 0;\r\n}"]
[514.188678, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[518.108562, "o", "g"]
[518.372557, "o", "e"]
[518.52057, "o", "n"]
[518.628367, "o", "e"]
[518.812522, "o", "r"]
[519.064318, "o", "a"]
[519.292605, "o", "t"]
[519.436562, "o", "o"]
[519.552225, "o", "r"]
[520.080284, "o", " "]
[520.896743, "o", "1"]
[523.50447, "o", "6"]
[524.220357, "o", " "]
[524.700319, "o", "|"]
[524.976523, "o", " "]
[526.764449, "o", "\b"]
[527.265321, "o", "\b"]
[527.295227, "o", "\b"]
[527.325287, "o", "\b"]
[527.355327, "o", "\b"]
[527.38574, "o", "\b"]
[527.416207, "o", "\b"]
[527.446521, "o", "\b"]
[527.476703, "o", "\b"]
[527.507161, "o", "\b"]
[527.537429, "o", "\b"]
[527.567943, "o", "\b"]
[527.598216, "o", "\b"]
[527.629199, "o", "\b"]
[527.66003, "o", "\b"]
[527.690293, "o", "\u0007"]
[527.720451, "o", "\u0007"]
[527.751337, "o", "\u0007"]
[527.781374, "o", "\u0007"]
[527.812063, "o", "\u0007"]
[528.236616, "o", "\u001b[1@."]
[528.336539, "o", "\u001b[1@/"]
[528.980226, "o", "\u001b[C"]
[529.481401, "o", "\u001b[C"]
[529.511514, "o", "\u001b[C"]
[529.541882, "o", "\u001b[C"]
[529.57233, "o", "\u001b[C"]
[529.60272, "o", "\u001b[C"]
[529.633039, "o", "\u001b[C"]
[529.664447, "o", "\u001b[C"]
[529.694556, "o", "\u001b[C"]
[529.725388, "o", "\u001b[C"]
[529.755331, "o", "\u001b[C"]
[529.785053, "o", "\u001b[C"]
[529.816218, "o", "\u001b[C"]
[529.846942, "o", "\u001b[C"]
[529.877712, "o", "\u001b[C"]
[529.90687, "o", "\u0007"]
[529.937272, "o", "\u0007"]
[529.967968, "o", "\u0007"]
[529.999052, "o", "\u0007"]
[530.029555, "o", "\u0007"]
[530.392392, "o", "."]
[530.48846, "o", "/"]
[531.0723, "o", "r"]
[531.276443, "o", "a"]
[531.408456, "o", "n"]
[531.536362, "o", "d"]
[531.652369, "o", "o"]
[531.844333, "o", "m"]
[531.956312, "o", "i"]
[532.108465, "o", "z"]
[532.316326, "o", "e"]
[532.524127, "o", "d"]
[533.124258, "o", "_"]
[533.776193, "o", "s"]
[533.928411, "o", "e"]
[534.080336, "o", "l"]
[534.192399, "o", "e"]
[534.392409, "o", "c"]
[534.612459, "o", "t"]
[534.844529, "o", " "]
[535.707382, "o", "4"]
[536.33163, "o", "\r\n"]
[536.333216, "o", "Uwaga indeksy tablicy to liczby od 0 do n-1!\r\nTablica początkowa:\r\n\r\n"]
[536.333262, "o", "11 14 25 16 19 24 1 6 13 15 0 10 8 9 27 2 \r\n\r\nWybrany pivot: 1, p = 0, q = 15\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n0 1 25 16 19 24 11 6 13 15 14 10 8 9 27 2 \r\nPivot jest 2. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nWybrany pivot: 13, p = 2, q = 15\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n0 1 2 11 6 10 8 9 13 15 14 24 16 19 27 25 \r\nPivot jest 7. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nWybrany pivot: 2, p = 2, q = 7\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n0 1 2 11 6 10 8 9 13 15 14 24 16 19 27 25 \r\nPivot jest 1. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nWybrany pivot: 10, p = 3, q = 7\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n0 1 2 9 6 8 10 11 13 15 14 24 16 19 27 25 \r\nPivot jest 4. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nWybrany pivot: 8, p = 3, q = 5\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n0 1 2 6 8 9 10 11 13 15 14 24 16 19 27 25 \r\nPivot jest 2. statystyką pozycyjną w tablicy A[p..."]
[536.333279, "o", "q]\r\n\r\nPodtablica ma tylko jeden element - 6\r\n\r\nKońcowy stan tablicy:\r\n0 1 2 6 8 9 10 11 13 15 14 24 16 19 27 25 \r\n\r\nWynik: 6 to 4. statystyka pozycyjna w tablicy: \r\n0 1 2 6 8 9 10 11 13 14 15 16 19 24 25 27 \r\n\r\n16;60;39\r\n"]
[536.333618, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[539.467266, "o", "./generator 16 | ./randomized_select 4"]
[541.172492, "o", "\b\u001b[K"]
[541.404348, "o", "1"]
[542.564883, "o", "\r\n"]
[542.569581, "o", "Uwaga indeksy tablicy to liczby od 0 do n-1!\r\nTablica początkowa:\r\n\r\n3 2 30 4 8 25 21 21 13 8 12 25 6 16 1 27 \r\n\r\n"]
[542.569873, "o", "Wybrany pivot: 13, p = 0, q = 15\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n1 2 4 8 3 8 12 6 13 25 21 25 21 16 30 27 \r\nPivot jest 9. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nWybrany pivot: 12, p = 0, q = 7\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n6 2 4 8 3 8 1 12 13 25 21 25 21 16 30 27 \r\nPivot jest 8. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nWybrany pivot: 1, p = 0, q = 6\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n1 2 4 8 3 8 6 12 13 25 21 25 21 16 30 27 \r\nPivot jest 1. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nKońcowy stan tablicy:\r\n1 2 4 8 3 8 6 12 13 25 21 25 21 16 30 27 \r\n\r\nWynik: 1 to 1. statystyka pozycyjna w tablicy: \r\n1 2 3 4 6 8 8 12 13 16 21 21 25 25 27 30 \r\n\r\n16;63;28\r\n"]
[542.570725, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[545.652086, "o", "./generator 16 | ./randomized_select 1"]
[546.956055, "o", "0"]
[548.416101, "o", "\b\u001b[K"]
[548.968314, "o", "5"]
[549.856087, "o", "\r\n"]
[549.862089, "o", "Uwaga indeksy tablicy to liczby od 0 do n-1!\r\nTablica początkowa:\r\n\r\n24 29 23 11 12 26 26 31 26 9 3 1 4 8 6 18 \r\n\r\nWybrany pivot: 18, p = 0, q = 15\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n6 11 12 9 3 1 4 8 18 29 23 26 26 31 26 24 \r\nPivot jest 9. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nWybrany pivot: 26, p = 9, q = 15\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n6 11 12 9 3 1 4 8 18 24 23 26 26 31 26 29 \r\nPivot jest 3. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nWybrany pivot: 26, p = 12, q = 15\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n6 11 12 9 3 1 4 8 18 24 23 26 26 31 26 29 \r\nPivot jest 1. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nWybrany pivot: 29, p = 13, q = 15\r\nStan całej tablicy A po partition na podtablicy A[p...q]: \r\n6 11 12 9 3 1 4 8 18 24 23 26 26 26 29 31 \r\nPivot jest 2. statystyką pozycyjną w tablicy A[p...q]\r\n\r\nKońcowy stan tablicy:\r\n6 11 12 9 3 1 4 8 18 24 23 26 26 26 29 31 \r\n\r\nWynik: 29 to 15. statystyka pozycyjna w tabl"]
[549.862399, "o", "icy: \r\n1 3 4 6 8 9 11 12 18 23 24 26 26 26 29 31 \r\n\r\n16;54;26\r\n"]
[549.862681, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[552.716201, "o", "./generator 16 | ./randomized_select 15"]
[555.280231, "o", "\b"]
[555.795858, "o", "\b"]
[556.29618, "o", "\b"]
[556.326488, "o", "\b"]
[556.356423, "o", "\b"]
[556.386512, "o", "\b"]
[556.41753, "o", "\b"]
[556.447483, "o", "\b"]
[556.477688, "o", "\b"]
[557.016169, "o", "\b\u001b[1P"]
[557.200176, "o", "\b\u001b[1P"]
[557.360183, "o", "\b\u001b[1P"]
[557.504499, "o", "\b\u001b[1P"]
[557.668383, "o", "\b\u001b[1P"]
[557.816325, "o", "\b\u001b[1P"]
[557.972368, "o", "\b\u001b[1P"]
[558.128392, "o", "\b\u001b[1P"]
[558.28832, "o", "\b\u001b[1P"]
[558.46435, "o", "\b\u001b[1P"]
[558.788466, "o", "\b\u001b[1P"]
[560.06016, "o", "\u001b[C"]
[560.560366, "o", "\u001b[C"]
[560.590238, "o", "\u001b[C"]
[560.620467, "o", "\u001b[C"]
[560.65154, "o", "\u001b[C"]
[560.682028, "o", "\u001b[C"]
[560.713056, "o", "\u001b[C"]
[560.744188, "o", "\u001b[C"]
[560.774366, "o", "\u001b[C"]
[560.804555, "o", "\u0007"]
[563.026997, "o", "\b\u001b[K"]
[563.208153, "o", "\b\u001b[K"]
[563.388206, "o", "2"]
[564.224114, "o", "\b\u001b[K"]
[564.364121, "o", "4"]
[564.772193, "o", "\r\n"]
[564.777396, "o", "Uwaga indeksy tablicy to liczby od 0 do n-1!\r\nTablica początkowa:\r\n\r\n15 3 26 23 20 23 13 6 10 26 24 20 16 20 7 24 \r\n\r\nPodtablica ma tylko jeden element - 23\r\n\r\nWybrany pivot (mediana median): 23\r\nPivot jest 2. statystyką pozycyjną w podtablicy\r\n\r\nWybrany pivot (mediana median): 23\r\nPivot jest 11. statystyką pozycyjną w podtablicy\r\n\r\nPodtablica ma tylko jeden element - 7\r\n\r\nWybrany pivot (mediana median): 7\r\nPivot jest 1. statystyką pozycyjną w podtablicy\r\n\r\nWybrany pivot (mediana median): 7\r\nPivot jest 3. statystyką pozycyjną w podtablicy\r\n\r\nPodtablica ma tylko jeden element - 15\r\n\r\n"]
[564.777498, "o", "Wybrany pivot (mediana median): 15\r\nPivot jest 1. statystyką pozycyjną w podtablicy\r\n\r\nWybrany pivot (mediana median): 15\r\nPivot jest 3. statystyką pozycyjną w podtablicy\r\n\r\nPodtablica ma tylko jeden element - 10\r\n\r\nWybrany pivot (mediana median): 10\r\nPivot jest 1. statystyką pozycyjną w podtablicy\r\n\r\nKońcowy stan tablicy:\r\n3 6 7 10 13 15 16 20 20 20 23 26 23 26 24 24 \r\n\r\nWynik: 10 to 4. statystyka pozycyjna w tablicy: \r\n3 6 7 10 13 15 16 20 20 20 23 23 24 24 26 26 \r\n\r\n16;204;140\r\n"]
[564.778453, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[566.912203, "o", "./generator 16 | ./select 4"]
[572.472019, "o", "\b"]
[572.972521, "o", "\b"]
[573.002467, "o", "\b"]
[573.276186, "o", "\u001b[C"]
[573.540134, "o", "\u001b[C"]
[573.752009, "o", "\u001b[C"]
[574.043788, "o", "\b\u001b[K"]
[574.543396, "o", "\b\u001b[K"]
[574.573908, "o", "\b\u001b[K"]
[574.604211, "o", "\b\u001b[K"]
[574.63424, "o", "\b\u001b[K"]
[574.665183, "o", "\b\u001b[K"]
[574.695439, "o", "\b\u001b[K"]
[574.725833, "o", "\b\u001b[K"]
[574.756781, "o", "\b\u001b[K"]
[574.786997, "o", "\b\u001b[K"]
[574.817068, "o", "\b\u001b[K"]
[574.847667, "o", "\b\u001b[K"]
[574.878092, "o", "\b\u001b[K"]
[574.90803, "o", "\b\u001b[K"]
[574.937996, "o", "\b\u001b[K"]
[574.969074, "o", "\b\u001b[K"]
[574.999748, "o", "\b\u001b[K"]
[575.030339, "o", "\b\u001b[K"]
[575.06081, "o", "\b\u001b[K"]
[575.091908, "o", "\b\u001b[K"]
[575.123021, "o", "\b\u001b[K"]
[575.153131, "o", "\b\u001b[K"]
[575.183847, "o", "\b\u001b[K"]
[575.214199, "o", "\b\u001b[K"]
[575.245131, "o", "\b\u001b[K"]
[575.275383, "o", "\b\u001b[K"]
[575.304952, "o", "\b\u001b[K"]
[575.335901, "o", "\u0007"]
[575.366328, "o", "\u0007"]
[575.395941, "o", "\u0007"]
[575.426152, "o", "\u0007"]
[575.457045, "o", "\u0007"]
[575.487268, "o", "\u0007"]
[575.517435, "o", "\u0007"]
[575.548039, "o", "\u0007"]
[575.578006, "o", "\u0007"]
[575.608923, "o", "\u0007"]
[575.639706, "o", "\u0007"]
[575.947752, "o", "c"]
[576.152099, "o", "a"]
[576.388048, "o", "t"]
[576.528079, "o", " "]
[577.4323, "o", "s"]
[577.652085, "o", "e"]
[578.076068, "o", "l"]
[578.188016, "o", "e"]
[578.440015, "o", "c"]
[578.699698, "o", "t"]
[580.215941, "o", "."]
[580.359979, "o", "c"]
[580.579836, "o", "p"]
[580.736079, "o", "p"]
[583.395298, "o", "\r\n"]
[583.396498, "o", "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <errno.h>\r\n#include <limits.h>\r\n#include <string.h>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint n = 0;\r\nint no_assigns = 0;\r\nint no_comparisons = 0;\r\n\r\nvoid assignKey(int& i, int& j) {\r\n  i = j;\r\n  no_assigns++;\r\n}\r\n\r\nvoid swap(int& i, int& j) {\r\n  int help;\r\n  assignKey(help, i);\r\n  assignKey(i, j);\r\n  assignKey(j, help);\r\n}\r\n\r\nbool compare(int i, int j) {\r\n  no_comparisons++;\r\n  if(i > j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nbool compareEquals(int i, int j) {\r\n  no_comparisons++;\r\n  if(i == j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// ALGORYTM SORTUJĄCY ABY WYŚWIETLIĆ POSORTOWANA TABLICE\r\n// to się nie wlicza do liczby porównań i przestawień\r\nint lomutoPartition(int array[], int start, int end) {\r\n  int pivot = array[start];\r\n  int i = start;\r\n  for(int j = start+1; j <= end; j++) {\r\n    if(pivot > array[j]) {\r\n      i++;\r\n      int help = array[i];\r\n      array[i] = array[j];\r\n      array[j] = help;\r\n    }\r\n  }\r\n  int help"]
[583.396625, "o", " = array[i];\r\n      array[i] = array[start];\r\n      array[start] = help;\r\n  return i;\r\n}\r\n\r\nvoid quickSort(int array[], int start, int end) {\r\n  if(start < end) {\r\n    int pivotIndex = lomutoPartition(array, start, end);\r\n    quickSort(array, start, pivotIndex-1);\r\n    quickSort(array, pivotIndex+1, end);\r\n  }\r\n}\r\n\r\n// ALGORYTM SORTUJĄCY TABLICE MEDIAN\r\nvoid insertionSort(int array[], int p, int q) {\r\n  int key;\r\n  for(int j = p+1; j <= q; j++) {\r\n    assignKey(key, array[j]);\r\n    int i = j-1;\r\n    while (i >= 0 && compare(array[i], key)) {\r\n      assignKey(array[i+1], array[i]);\r\n      i--;\r\n    }\r\n    assignKey(array[i+1], key);\r\n  }\r\n}\r\n\r\nvoid printArray(int array[], int arrayLength) {\r\n  if(n < 50) {\r\n    for(int i = 0; i < arrayLength; i++) {\r\n      cout << array[i] << \" \";\r\n    }\r\n    cout << endl;\r\n  }\r\n}\r\n\r\nint partition(int arr[], int p, int q, int pivot) {\r\n  //znajdujemy indeks pivota (bo przy tablicy median go utraciliśmy)\r\n  int pivotIndex;\r\n  for(int i = p; i <= q; i++) {\r\n    if(compareEqual"]
[583.396729, "o", "s(pivot, arr[i])) {\r\n      pivotIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  if(pivotIndex != p)\r\n    swap(arr[pivotIndex], arr[p]);\r\n  pivotIndex = p;\r\n  int j = p;\r\n  for(int i = p+1; i <= q; i++) {\r\n    if(compare(arr[pivotIndex], arr[i])) {\r\n      j++;\r\n      swap(arr[j], arr[i]);\r\n    }\r\n  }\r\n  swap(arr[j], arr[p]);\r\n  return j;\r\n}\r\n\r\nint select(int arr[], int p, int q, int i) {\r\n    if (p == q){\r\n    if(n <= 50) {\r\n      cout << \"Podtablica ma tylko jeden element - \" << arr[p] << endl << endl;\r\n    }\r\n    return arr[p];\r\n  }\r\n  //zadeklarowanie tablicy median o rozmiarze sufit z rozmiaru tablicy przez 5\r\n  int medianTabSize = ( ((q-p+1)%5 == 0) ? ((q-p+1)/5): (((q-p+1)/5)+1) );\r\n  int medianTab[medianTabSize];\r\n  int index = 0;\r\n  for(int i = p; i <= q; i += 5) {\r\n    if(i + 4 <= q) {\r\n      insertionSort(arr, i, i+4);\r\n      assignKey(medianTab[index], arr[i+2]);\r\n      index++;\r\n    }\r\n    else {\r\n      insertionSort(arr, i, q);\r\n      assignKey(medianTab[index], arr[i + ((q-i)/2)]);\r\n    }\r\n  }\r\n  int med"]
[583.396777, "o", "ianOfMedian = select(medianTab, 0, medianTabSize-1, ((medianTabSize + 1)/2));\r\n  int r = partition(arr, p, q, medianOfMedian);\r\n  int k = r - p + 1;\r\n  if(n <= 50) {\r\n    cout << \"Wybrany pivot (mediana median): \" << arr[r] << endl;\r\n    cout << \"Pivot jest \" << k << \". statystyką pozycyjną w podtablicy\" << endl << endl;\r\n  }\r\n  if (k == i) return arr[r];\r\n  else if (i < k) return select(arr, p, r-1, i);\r\n  else return select(arr, r+1, q, i-k);\r\n\r\n}\r\n\r\nint main(int argc, char **argv){\r\n  if(argc > 1) {\r\n    //OBSŁUGA ARGUMENTU Z WIERSZA\r\n    if (strlen(argv[1]) == 0) {\r\n      return 1; // pusty string\r\n    }\r\n    char* p;\r\n    errno = 0;\r\n    long arg = strtol(argv[1], &p, 10);\r\n    if (*p != '\\0' || errno != 0) {\r\n      return 1;\r\n    }\r\n    if (arg < INT_MIN || arg > INT_MAX) {\r\n      return 1;\r\n    }\r\n    cin >> n;\r\n    if (arg > n) {\r\n      cout << \"za duży numer szukanej statystyki!\" << endl;\r\n      return 0;\r\n    }\r\n    int array[n] = {0};\r\n    int element = 0;\r\n    int i = 0;\r\n    while(cin >> elem"]
[583.396843, "o", "ent) {\r\n      array[i] = element;\r\n      i++;\r\n    }\r\n    if(n <= 50) {\r\n      cout << \"Uwaga indeksy tablicy to liczby od 0 do n-1!\" << endl;\r\n      cout << \"Tablica początkowa:\" << endl << endl;\r\n      printArray(array, n);\r\n      cout << endl;\r\n    }\r\n    int result = select(array, 0, n-1, arg);\r\n    if(n <= 50) {\r\n      cout << \"Końcowy stan tablicy:\" << endl;\r\n      printArray(array, n);\r\n      cout << endl;\r\n      cout << \"Wynik: \" << result << \" to \" << arg << \". statystyka pozycyjna w tablicy: \" << endl;\r\n      quickSort(array, 0, n-1);\r\n      printArray(array, n);\r\n      cout << endl;\r\n    }\r\n    cout << n << \";\" << no_assigns << \";\" << no_comparisons << endl;\r\n    \r\n  }\r\n  else {\r\n    cout << \"brakujący argument - statystyka pozycyjna\" << endl;\r\n  }\r\n  return 0;\r\n}\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[585.276003, "o", "cat select.cpp"]
[585.651983, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b./generator 16 | ./select 4"]
[587.824229, "o", "\b\u001b[K"]
[588.315663, "o", "1"]
[588.968497, "o", "\r\n"]
[588.973261, "o", "Uwaga indeksy tablicy to liczby od 0 do n-1!\r\nTablica początkowa:\r\n\r\n8 4 6 28 30 12 1 7 9 22 12 29 6 26 23 11 \r\n\r\nPodtablica ma tylko jeden element - 11\r\n\r\nWybrany pivot (mediana median): 11\r\nPivot jest 2. statystyką pozycyjną w podtablicy\r\n\r\nWybrany pivot (mediana median): 11\r\nPivot jest 8. statystyką pozycyjną w podtablicy\r\n\r\nPodtablica ma tylko jeden element - 6\r\n\r\nWybrany pivot (mediana median): 6\r\nPivot jest 1. statystyką pozycyjną w podtablicy\r\n\r\nWybrany pivot (mediana median): 6\r\nPivot jest 3. statystyką pozycyjną w podtablicy\r\n\r\nPodtablica ma tylko jeden element - 1\r\n\r\nWybrany pivot (mediana median): 1\r\nPivot jest 1. statystyką pozycyjną w podtablicy\r\n\r\nKońcowy stan tablicy:\r\n"]
[588.973385, "o", "1 4 6 6 7 8 9 11 30 12 22 12 23 26 29 28 \r\n\r\nWynik: 1 to 1. statystyka pozycyjna w tablicy: \r\n1 4 6 6 7 8 9 11 12 12 22 23 26 28 29 30 \r\n\r\n16;137;99\r\n"]
[588.974204, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[589.97986, "o", "./generator 16 | ./select 1"]
[590.567795, "o", "\b\u001b[K"]
[590.927951, "o", "1"]
[591.627867, "o", "5"]
[593.271852, "o", "\r\n"]
[593.276701, "o", "Uwaga indeksy tablicy to liczby od 0 do n-1!\r\nTablica początkowa:\r\n\r\n20 28 17 11 8 29 11 11 28 5 30 6 8 7 10 14 \r\n\r\nPodtablica ma tylko jeden element - 17\r\n\r\nWybrany pivot (mediana median): 17\r\nPivot jest 2. statystyką pozycyjną w podtablicy\r\n\r\nWybrany pivot (mediana median): 17\r\nPivot jest 11. statystyką pozycyjną w podtablicy\r\n\r\nPodtablica ma tylko jeden element - 28\r\n\r\nWybrany pivot (mediana median): 28\r\nPivot jest 2. statystyką pozycyjną w podtablicy\r\n"]
[593.276969, "o", "\r\nPodtablica ma tylko jeden element - 29\r\n\r\nWybrany pivot (mediana median): 29\r\nPivot jest 2. statystyką pozycyjną w podtablicy\r\n\r\nKońcowy stan tablicy:\r\n14 6 7 8 8 10 11 11 11 5 17 20 28 28 29 30 \r\n\r\nWynik: 29 to 15. statystyka pozycyjna w tablicy: \r\n5 6 7 8 8 10 11 11 11 14 17 20 28 28 29 30 \r\n\r\n16;185;129\r\n"]
[593.27769, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[594.45584, "o", "./generator 16 | ./select 15"]
[596.079705, "o", "\b\u001b[K"]
[596.647571, "o", "\b\u001b[K"]
[597.434719, "o", "8"]
[597.652004, "o", "\r\n"]
[597.657314, "o", "Uwaga indeksy tablicy to liczby od 0 do n-1!\r\nTablica początkowa:\r\n\r\n19 21 1 14 6 27 31 5 17 30 6 13 1 0 24 23 \r\n\r\nPodtablica ma tylko jeden element - 14\r\n\r\nWybrany pivot (mediana median): 14\r\nPivot jest 2. statystyką pozycyjną w podtablicy\r\n\r\nWybrany pivot (mediana median): 14\r\nPivot jest 8. statystyką pozycyjną w podtablicy\r\n\r\nKońcowy stan tablicy:\r\n13 1 1 5 6 0 6 14 21 27 30 31 17 19 24 23 \r\n\r\nWynik: 14 to 8. statystyka pozycyjna w tablicy: \r\n0 1 1 5 6 6 13 14 17 19 21 23 24 27 30 31 \r\n\r\n16;116;83\r\n"]
[597.658315, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[604.771621, "o", "#"]
[607.895281, "o", "Z"]
[609.167394, "o", "A"]
[609.35968, "o", "D"]
[609.519808, "o", "A"]
[609.867674, "o", "N"]
[609.975761, "o", "I"]
[610.123742, "o", "E"]
[610.375794, "o", " "]
[610.951783, "o", "2"]
[611.319553, "o", " "]
[611.679551, "o", "-"]
[611.943784, "o", " "]
[612.439526, "o", "w"]
[612.783719, "o", "y"]
[613.199501, "o", "n"]
[613.30355, "o", "i"]
[613.611491, "o", "k"]
[613.711499, "o", "i"]
[614.051583, "o", " "]
[614.231454, "o", "z"]
[614.427592, "o", "n"]
[614.591708, "o", "a"]
[614.815615, "o", "j"]
[614.991649, "o", "d"]
[615.619557, "o", "u"]
[615.787687, "o", "j"]
[616.89975, "o", "ą"]
[617.139767, "o", " "]
[617.263661, "o", "s"]
[617.339518, "o", "i"]
[617.675466, "o", "ę"]
[617.871748, "o", " "]
[618.039728, "o", "n"]
[618.159473, "o", "a"]
[618.311671, "o", " "]
[618.543645, "o", "w"]
[618.899584, "o", "y"]
[619.019624, "o", "k"]
[619.171487, "o", "r"]
[619.382846, "o", "e"]
[619.947295, "o", "s"]
[620.111524, "o", "a"]
[620.343718, "o", "c"]
[620.975602, "o", "h"]
[626.563415, "o", "  \r"]
[627.011777, "o", "("]
[627.659459, "o", "s"]
[627.85953, "o", "e"]
[627.991419, "o", "l"]
[628.111512, "o", "e"]
[628.295249, "o", "c"]
[628.507609, "o", "t"]
[628.639482, "o", " "]
[629.027554, "o", "b"]
[629.191622, "o", "a"]
[629.387413, "o", "r"]
[629.571262, "o", "d"]
[629.763403, "o", "z"]
[630.327468, "o", "i"]
[630.523363, "o", "e"]
[630.651525, "o", "j"]
[630.883635, "o", " "]
[631.031408, "o", "s"]
[631.179285, "o", "k"]
[631.375479, "o", "o"]
[631.559445, "o", "m"]
[631.77176, "o", "p"]
[631.975469, "o", "l"]
[632.179416, "o", "i"]
[632.403152, "o", "k"]
[632.475581, "o", "o"]
[632.731114, "o", "w"]
[632.939582, "o", "a"]
[633.063426, "o", "n"]
[633.311522, "o", "y"]
[633.411401, "o", " "]
[633.659519, "o", "o"]
[634.523295, "o", "d"]
[634.70739, "o", " "]
[635.45953, "o", "r"]
[635.703479, "o", "a"]
[635.823391, "o", "n"]
[635.979363, "o", "d"]
[636.119412, "o", "o"]
[636.467367, "o", "m"]
[636.619241, "o", "i"]
[636.831345, "o", "z"]
[637.011181, "o", "e"]
[637.195222, "o", "d"]
[637.35934, "o", " "]
[637.611424, "o", "s"]
[637.767289, "o", "e"]
[637.927314, "o", "l"]
[638.031157, "o", "e"]
[638.227111, "o", "c"]
[638.419472, "o", "t"]
[639.131068, "o", ")"]
[643.331279, "o", "\b"]
[653.555, "o", ",)\b"]
[653.935425, "o", " )\b"]
[654.262937, "o", "o)\b"]
[654.439063, "o", "b)\b"]
[654.727363, "o", "a)\b"]
[654.898996, "o", " )\b"]
[655.103083, "o", "m)\b"]
[655.915174, "o", "\b\u001b[1P)\b"]
[656.371113, "o", "ś)\b"]
[656.591335, "o", "r)\b"]
[656.746866, "o", "e)\b"]
[656.903366, "o", "d)\b"]
[657.04711, "o", "n)\b"]
[657.09907, "o", "i)\b"]
[657.315114, "o", "o)\b"]
[657.503458, "o", " )\b"]
[657.647105, "o", "z)\b"]
[657.883289, "o", "e)\b"]
[657.991481, "o", " )\b"]
[658.227007, "o", "z)\b"]
[658.534878, "o", "ł)\b"]
[658.74335, "o", "o)\b"]
[659.059308, "o", "ż)\b"]
[659.330904, "o", "o)\b"]
[659.739316, "o", "n)\b"]
[659.923322, "o", "o)\b"]
[660.295139, "o", "ś)\b"]
[660.531055, "o", "c)\b"]
[660.635177, "o", "i)\b"]
[661.003387, "o", "ą)\b"]
[661.271286, "o", " )\b"]
[661.655337, "o", "n)\b"]
[666.82721, "o", " )\b"]
[681.135113, "o", "\b\u001b[1P)\b"]
[681.926811, "o", "\b"]
[682.426546, "o", "\b"]
[682.456591, "o", "\b"]
[682.486414, "o", "\b"]
[682.516609, "o", "\b"]
[682.547146, "o", "\b"]
[682.577526, "o", "\b"]
[682.607975, "o", "\b"]
[682.638352, "o", "\b"]
[682.668394, "o", "\b"]
[682.698843, "o", "\b"]
[682.729144, "o", "\b"]
[683.518919, "o", "\u001b[C"]
[684.019537, "o", "\u001b[C"]
[684.049683, "o", "\u001b[C"]
[684.079434, "o", "\u001b[C"]
[684.109838, "o", "\u001b[C"]
[684.140442, "o", "\u001b[C"]
[684.170594, "o", "\u001b[C"]
[684.201097, "o", "\u001b[C"]
[684.231441, "o", "\u001b[C"]
[684.261383, "o", "\u001b[C"]
[684.292353, "o", "\u001b[C"]
[684.322609, "o", "\u001b[C"]
[684.352309, "o", "\u001b[C"]
[684.383348, "o", "\u0007"]
[684.413016, "o", "\u0007"]
[684.443694, "o", "\u0007"]
[686.934971, "o", "\r\n"]
[686.935355, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[689.454859, "o", "#"]
[689.934973, "o", " "]
[690.938786, "o", "Z"]
[691.778856, "o", "A"]
[692.026556, "o", "D"]
[692.190855, "o", "A"]
[692.402815, "o", "N"]
[692.498788, "o", "I"]
[692.638666, "o", "E"]
[693.1308, "o", " "]
[693.206684, "o", "3"]
[694.17487, "o", " "]
[694.34282, "o", "-"]
[694.78667, "o", " "]
[697.678777, "o", "\b\u001b[K"]
[697.870778, "o", "\b\u001b[K"]
[698.238357, "o", "\b\u001b[K"]
[698.746567, "o", "\r\n"]
[698.746934, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[699.614564, "o", "c"]
[699.834852, "o", "a"]
[700.046655, "o", "t"]
[700.210656, "o", " "]
[700.778758, "o", "k"]
[700.918638, "o", "s"]
[701.102764, "o", "e"]
[701.590788, "o", "l"]
[701.734611, "o", "e"]
[701.966797, "o", "c"]
[702.170662, "o", "t"]
[702.303245, "o", "."]
[702.49064, "o", "c"]
[702.598567, "o", "p"]
[702.77061, "o", "p"]
[703.254698, "o", "\r\n"]
[703.25687, "o", "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <errno.h>\r\n#include <limits.h>\r\n#include <string.h>\r\n#include <iostream>\r\n#include <stdbool.h>\r\n#include <time.h>\r\n#include <sys/time.h>\r\n\r\n\r\nusing namespace std;\r\n\r\nint n = 0;\r\nint no_assigns = 0;\r\nint no_comparisons = 0;\r\n\r\nstruct timeval tvalBefore, tvalAfter;\r\n\r\nvoid assignKey(int& i, int& j) {\r\n  i = j;\r\n  no_assigns++;\r\n}\r\n\r\nvoid swap(int& i, int& j) {\r\n  int help;\r\n  assignKey(help, i);\r\n  assignKey(i, j);\r\n  assignKey(j, help);\r\n}\r\n\r\nbool compare(int i, int j) {\r\n  no_comparisons++;\r\n  if(i > j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nbool compareEquals(int i, int j) {\r\n  no_comparisons++;\r\n  if(i == j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// ALGORYTM SORTUJĄCY ABY WYŚWIETLIĆ POSORTOWANA TABLICE\r\n// to się nie wlicza do liczby porównań i przestawień\r\nint lomutoPartition(int array[], int start, int end) {\r\n  int pivot = array[start];\r\n  int i = start;\r\n  for(int j = start+1; j <= end; j++) {\r\n    if(pivot > array[j]) {\r\n      i"]
[703.256966, "o", "++;\r\n      int help = array[i];\r\n      array[i] = array[j];\r\n      array[j] = help;\r\n    }\r\n  }\r\n  int help = array[i];\r\n      array[i] = array[start];\r\n      array[start] = help;\r\n  return i;\r\n}\r\n\r\nvoid quickSort(int array[], int start, int end) {\r\n  if(start < end) {\r\n    int pivotIndex = lomutoPartition(array, start, end);\r\n    quickSort(array, start, pivotIndex-1);\r\n    quickSort(array, pivotIndex+1, end);\r\n  }\r\n}\r\n\r\n// ALGORYTM SORTUJĄCY TABLICE MEDIAN\r\nvoid insertionSort(int array[], int p, int q) {\r\n  int key;\r\n  for(int j = p+1; j <= q; j++) {\r\n    assignKey(key, array[j]);\r\n    int i = j-1;\r\n    while (i >= 0 && compare(array[i], key)) {\r\n      assignKey(array[i+1], array[i]);\r\n      i--;\r\n    }\r\n    assignKey(array[i+1], key);\r\n  }\r\n}\r\n\r\nvoid printArray(int array[], int arrayLength) {\r\n  if(n < 50) {\r\n    for(int i = 0; i < arrayLength; i++) {\r\n      cout << array[i] << \" \";\r\n    }\r\n    cout << endl;\r\n  }\r\n}\r\n\r\nint partition(int arr[], int p, int q, int pivot) {\r\n  //znajdujemy indeks pivota (bo pr"]
[703.25702, "o", "zy tablicy median go utraciliśmy)\r\n  int pivotIndex;\r\n  for(int i = p; i <= q; i++) {\r\n    if(compareEquals(pivot, arr[i])) {\r\n      pivotIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  if(pivotIndex != p)\r\n    swap(arr[pivotIndex], arr[p]);\r\n  pivotIndex = p;\r\n  int j = p;\r\n  for(int i = p+1; i <= q; i++) {\r\n    if(compare(arr[pivotIndex], arr[i])) {\r\n      j++;\r\n      swap(arr[j], arr[i]);\r\n    }\r\n  }\r\n  swap(arr[j], arr[p]);\r\n  return j;\r\n}\r\n\r\nint select(int arr[], int p, int q, int i, int k) {\r\n    if (p == q){\r\n    if(n <= 50) {\r\n      cout << \"Podtablica ma tylko jeden element - \" << arr[p] << endl << endl;\r\n    }\r\n    return arr[p];\r\n  }\r\n  //zadeklarowanie tablicy median o rozmiarze sufit z rozmiaru tablicy przez k\r\n  int medianTabSize = ( ((q-p+1)%k == 0) ? ((q-p+1)/k): (((q-p+1)/k)+1) );\r\n  int medianTab[medianTabSize];\r\n  int index = 0;\r\n  for(int i = p; i <= q; i += k) {\r\n    if(i + (k-1) <= q) {\r\n      insertionSort(arr, i, i+k-1);\r\n      assignKey(medianTab[index], arr[i+((k-1)/2)]);\r\n      index++;\r\n "]
[703.257056, "o", "   }\r\n    else {\r\n      insertionSort(arr, i, q);\r\n      assignKey(medianTab[index], arr[i + ((q-i)/2)]);\r\n    }\r\n  }\r\n  int medianOfMedian = select(medianTab, 0, medianTabSize-1, ((medianTabSize + 1)/2), k);\r\n  int r = partition(arr, p, q, medianOfMedian);\r\n  int l = r - p + 1;\r\n  if(n <= 50) {\r\n    cout << \"Wybrany pivot (mediana median): \" << arr[r] << endl;\r\n    cout << \"Pivot jest \" << l << \". statystyką pozycyjną w podtablicy\" << endl << endl;\r\n  }\r\n  if (l == i) return arr[r];\r\n  else if (i < l) return select(arr, p, r-1, i, k);\r\n  else return select(arr, r+1, q, i-l, k);\r\n\r\n}\r\n\r\nint main(int argc, char **argv){\r\n  if(argc > 2) {\r\n    //OBSŁUGA ARGUMENTU Z WIERSZA\r\n    if (strlen(argv[1]) == 0) {\r\n      return 1; // pusty string\r\n    }\r\n    char* p;\r\n    errno = 0;\r\n    long arg = strtol(argv[1], &p, 10);\r\n    if (*p != '\\0' || errno != 0) {\r\n      return 1;\r\n    }\r\n    if (arg < INT_MIN || arg > INT_MAX) {\r\n      return 1;\r\n    }\r\n    //OBSŁUGA DRUGIEGO ARGUMENTU Z WIERSZA - k\r\n    if (strlen(argv"]
[703.257093, "o", "[2]) == 0) {\r\n      return 1; // pusty string\r\n    }\r\n    long k = strtol(argv[2], &p, 10);\r\n    if (*p != '\\0' || errno != 0) {\r\n      return 1;\r\n    }\r\n    if (arg < INT_MIN || arg > INT_MAX) {\r\n      return 1;\r\n    }\r\n    cin >> n;\r\n    if (arg > n) {\r\n      cout << \"za duży numer szukanej statystyki!\" << endl;\r\n      return 0;\r\n    }\r\n    int array[n] = {0};\r\n    int element = 0;\r\n    int i = 0;\r\n    while(cin >> element) {\r\n      array[i] = element;\r\n      i++;\r\n    }\r\n    if(n <= 50) {\r\n      cout << \"Uwaga indeksy tablicy to liczby od 0 do n-1!\" << endl;\r\n      cout << \"Tablica początkowa:\" << endl << endl;\r\n      printArray(array, n);\r\n      cout << endl;\r\n    }\r\n    gettimeofday (&tvalBefore, NULL);\r\n    int result = select(array, 0, n-1, arg, k);\r\n    gettimeofday (&tvalAfter, NULL);\r\n    if(n <= 50) {\r\n      cout << \"Końcowy stan tablicy:\" << endl;\r\n      printArray(array, n);\r\n      cout << endl;\r\n      cout << \"Wynik: \" << result << \" to \" << arg << \". statystyka pozycyjna w tablicy: \" << endl"]
[703.257134, "o", ";\r\n\r\n      quickSort(array, 0, n-1);\r\n      printArray(array, n);\r\n      cout << endl;\r\n    }\r\n    int time = ((tvalAfter.tv_sec - tvalBefore.tv_sec)*1000000L+tvalAfter.tv_usec) - tvalBefore.tv_usec;\r\n    cout << n << \";\" << no_assigns << \";\" << no_comparisons << \";\" << time << endl;\r\n    \r\n  }\r\n  else {\r\n    cout << \"wywołanie: ./kselect i-ta_stat_poz k-elementowe_grupy\" << endl;\r\n  }\r\n  return 0;\r\n}"]
[703.257879, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[704.954829, "o", "g"]
[705.638831, "o", "+"]
[705.810695, "o", "+"]
[706.118599, "o", " "]
[706.286696, "o", "-"]
[706.518549, "o", "o"]
[706.982605, "o", " "]
[707.322548, "o", "k"]
[707.494507, "o", "s"]
[707.658568, "o", "e"]
[707.822601, "o", "l"]
[707.914536, "o", "e"]
[708.122541, "o", "c"]
[708.318647, "o", "t"]
[708.710613, "o", " "]
[708.942535, "o", "k"]
[709.126639, "o", "s"]
[709.301654, "o", "e"]
[709.502568, "o", "l"]
[709.610574, "o", "e"]
[709.826654, "o", "c"]
[710.070683, "o", "t"]
[710.642676, "o", "."]
[710.758689, "o", "c"]
[710.930604, "o", "p"]
[711.078598, "o", "p"]
[711.718389, "o", "\r\n"]
[712.053854, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[746.298364, "o", "."]
[746.358243, "o", "/"]
[747.094209, "o", "g"]
[747.410302, "o", "e"]
[747.618306, "o", "n"]
[747.782251, "o", "e"]
[748.098198, "o", "r"]
[748.370436, "o", "a"]
[748.638113, "o", "t"]
[748.802301, "o", "o"]
[748.918314, "o", "r"]
[749.378345, "o", " "]
[750.114311, "o", "1"]
[750.557889, "o", "6"]
[750.942351, "o", " "]
[751.430086, "o", "|"]
[751.738324, "o", " "]
[753.138144, "o", "."]
[753.218238, "o", "/"]
[753.602153, "o", "k"]
[754.014563, "o", "s"]
[754.374265, "o", "e"]
[754.602261, "o", "l"]
[754.745994, "o", "e"]
[755.254191, "o", "c"]
[755.698285, "o", "t"]
[755.990336, "o", " "]
[761.230017, "o", "1"]
[761.362032, "o", "0"]
[761.841554, "o", " "]
[762.445989, "o", "7"]
[765.69401, "o", "\r\n"]
[765.699854, "o", "Uwaga indeksy tablicy to liczby od 0 do n-1!\r\nTablica początkowa:\r\n\r\n6 23 20 6 22 12 31 17 29 9 6 20 10 14 11 17 \r\n\r\nPodtablica ma tylko jeden element - 20\r\n\r\nWybrany pivot (mediana median): 20\r\nPivot jest 2. statystyką pozycyjną w podtablicy\r\n\r\nWybrany pivot (mediana median): 20\r\nPivot jest 11. statystyką pozycyjną w podtablicy\r\n\r\n"]
[765.699958, "o", "Podtablica ma tylko jeden element - 10\r\n\r\nWybrany pivot (mediana median): 10\r\nPivot jest 1. statystyką pozycyjną w podtablicy\r\n\r\nWybrany pivot (mediana median): 10\r\nPivot jest 5. statystyką pozycyjną w podtablicy\r\n\r\nPodtablica ma tylko jeden element - 14\r\n\r\nWybrany pivot (mediana median): 14\r\nPivot jest 3. statystyką pozycyjną w podtablicy\r\n\r\nPodtablica ma tylko jeden element - 17\r\n\r\nWybrany pivot (mediana median): 17\r\nPivot jest 1. statystyką pozycyjną w podtablicy\r\n\r\nPodtablica ma tylko jeden element - 17\r\n\r\n"]
[765.700181, "o", "Końcowy stan tablicy:\r\n6 6 9 6 10 11 12 14 17 17 20 22 20 29 23 31 \r\n\r\nWynik: 17 to 10. statystyka pozycyjna w tablicy: \r\n6 6 6 9 10 11 12 14 17 17 20 20 22 23 29 31 \r\n\r\n16;200;130;148\r\n"]
[765.701346, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[768.150169, "o", "#"]
[768.98573, "o", "w"]
[769.402106, "o", "y"]
[769.630302, "o", "w"]
[769.738064, "o", "o"]
[770.090156, "o", "ł"]
[770.29809, "o", "a"]
[770.466126, "o", "n"]
[770.542062, "o", "o"]
[770.754155, "o", " "]
[771.52205, "o", "s"]
[771.681929, "o", "e"]
[771.814065, "o", "l"]
[771.929776, "o", "e"]
[772.134098, "o", "c"]
[772.333986, "o", "t"]
[772.438189, "o", " "]
[772.693909, "o", "d"]
[772.837832, "o", "l"]
[773.034117, "o", "a"]
[773.166031, "o", " "]
[775.849736, "o", "n"]
[776.034097, "o", "/"]
[776.821834, "o", "7"]
[776.962093, "o", " "]
[777.460936, "o", "g"]
[777.65301, "o", "r"]
[777.745842, "o", "u"]
[778.266003, "o", "p"]
[778.958061, "o", "\r\n"]
[778.959059, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[790.98983, "o", "#"]
[791.541978, "o", " "]
[791.757855, "o", "w"]
[792.037803, "o", "y"]
[792.137886, "o", "n"]
[792.253763, "o", "i"]
[792.541847, "o", "k"]
[792.613825, "o", "i"]
[793.741864, "o", " "]
[796.221563, "o", "b"]
[796.380728, "o", "a"]
[796.633593, "o", "d"]
[796.817889, "o", "a"]
[797.281469, "o", "ń"]
[797.489879, "o", " "]
[797.873772, "o", "e"]
[797.989773, "o", "k"]
[798.149666, "o", "s"]
[798.297858, "o", "p"]
[798.50927, "o", "e"]
[798.729733, "o", "r"]
[799.161771, "o", "y"]
[799.357782, "o", "m"]
[799.573781, "o", "e"]
[799.72126, "o", "n"]
[799.813659, "o", "t"]
[800.04961, "o", "a"]
[800.177594, "o", "l"]
[800.377687, "o", "n"]
[800.517772, "o", "y"]
[800.78177, "o", "c"]
[800.897536, "o", "h"]
[801.045609, "o", " "]
[801.333607, "o", "z"]
[801.44564, "o", "n"]
[801.641879, "o", "a"]
[801.789755, "o", "j"]
[802.117654, "o", "d"]
[802.297742, "o", "u"]
[802.453863, "o", "j"]
[803.001837, "o", "ą"]
[803.273796, "o", " "]
[803.453542, "o", "s"]
[803.609757, "o", "i"]
[803.941547, "o", "ę"]
[805.645677, "o", "  \r"]
[807.173602, "o", "w"]
[810.437585, "o", " "]
[811.549688, "o", "f"]
[811.645402, "o", "o"]
[811.881502, "o", "l"]
[812.061462, "o", "d"]
[812.26965, "o", "e"]
[812.489548, "o", "r"]
[812.749681, "o", "z"]
[812.901535, "o", "e"]
[813.089692, "o", " "]
[813.361241, "o", "w"]
[814.025705, "o", "y"]
[814.185609, "o", "n"]
[814.277599, "o", "i"]
[814.637526, "o", "k"]
[814.825683, "o", "i"]
[816.373604, "o", "\r\n"]
[816.37396, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[819.861803, "o", "#"]
[820.305639, "o", " "]
[820.693234, "o", "ś"]
[820.92161, "o", "r"]
[821.077424, "o", "e"]
[821.245238, "o", "d"]
[821.321573, "o", "n"]
[821.405578, "o", "i"]
[822.713418, "o", "o"]
[822.965419, "o", " "]
[827.505356, "o", "s"]
[827.665498, "o", "e"]
[827.825175, "o", "l"]
[827.91331, "o", "e"]
[828.125513, "o", "c"]
[828.329404, "o", "t"]
[828.45353, "o", " "]
[828.68154, "o", "d"]
[828.789486, "o", "l"]
[828.989559, "o", "a"]
[829.129454, "o", " "]
[829.345319, "o", "n"]
[829.793324, "o", "/"]
[830.061286, "o", "5"]
[830.201273, "o", " "]
[830.665382, "o", "g"]
[830.873447, "o", "r"]
[831.08544, "o", "u"]
[831.185488, "o", "p"]
[831.393423, "o", " "]
[831.625406, "o", "n"]
[831.797392, "o", "a"]
[831.913421, "o", "j"]
[832.04115, "o", "s"]
[832.24136, "o", "z"]
[832.509293, "o", "y"]
[832.669488, "o", "b"]
[832.86121, "o", "s"]
[833.041411, "o", "z"]
[833.589297, "o", "y"]
[834.189481, "o", ";"]
[834.417899, "o", " "]
[834.669436, "o", "n"]
[834.829318, "o", "a"]
[834.933265, "o", "j"]
[835.145051, "o", "m \r"]
[835.329182, "o", "n"]
[835.408675, "o", "i"]
[835.605109, "o", "e"]
[835.689341, "o", "j"]
[835.913431, "o", " "]
[836.233439, "o", "p"]
[836.525354, "o", "o"]
[836.669408, "o", "r"]
[837.001414, "o", "ó"]
[837.242679, "o", "w"]
[837.441463, "o", "n"]
[837.629095, "o", "a"]
[838.065447, "o", "ń"]
[838.284995, "o", " "]
[838.408718, "o", "z"]
[838.593224, "o", "a"]
[838.849389, "o", "ś"]
[839.057377, "o", " "]
[839.169333, "o", "r"]
[839.313256, "o", "o"]
[839.46945, "o", "b"]
[839.553402, "o", "i"]
[839.737414, "o", " "]
[840.461176, "o", "s"]
[840.809268, "o", "e"]
[840.917381, "o", "l"]
[841.025379, "o", "e"]
[841.213039, "o", "c"]
[841.421322, "o", "t"]
[841.509163, "o", " "]
[841.677165, "o", "d"]
[841.793303, "o", "l"]
[841.925118, "o", "a"]
[842.041305, "o", " "]
[842.253164, "o", "n"]
[842.768975, "o", "."]
[843.413318, "o", "\b\u001b[K"]
[844.021096, "o", "/"]
[844.136851, "o", "3"]
[844.525372, "o", " "]
[844.773349, "o", "g"]
[844.9651, "o", "r"]
[845.217268, "o", "u"]
[845.313232, "o", "p"]
[851.637302, "o", " "]
[852.18509, "o", "("]
[852.789054, "o", "j"]
[852.925173, "o", "e"]
[853.11705, "o", "d"]
[853.269233, "o", "n"]
[853.444985, "o", "a"]
[853.537052, "o", "k"]
[853.729156, "o", " "]
[855.812983, "o", "p"]
[856.028794, "o", "r"]
[856.225135, "o", "z"]
[856.381115, "o", "e"]
[856.549227, "o", "z"]
[856.724973, "o", " "]
[856.85324, "o", "t"]
[856.965156, "o", "o"]
[857.121293, "o", " "]
[857.457103, "o", "ż"]
[857.701163, "o", "e"]
[857.805175, "o", " "]
[858.269077, "o", "g"]
[858.509141, "o", "r"]
[858.785108, "o", "u"]
[858.912983, "o", "p"]
[859.145102, "o", " "]
[859.276374, "o", "w"]
[859.380387, "o", "i"]
[859.716937, "o", "ę"]
[859.924469, "o", "c"]
[860.089114, "o", "e"]
[860.18518, "o", "j"]
[860.344986, "o", " "]
[860.589083, "o", "t"]
[860.67307, "o", "o"]
[860.844908, "o", " "]
[861.441031, "o", "c"]
[861.716978, "o", "z"]
[861.940918, "o", "a"]
[862.293036, "o", "s"]
[862.577023, "o", " "]
[864.024579, "o", "d"]
[868.944747, "o", "\b\u001b[K"]
[869.489028, "o", "n"]
[869.8531, "o", "i"]
[869.981003, "o", "e"]
[870.085028, "o", " "]
[870.2088, "o", "j"]
[870.332913, "o", "e"]
[870.504919, "o", "s"]
[870.65679, "o", "t"]
[870.749141, "o", " "]
[870.900856, "o", "j"]
[871.128861, "o", "u"]
[871.457016, "o", "ż"]
[871.680846, "o", " "]
[871.884906, "o", "n"]
[872.005126, "o", "a"]
[872.101068, "o", "j"]
[872.332885, "o", "m"]
[872.549059, "o", "n \r"]
[872.665065, "o", "i"]
[872.848995, "o", "e"]
[872.94473, "o", "j"]
[873.108989, "o", "s"]
[873.296927, "o", "z"]
[873.54469, "o", "y"]
[873.9129, "o", ")"]
[874.676838, "o", "\r\n"]
[874.678115, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[878.03692, "o", "#"]
[879.412546, "o", " "]
[879.756882, "o", "Z"]
[880.008882, "o", "A"]
[880.196883, "o", "D"]
[880.376749, "o", "A"]
[880.552978, "o", "N"]
[880.668909, "o", "I"]
[880.82462, "o", "E"]
[881.212853, "o", " "]
[881.392736, "o", "4"]
[881.708881, "o", "\r\n"]
[881.709163, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[885.264695, "o", "c"]
[885.460778, "o", "a"]
[885.668467, "o", "t"]
[885.796699, "o", " "]
[886.836732, "o", "g"]
[887.116637, "o", "e"]
[887.248882, "o", "n"]
[887.372812, "o", "e"]
[887.520841, "o", "r"]
[887.728843, "o", "a"]
[887.924855, "o", "t"]
[888.044395, "o", "o"]
[888.188742, "o", "r"]
[889.02085, "o", "_"]
[889.576653, "o", "b"]
[889.676582, "o", "i"]
[889.820611, "o", "n"]
[889.996997, "o", "a"]
[890.244607, "o", "r"]
[890.4808, "o", "y"]
[890.648798, "o", "."]
[890.880734, "o", "c"]
[891.10078, "o", "p"]
[891.264841, "o", "p"]
[891.557036, "o", "\r\n"]
[891.558649, "o", "//MAREK ŚWIERGOŃ 261750\r\n\r\n#include <random>\r\n#include <iostream>\r\n#include <stdlib.h>\r\n#include <errno.h>\r\n#include <limits.h>\r\n#include <string.h>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nstatic std::random_device rd; // random device engine, usually based on /dev/random on UNIX-like systems\r\n// initialize Mersennes' twister using rd to generate the seed\r\nstatic std::mt19937 rng{rd()}; \r\n\r\nint arrayRand(int size)\r\n{\r\n  static std::uniform_int_distribution<int> uid(0,2*size-1);\r\n  return uid(rng); //rng jako generator\r\n}\r\n\r\nint indexRand(int size) {\r\n  if(size > 0) {\r\n    static uniform_int_distribution<int> uid(0,size-1);\r\n    return uid(rng); //rng jako generator\r\n  }\r\n  else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nint main(int argc, char **argv)\r\n{\r\n  if(argc > 2) {\r\n    if (strlen(argv[1]) == 0) {\r\n      return 1; // pusty string\r\n    }\r\n    char* p;\r\n    errno = 0;\r\n    long arg = strtol(argv[1], &p, 10);\r\n    if (*p != '\\0' || errno != 0) {\r\n      return 1;\r\n    }\r\n    if (arg < INT_MIN || arg > INT_MAX) {"]
[891.558744, "o", "\r\n      return 1;\r\n    }\r\n    int n = arg;\r\n    cout << n << \" \";\r\n    vector<int> data;\r\n    for(int i = 0; i < n; ++i)\r\n      data.push_back(arrayRand(n));\r\n    sort(data.begin(), data.end()); \r\n    for (auto& e : data) {\r\n      cout << e << \" \";\r\n    }\r\n    int valueIndex;\r\n    if(strcmp(argv[2], \"-l\") == 0) {\r\n      valueIndex = indexRand((int)(n/100));\r\n    }\r\n    else if(strcmp(argv[2], \"-h\") == 0) {\r\n      valueIndex = n - indexRand(n/100) - 1;\r\n    }\r\n    else if(strcmp(argv[2], \"-m\") == 0) {\r\n      valueIndex = (n/2) - (n/200) + indexRand(n/100);\r\n    }\r\n    else if(strcmp(argv[2], \"-r\") == 0) {\r\n      valueIndex = indexRand(n);\r\n    }\r\n    else if(strcmp(argv[2], \"-o\") == 0) {\r\n      valueIndex = -1;\r\n    }\r\n    else {\r\n      cout << \"Wywołanie: ./generator_binary <number> <mode>\" << endl;\r\n      cout << \"Tryby <mode> :\" << endl;\r\n      cout << \"-l - wartość znajdująca się blisko początku tablicy\" << endl;\r\n      cout << \"-h - wartość znajdująca się blisko końca tablicy\" << endl;\r\n      c"]
[891.558806, "o", "out << \"-m - wartość znajdująca się blisko środka tablicy\" << endl;\r\n      cout << \"-r - wartość znajdująca się w losowym miejscu tablicy\" << endl;\r\n      cout << \"-o - losowa wartość nie znajdująca się w tablicy\" << endl;\r\n      return 0;\r\n    }\r\n    int value;\r\n    if(valueIndex >= 0) {\r\n      value = data.at(valueIndex);\r\n    }\r\n    else {\r\n      value = arrayRand(n);\r\n        while(binary_search(data.begin(), data.end(), value)) {\r\n          value = arrayRand(n);\r\n        }\r\n    }\r\n    cout << value;\r\n  }\r\n  else {\r\n    cout << \"Wywołanie: ./generator_binary <number> <mode>\" << endl;\r\n    cout << \"Tryby <mode> :\" << endl;\r\n    cout << \"-l - wartość znajdująca się blisko początku tablicy\" << endl;\r\n    cout << \"-h - wartość znajdująca się blisko końca tablicy\" << endl;\r\n    cout << \"-m - wartość znajdująca się blisko środka tablicy\" << endl;\r\n    cout << \"-r - wartość znajdująca się w losowym miejscu tablicy\" << endl;\r\n    cout << \"-o - losowa wartość nie znajdująca się"]
[891.558842, "o", " w tablicy\" << endl;\r\n  }\r\n}"]
[891.559531, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[893.168592, "o", "g"]
[893.564532, "o", "+"]
[893.736501, "o", "+"]
[894.01668, "o", " "]
[894.212362, "o", "-"]
[894.656816, "o", "o"]
[894.888913, "o", " "]
[895.324816, "o", "g"]
[895.528538, "o", "e"]
[895.624706, "o", "n"]
[895.75275, "o", "e"]
[895.916713, "o", "r"]
[896.120843, "o", "a"]
[896.324406, "o", "t"]
[896.432541, "o", "o"]
[896.548525, "o", "r"]
[897.424651, "o", "_"]
[897.676472, "o", "b"]
[897.792473, "o", "i"]
[897.940794, "o", "n"]
[898.056764, "o", "a"]
[899.376667, "o", "r"]
[899.580606, "o", "y"]
[899.756756, "o", " "]
[900.516596, "o", "g"]
[900.728282, "o", "e"]
[900.912802, "o", "n"]
[901.124459, "o", "e"]
[901.396559, "o", "r"]
[901.568805, "o", "a"]
[901.772754, "o", "t"]
[901.92076, "o", "o"]
[902.080721, "o", "r"]
[902.428547, "o", "_"]
[903.260564, "o", "b"]
[903.33648, "o", "i"]
[903.448574, "o", "n"]
[903.576513, "o", "a"]
[903.744772, "o", "r"]
[903.932735, "o", "y"]
[904.036749, "o", "."]
[904.732695, "o", "c"]
[904.852761, "o", "p"]
[905.004484, "o", "p"]
[905.616502, "o", "\r\n"]
[906.171855, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[911.78869, "o", "c"]
[911.992588, "o", "a"]
[912.232671, "o", "t"]
[912.464604, "o", " "]
[913.70436, "o", "b"]
[913.936707, "o", "i"]
[914.052666, "o", "n"]
[914.16469, "o", "a"]
[914.340676, "o", "r"]
[914.532642, "o", "y"]
[915.236725, "o", "_"]
[915.468764, "o", "s"]
[915.612728, "o", "e"]
[915.984595, "o", "a"]
[916.184987, "o", "r"]
[916.396515, "o", "c"]
[916.608749, "o", "h"]
[917.764519, "o", "."]
[917.920563, "o", "c"]
[918.064762, "o", "p"]
[918.172775, "o", "p"]
[918.513036, "o", "\r\n"]
[918.514597, "o", "#include <bits/stdc++.h>\r\n#include <chrono>\r\nusing namespace std;\r\n\r\nint n = 0;\r\nint no_comparisons = 0;\r\n\r\nbool compare(int i, int j) {\r\n  no_comparisons++;\r\n  if(i > j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nbool compareEquals(int i, int j) {\r\n  no_comparisons++;\r\n  if(i == j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nint binarySearch(int array[], int left, int right, int key) {\r\n  if (right >= left) {\r\n    int mid = left + (right - left) / 2;\r\n\r\n    if (compareEquals(array[mid], key))\r\n      return 1;\r\n    \r\n    if (compare(array[mid], key))\r\n      return binarySearch(array, left, mid-1, key);\r\n    else\r\n      return binarySearch(array, mid+1, right, key);\r\n  }\r\n  return 0;\r\n}\r\n\r\nvoid printArray(int array[], int arrayLength) {\r\n  if(n < 50) {\r\n    for(int i = 0; i < arrayLength; i++) {\r\n      cout << array[i] << \" \";\r\n    }\r\n    cout << endl;\r\n  }\r\n}\r\n\r\nint main(int argc, char **argv){\r\n  int v;\r\n  //pobieramy z stdin najpierw rozmiar tablicy, potem elementy tablicy\r\n  //a na koniec szukaną"]
[918.514718, "o", " wartość\r\n  cin >> n;\r\n  int array[n] = {0};\r\n  int element = 0;\r\n  int i = 0;\r\n  while(i < n && cin >> element) {\r\n    array[i] = element;\r\n    i++;\r\n  }\r\n  cin >> v;\r\n  auto start = chrono::high_resolution_clock::now();\r\n  bool isElementIn = binarySearch(array, 0, n-1, v);\r\n  auto finish = chrono::high_resolution_clock::now();\r\n  if(n <= 50) {\r\n    if(isElementIn) {\r\n      cout << \"Wartość \" << v << \" znajduje się w poniższej tablicy:\" << endl;\r\n    }\r\n    else {\r\n      cout << \"Wartość \" << v << \" nie znajduje się w poniższej tablicy:\" << endl;\r\n    }\r\n    printArray(array,n);\r\n  }\r\n  int time = std::chrono::duration_cast<std::chrono::nanoseconds>(finish-start).count();\r\n  cout << n << \";\" << no_comparisons << \";\" << time << endl;\r\n  return 0;\r\n}"]
[918.515433, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[920.136679, "o", "g"]
[920.856491, "o", "+"]
[921.02072, "o", "+"]
[921.388753, "o", " "]
[921.564719, "o", "-"]
[921.768329, "o", "o"]
[922.040737, "o", " "]
[924.516603, "o", "b"]
[924.828346, "o", "i"]
[924.932521, "o", "n"]
[925.092494, "o", "a"]
[925.332578, "o", "r"]
[925.572609, "o", "y"]
[926.108465, "o", "_"]
[926.288719, "o", "s"]
[926.436637, "o", "e"]
[926.660514, "o", "a"]
[926.836727, "o", "r"]
[927.068626, "o", "c"]
[927.336705, "o", "h"]
[927.57651, "o", " "]
[928.168659, "o", "b"]
[928.240666, "o", "i"]
[928.356627, "o", "n"]
[928.52042, "o", "a"]
[928.756273, "o", "r"]
[928.972707, "o", "y"]
[929.332546, "o", "_"]
[929.688589, "o", "s"]
[929.852696, "o", "e"]
[930.120744, "o", "a"]
[930.316687, "o", "r"]
[930.528513, "o", "c"]
[930.716702, "o", "h"]
[931.104673, "o", "."]
[931.420379, "o", "c"]
[932.056494, "o", "p"]
[932.192364, "o", "p"]
[934.87164, "o", "\r\n"]
[935.936285, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[940.488467, "o", "."]
[940.58441, "o", "/"]
[941.312488, "o", "b"]
[941.42049, "o", "i"]
[942.03256, "o", "n"]
[942.220493, "o", "a"]
[942.416459, "o", "r"]
[942.616582, "o", "y"]
[943.312262, "o", "_"]
[943.576343, "o", "s"]
[943.896667, "o", "e"]
[944.108667, "o", "a"]
[944.332362, "o", "r"]
[944.516569, "o", "c"]
[944.668583, "o", "h"]
[945.436351, "o", "\r\n"]
[947.820514, "o", "1"]
[948.012496, "o", "0"]
[949.05656, "o", "\r\n"]
[951.116186, "o", "1"]
[951.364367, "o", "\r\n"]
[951.664501, "o", "2"]
[951.900402, "o", "\r\n"]
[952.172453, "o", "3"]
[952.396516, "o", "\r\n"]
[952.676392, "o", "4"]
[952.884473, "o", "\r\n"]
[953.100194, "o", "5"]
[953.308342, "o", "\r\n"]
[953.57223, "o", "6"]
[953.852367, "o", "\r\n"]
[955.50035, "o", "7"]
[955.664276, "o", "\r\n"]
[956.51233, "o", "8"]
[957.108253, "o", "\r\n"]
[957.904365, "o", "8"]
[958.056392, "o", "\r\n"]
[959.408344, "o", "9"]
[960.940457, "o", "\r\n"]
[963.355672, "o", "7"]
[963.720281, "o", "\r\n"]
[963.720643, "o", "Wartość 7 znajduje się w poniższej tablicy:\r\n1 2 3 4 5 6 7 8 8 9 \r\n10;7;974\r\n"]
[963.721329, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[971.164378, "o", "."]
[971.468551, "o", "/"]
[972.244284, "o", "g"]
[972.720296, "o", "e"]
[972.860422, "o", "n"]
[972.988353, "o", "e"]
[973.28449, "o", "r"]
[973.524542, "o", "a"]
[973.740531, "o", "t"]
[973.852386, "o", "o"]
[974.008491, "o", "r"]
[974.872477, "o", "\r\n"]
[974.876429, "o", "Usage: generator <number>\r\n"]
[974.87737, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[977.61237, "o", "."]
[977.680448, "o", "/"]
[977.996286, "o", "g"]
[978.199986, "o", "e"]
[978.304303, "o", "n"]
[978.440501, "o", "e"]
[978.596334, "o", "r"]
[978.808442, "o", "a"]
[979.036451, "o", "t"]
[979.220215, "o", "o"]
[979.376266, "o", "r"]
[980.256378, "o", "_"]
[980.484515, "o", "b"]
[980.560394, "o", "i"]
[980.700439, "o", "n"]
[980.812411, "o", "a"]
[980.984331, "o", "r"]
[981.184453, "o", "y"]
[981.556416, "o", "\r\n"]
[981.560351, "o", "Wywołanie: ./generator_binary <number> <mode>\r\nTryby <mode> :\r\n-l - wartość znajdująca się blisko początku tablicy\r\n-h - wartość znajdująca się blisko końca tablicy\r\n-m - wartość znajdująca się blisko środka tablicy\r\n-r - wartość znajdująca się w losowym miejscu tablicy\r\n-o - losowa wartość nie znajdująca się w tablicy\r\n"]
[981.5612, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[983.648319, "o", "./generator_binary"]
[985.460428, "o", " "]
[986.096171, "o", "-"]
[988.768363, "o", "r"]
[989.092246, "o", " "]
[989.876262, "o", "|"]
[990.848309, "o", " "]
[991.548226, "o", "."]
[991.64831, "o", "/"]
[992.180335, "o", "b"]
[992.260297, "o", "i"]
[992.364494, "o", "n"]
[992.48453, "o", "a"]
[992.664186, "o", "r"]
[992.852413, "o", "y"]
[993.268453, "o", "_"]
[993.572423, "o", "s"]
[993.7563, "o", "e"]
[994.136537, "o", "a"]
[994.380344, "o", "r"]
[994.61226, "o", "c"]
[994.812257, "o", "h"]
[995.648369, "o", "\r\n"]
[995.653563, "o", "Wartość 1 nie znajduje się w poniższej tablicy:\r\n\r\n0;0;496\r\n"]
[995.654443, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1001.824431, "o", "./generator_binary -r | ./binary_search"]
[1002.156336, "o", "\b"]
[1002.656545, "o", "\b"]
[1002.686845, "o", "\b"]
[1002.717101, "o", "\b"]
[1002.747404, "o", "\b"]
[1002.778005, "o", "\b"]
[1002.808855, "o", "\b"]
[1002.840394, "o", "\b"]
[1002.87006, "o", "\b"]
[1002.900397, "o", "\b"]
[1002.930693, "o", "\b"]
[1002.960996, "o", "\b"]
[1002.992031, "o", "\b"]
[1003.022828, "o", "\b"]
[1003.053665, "o", "\b"]
[1003.082991, "o", "\b"]
[1003.113461, "o", "\b"]
[1005.579945, "o", "\b"]
[1006.081427, "o", "\b"]
[1006.252443, "o", "\b"]
[1007.288513, "o", "\u001b[1@2"]
[1007.516653, "o", "\u001b[1@0"]
[1007.848611, "o", "\u001b[1@ "]
[1008.436392, "o", "\r\n"]
[1008.441815, "o", "Wartość 34 znajduje się w poniższej tablicy:\r\n0 1 2 7 8 10 10 12 13 17 18 23 23 23 24 25 28 32 34 39 \r\n20;7;959\r\n"]
[1008.442669, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1024.976261, "o", "#"]
[1025.492267, "o", " "]
[1025.624014, "o", "w"]
[1025.844051, "o", "y"]
[1025.980444, "o", "n"]
[1026.032141, "o", "i"]
[1026.256388, "o", "k"]
[1026.324284, "o", "i"]
[1026.528327, "o", " "]
[1026.73626, "o", "n"]
[1026.892231, "o", "a"]
[1027.012096, "o", " "]
[1027.208366, "o", "w"]
[1027.568224, "o", "y"]
[1027.680184, "o", "k"]
[1027.816303, "o", "r"]
[1027.996094, "o", "e"]
[1028.168381, "o", "s"]
[1028.34415, "o", "a"]
[1028.524279, "o", "c"]
[1028.68421, "o", "h"]
[1028.836308, "o", " "]
[1035.968185, "o", "w"]
[1036.504407, "o", " "]
[1037.064517, "o", "f"]
[1037.160182, "o", "o"]
[1037.324271, "o", "l"]
[1037.54826, "o", "d"]
[1037.743841, "o", "e"]
[1037.884193, "o", "r"]
[1038.104331, "o", "z"]
[1038.300179, "o", "e"]
[1038.452191, "o", " "]
[1038.52423, "o", "w"]
[1038.764136, "o", "y"]
[1038.876184, "o", "n"]
[1038.964089, "o", "i"]
[1039.180273, "o", "k"]
[1039.240266, "o", "i"]
[1039.703968, "o", "\r\n"]
[1039.704304, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1041.68415, "o", "#"]
[1042.212098, "o", " "]
[1042.435411, "o", "n"]
[1042.576277, "o", "a"]
[1042.748501, "o", "j"]
[1042.888323, "o", "w"]
[1043.036119, "o", "i"]
[1043.536199, "o", "ę"]
[1043.784042, "o", "c"]
[1043.964027, "o", "e"]
[1044.056087, "o", "j"]
[1044.176247, "o", " "]
[1044.420229, "o", "p"]
[1044.712167, "o", "o"]
[1044.856278, "o", "r"]
[1045.180053, "o", "ó"]
[1045.380171, "o", "w"]
[1045.536186, "o", "n"]
[1045.716275, "o", "a"]
[1046.196232, "o", "ń"]
[1046.372341, "o", " "]
[1046.704093, "o", "g"]
[1046.86808, "o", "d"]
[1047.020096, "o", "y"]
[1047.136223, "o", " "]
[1047.304174, "o", "e"]
[1047.436161, "o", "l"]
[1047.571997, "o", "e"]
[1047.712127, "o", "m"]
[1047.872231, "o", "e"]
[1047.976061, "o", "n"]
[1048.127921, "o", "t"]
[1048.228196, "o", " "]
[1048.440316, "o", "n"]
[1048.536186, "o", "i"]
[1048.720192, "o", "e"]
[1049.024012, "o", " "]
[1049.240003, "o", "z"]
[1049.364122, "o", "n"]
[1049.512149, "o", "a"]
[1049.600076, "o", "j"]
[1049.844003, "o", "d"]
[1049.968174, "o", "u"]
[1050.112195, "o", "j"]
[1050.268241, "o", "e"]
[1050.384275, "o", "  \r"]
[1050.552163, "o", "s"]
[1050.627911, "o", "i"]
[1050.984269, "o", "ę"]
[1051.232114, "o", " "]
[1051.356124, "o", "w"]
[1051.464329, "o", " "]
[1051.648106, "o", "t"]
[1051.876076, "o", "a"]
[1052.116282, "o", "b"]
[1052.208209, "o", "l"]
[1052.368216, "o", "i"]
[1052.684226, "o", "c"]
[1052.871468, "o", "y"]
[1053.892112, "o", " "]
[1061.688226, "o", "\b"]
[1062.188162, "o", "\b"]
[1062.218778, "o", "\b"]
[1062.249099, "o", "\b"]
[1062.279911, "o", "\b"]
[1062.311042, "o", "\b"]
[1062.341127, "o", "\b"]
[1062.371446, "o", "\b"]
[1062.401235, "o", "\b"]
[1062.430994, "o", "\b"]
[1062.461675, "o", "\b"]
[1062.49269, "o", "\b"]
[1062.524178, "o", "\b"]
[1062.555037, "o", "\r"]
[1062.585227, "o", "\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[1062.615525, "o", "\b"]
[1062.645452, "o", "\b"]
[1062.675311, "o", "\b"]
[1062.705814, "o", "\b"]
[1062.736234, "o", "\b"]
[1062.766294, "o", "\b"]
[1062.796294, "o", "\b"]
[1062.826112, "o", "\b"]
[1062.856417, "o", "\b"]
[1062.886501, "o", "\b"]
[1062.916362, "o", "\b"]
[1062.94664, "o", "\b"]
[1062.978056, "o", "\b"]
[1063.00816, "o", "\b"]
[1063.03905, "o", "\b"]
[1063.069319, "o", "\b"]
[1063.099574, "o", "\b"]
[1063.129946, "o", "\b"]
[1063.160891, "o", "\b"]
[1063.191301, "o", "\b"]
[1063.221037, "o", "\b"]
[1063.251747, "o", "\b"]
[1063.282456, "o", "\b"]
[1063.312393, "o", "\b"]
[1063.342878, "o", "\b"]
[1063.373657, "o", "\b"]
[1063.403221, "o", "\b"]
[1063.433257, "o", "\b"]
[1063.464103, "o", "\b"]
[1063.494539, "o", "\b"]
[1063.524727, "o", "\b"]
[1063.555261, "o", "\b"]
[1063.585822, "o", "\b"]
[1063.616778, "o", "\b"]
[1063.647826, "o", "\b"]
[1063.67823, "o", "\b"]
[1063.708065, "o", "\b"]
[1063.73861, "o", "\b"]
[1063.769716, "o", "\b"]
[1063.800096, "o", "\b"]
[1063.830147, "o", "\b"]
[1063.860193, "o", "\b"]
[1063.890229, "o", "\b"]
[1063.920121, "o", "\b"]
[1063.951188, "o", "\b"]
[1063.981141, "o", "\u0007"]
[1064.011298, "o", "\u0007"]
[1064.041807, "o", "\u0007"]
[1064.0734, "o", "\u0007"]
[1064.104084, "o", "\u0007"]
[1064.628188, "o", "ś# najwięcej porównań gdy element nie znajduje \u001b[1@s\u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ \u001b[C"]
[1065.532141, "o", "\b# najwięcej porównań gdy element nie znajduje s\u001b[1P\u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1066.172035, "o", "\u001b[C"]
[1067.176239, "o", "\u001b[C najwięcej porównań gdy element nie znajduje \u001b[1@s\u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ \u001b[C\u001b[C"]
[1067.52027, "o", "ś najwięcej porównań gdy element nie znajduje\u001b[1@ \u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ \u001b[C\u001b[C\u001b[C"]
[1067.696164, "o", "r najwięcej porównań gdy element nie znajduj\u001b[1@e\u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ \u001b[C\u001b[C\u001b[C\u001b[C"]
[1067.864544, "o", "e najwięcej porównań gdy element nie znajdu\u001b[1@j\u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ \u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[1068.040047, "o", "d najwięcej porównań gdy element nie znajd\u001b[1@u\u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ \u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[1068.212273, "o", "n najwięcej porównań gdy element nie znaj\u001b[1@d\u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ \u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[1068.628097, "o", "i najwięcej porównań gdy element nie zna\u001b[1@j\u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ \u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[1068.816108, "o", "o najwięcej porównań gdy element nie zn\u001b[1@a\u001b[A\r\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ \u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[1069.804096, "o", "\r\n\r\r\n"]
[1069.804874, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1083.179938, "o", "#"]
[1084.560095, "o", " "]
[1085.292006, "o", "Z"]
[1085.651961, "o", "A"]
[1085.883954, "o", "D"]
[1086.027995, "o", "A"]
[1086.195847, "o", "N"]
[1086.267997, "o", "I"]
[1086.424087, "o", "E"]
[1086.811852, "o", " "]
[1087.13607, "o", "5"]
[1087.451918, "o", "\r\n"]
[1087.452267, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1090.848221, "o", "c"]
[1091.072075, "o", "a"]
[1091.304069, "o", "t"]
[1091.460178, "o", " "]
[1093.64805, "o", "d"]
[1094.043821, "o", "u"]
[1094.543919, "o", "a"]
[1094.788064, "o", "l"]
[1095.796086, "o", "_"]
[1096.151969, "o", "p"]
[1096.391762, "o", "i"]
[1096.652016, "o", "v"]
[1096.736041, "o", "o"]
[1096.923951, "o", "t"]
[1097.759744, "o", "_"]
[1098.376055, "o", "q"]
[1098.64782, "o", "u"]
[1098.82777, "o", "i"]
[1098.963827, "o", "c"]
[1099.119945, "o", "k"]
[1099.367854, "o", "s"]
[1099.519999, "o", "o"]
[1099.671791, "o", "r"]
[1099.839929, "o", "t"]
[1100.311928, "o", "_"]
[1100.591862, "o", "s"]
[1100.835896, "o", "e"]
[1101.003849, "o", "l"]
[1101.139912, "o", "e"]
[1101.347131, "o", "c"]
[1101.552025, "o", "t"]
[1102.035999, "o", "."]
[1102.199955, "o", "c"]
[1102.355932, "o", "p"]
[1102.49604, "o", "p"]
[1103.071938, "o", "\r\n"]
[1103.074102, "o", "//MAREK ŚWIERGOŃ 261750\r\n\r\n#include <iostream>\r\n#include <chrono>\r\n\r\nusing namespace std;\r\n\r\nint n = 0;\r\nint no_assigns = 0;\r\nint no_comparisons = 0;\r\n\r\n\r\nvoid assignKey(int& i, int& j) {\r\n  i = j;\r\n  no_assigns++;\r\n}\r\n\r\nvoid swap(int& i, int& j) {\r\n  int help;\r\n  assignKey(help, i);\r\n  assignKey(i, j);\r\n  assignKey(j, help);\r\n}\r\n\r\nbool compare(int i, int j) {\r\n  no_comparisons++;\r\n  if(i > j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nbool compareEquals(int i, int j) {\r\n  no_comparisons++;\r\n  if(i == j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nvoid printArray(int array[]) {\r\n  if(n < 50) {\r\n    for(int i = 0; i < n; i++) {\r\n      cout << array[i] << \" \";\r\n    }\r\n    cout << endl;\r\n  }\r\n}\r\n\r\nvoid insertionSort(int array[], int p, int q) {\r\n  int key;\r\n  for(int j = p+1; j <= q; j++) {\r\n    assignKey(key, array[j]);\r\n    int i = j-1;\r\n    while (i >= 0 && compare(array[i], key)) {\r\n      assignKey(array[i+1], array[i]);\r\n      i--;\r\n    }\r\n    assignKey(array[i+1], key);\r\n  }\r\n}\r\n\r\nint dualPartit"]
[1103.074198, "o", "ion(int array[], int start, int end, int& leftPivotIndex, \r\n  int leftPivotValue, int rightPivotValue) {\r\n  int rightPivotIndex;\r\n  bool leftFound = false;\r\n  bool rightFound = false;\r\n  for(int i = start; i <= end; i++) {\r\n    if(!leftFound && compareEquals(leftPivotValue, array[i])) {\r\n      leftPivotIndex = i;\r\n      leftFound = true;\r\n    }\r\n    else if(!rightFound && compareEquals(rightPivotValue, array[i])) {\r\n      rightPivotIndex = i;\r\n      rightFound = true;\r\n    }\r\n    if(leftFound && rightFound) {\r\n      break;\r\n    }\r\n  }\r\n  if(leftPivotIndex != start) {\r\n    swap(array[leftPivotIndex], array[start]);\r\n    leftPivotIndex = start;\r\n  }\r\n  if(rightPivotIndex != end) {\r\n    swap(array[rightPivotIndex], array[end]);\r\n    rightPivotIndex = end;\r\n  }\r\n  int lowIndex = start + 1;\r\n  int highIndex = end - 1;\r\n  for (int j = start+1; j <= highIndex; j++) {\r\n    //cout << highIndex << endl;\r\n    if (compare(leftPivotValue, array[j])) {\r\n      swap(array[j], array[lowIndex]);\r\n      lowIndex++;\r\n    }\r\n    "]
[1103.074239, "o", "else if (!compare(rightPivotValue, array[j])) {\r\n      while (compare(array[highIndex], rightPivotValue) && j < highIndex ) {\r\n        highIndex--;\r\n      }\r\n      swap(array[j], array[highIndex]);\r\n      highIndex--;\r\n      if (compare(leftPivotValue, array[j])) {\r\n        swap(array[j], array[lowIndex]);\r\n        lowIndex++;\r\n      }\r\n    }\r\n  }\r\n  lowIndex--;\r\n  highIndex++;\r\n\r\n  swap(array[start], array[lowIndex]);\r\n  swap(array[end], array[highIndex]);\r\n  printArray(array);\r\n\r\n  leftPivotIndex = lowIndex;\r\n  return highIndex;\r\n}\r\n\r\nint partition(int arr[], int p, int q, int pivot) {\r\n  //znajdujemy indeks pivota (bo przy tablicy median go utraciliśmy)\r\n  int pivotIndex;\r\n  for(int i = p; i <= q; i++) {\r\n    if(compareEquals(pivot, arr[i])) {\r\n      pivotIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  if(pivotIndex != p)\r\n    swap(arr[pivotIndex], arr[p]);\r\n  pivotIndex = p;\r\n  int j = p;\r\n  for(int i = p+1; i <= q; i++) {\r\n    if(compare(arr[pivotIndex], arr[i])) {\r\n      j++;\r\n      swap(arr[j], arr[i]);\r\n    "]
[1103.074275, "o", "}\r\n  }\r\n  swap(arr[j], arr[p]);\r\n  return j;\r\n}\r\n\r\nint select(int arr[], int p, int q, int i) {\r\n  if (p == q){\r\n    return arr[p];\r\n  }\r\n  //zadeklarowanie tablicy median o rozmiarze sufit z rozmiaru tablicy przez 5\r\n  int medianTabSize = ( ((q-p+1)%5 == 0) ? ((q-p+1)/5): (((q-p+1)/5)+1) );\r\n  int medianTab[medianTabSize];\r\n  int index = 0;\r\n  for(int i = p; i <= q; i += 5) {\r\n    if(i + 4 <= q) {\r\n      insertionSort(arr, i, i+4);\r\n      assignKey(medianTab[index], arr[i+2]);\r\n      index++;\r\n    }\r\n    else {\r\n      insertionSort(arr, i, q);\r\n      assignKey(medianTab[index], arr[i + ((q-i)/2)]);\r\n    }\r\n  }\r\n  int medianOfMedian = select(medianTab, 0, medianTabSize-1, ((medianTabSize + 1)/2));\r\n  int r = partition(arr, p, q, medianOfMedian);\r\n  int k = r - p + 1;\r\n  if (k == i) return arr[r];\r\n  else if (i < k) return select(arr, p, r-1, i);\r\n  else return select(arr, r+1, q, i-k);\r\n}\r\n\r\nvoid dualPivotQuickSortSelect(int array[], int start, int end) {\r\n  if(start < end - 1) {\r\n    int p, q;\r\n    int pValu"]
[1103.074325, "o", "e = select(array, start, end, ((end-start+1)/3));\r\n    int qValue = select(array, start, end, ((end-start+1)/3)*2);\r\n    \r\n    q = dualPartition(array, start, end, p, pValue, qValue);\r\n    dualPivotQuickSortSelect(array, start, p-1);\r\n    dualPivotQuickSortSelect(array, p+1, q-1);\r\n    dualPivotQuickSortSelect(array, q+1, end);\r\n  }\r\n  else if(start == end - 1) {\r\n    if(compare(array[start], array[end])) {\r\n      swap(array[start], array[end]);\r\n    }\r\n  }\r\n}\r\n\r\nbool isArraySorted(int array[]) {\r\n\r\n  for(int i = 0; i < n; i++) \r\n  if(i > 0) {\r\n    if(array[i-1] > array[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nvoid printArrayStatus(int array[]) {\r\n  if(isArraySorted(array)) {\r\n    cout << \"Tablica jest posortowana\" << endl;\r\n  }\r\n  else {\r\n    cout << \"Tablica nie jest posortowana\" << endl;\r\n  }\r\n}\r\n\r\nint main() {\r\n  cin >> n;\r\n  int array[n] = {0};\r\n  int element = 0;\r\n  int i = 0;\r\n  while(cin >> element) {\r\n    array[i] = element;\r\n    i++;\r\n  }\r\n  if(n<50) printArrayStatus(array);\r\n "]
[1103.07436, "o", " printArray(array);\r\n  auto start = chrono::high_resolution_clock::now();\r\n  dualPivotQuickSortSelect(array, 0, n-1);\r\n  auto finish = chrono::high_resolution_clock::now();\r\n  int time = std::chrono::duration_cast<std::chrono::nanoseconds>(finish-start).count();\r\n  if(n<50) printArrayStatus(array);\r\n  cout << n << \";\" << no_comparisons << \";\" << time << endl;\r\n  return 0;\r\n}"]
[1103.075129, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1104.231568, "o", "c"]
[1104.483755, "o", "a"]
[1105.63583, "o", "\b\u001b[K"]
[1105.775963, "o", "\b\u001b[K"]
[1106.099898, "o", "g"]
[1106.399869, "o", "+"]
[1106.547857, "o", "+"]
[1106.916053, "o", " "]
[1107.091844, "o", "-"]
[1107.415899, "o", "o"]
[1107.779891, "o", " "]
[1108.784051, "o", "d"]
[1108.915863, "o", "u"]
[1109.043795, "o", "a"]
[1109.15975, "o", "l"]
[1109.743782, "o", "_"]
[1110.09582, "o", "p"]
[1110.583906, "o", "i"]
[1110.819952, "o", "o"]
[1111.007987, "o", "v"]
[1111.263901, "o", "t"]
[1111.952017, "o", "\b\u001b[K"]
[1112.116028, "o", "\b\u001b[K"]
[1112.427949, "o", "\b\u001b[K"]
[1112.563838, "o", "v"]
[1113.055888, "o", "o"]
[1113.223958, "o", "t"]
[1113.831869, "o", "_"]
[1114.427821, "o", "q"]
[1114.5958, "o", "u"]
[1114.799926, "o", "i"]
[1114.975826, "o", "c"]
[1115.175945, "o", "k"]
[1115.640008, "o", "s"]
[1115.848025, "o", "o"]
[1116.019765, "o", "r"]
[1116.247843, "o", "t"]
[1116.824078, "o", "_"]
[1117.063887, "o", "s"]
[1117.315778, "o", "e"]
[1117.507858, "o", "l"]
[1117.639795, "o", "e"]
[1117.867901, "o", "c"]
[1118.215854, "o", "t"]
[1119.171686, "o", "."]
[1119.331755, "o", "c"]
[1120.699982, "o", "\b\u001b[K"]
[1120.963893, "o", "\b\u001b[K"]
[1121.136001, "o", " "]
[1121.81987, "o", "d"]
[1122.047713, "o", "u"]
[1122.163908, "o", "a"]
[1122.335904, "o", "l"]
[1123.023967, "o", "_"]
[1123.263758, "o", "p"]
[1123.503861, "o", "i"]
[1123.93969, "o", "v"]
[1124.043709, "o", "o"]
[1124.183833, "o", "t"]
[1124.795826, "o", "_ \r"]
[1125.36379, "o", "q"]
[1125.487761, "o", "u"]
[1125.651773, "o", "i"]
[1125.82766, "o", "c"]
[1125.903765, "o", "k"]
[1126.779723, "o", "s"]
[1127.007927, "o", "o"]
[1127.191754, "o", "r"]
[1127.391643, "o", "t"]
[1127.75175, "o", "_"]
[1128.239821, "o", "s"]
[1128.48789, "o", "e"]
[1128.631831, "o", "l"]
[1128.743499, "o", "e"]
[1128.967726, "o", "c"]
[1129.407602, "o", "t"]
[1129.531874, "o", "."]
[1129.719772, "o", "c"]
[1129.863757, "o", "p"]
[1130.019928, "o", "p"]
[1131.395867, "o", "\r\n"]
[1131.766838, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1146.775658, "o", "."]
[1147.127579, "o", "/"]
[1147.943904, "o", "g"]
[1148.207314, "o", "e"]
[1148.33563, "o", "n"]
[1148.467581, "o", "e"]
[1148.723738, "o", "r"]
[1149.01958, "o", "a"]
[1149.24352, "o", "t"]
[1149.375625, "o", "o"]
[1149.491634, "o", "r"]
[1149.907888, "o", " "]
[1150.675549, "o", "1"]
[1151.019701, "o", "6"]
[1151.527718, "o", " "]
[1151.943714, "o", "|"]
[1152.223898, "o", " "]
[1152.767328, "o", "."]
[1152.819763, "o", "/"]
[1153.66768, "o", "d"]
[1153.787798, "o", "u"]
[1153.963821, "o", "a"]
[1154.111631, "o", "l"]
[1154.807705, "o", "_"]
[1155.075517, "o", "p"]
[1155.612373, "o", "i"]
[1156.467582, "o", "v"]
[1156.555611, "o", "o"]
[1156.699684, "o", "t"]
[1157.247648, "o", "_"]
[1157.9756, "o", "q"]
[1158.25158, "o", "u"]
[1158.431786, "o", "i"]
[1158.57164, "o", "c"]
[1158.715582, "o", "k"]
[1159.0637, "o", "s"]
[1159.191716, "o", "o"]
[1159.335714, "o", "r"]
[1159.535721, "o", "t"]
[1160.7317, "o", "_"]
[1161.25953, "o", "s"]
[1161.495554, "o", "e"]
[1161.779596, "o", "l"]
[1161.963541, "o", "e"]
[1162.183239, "o", "c"]
[1162.455777, "o", "t \r"]
[1164.799618, "o", "\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[Kt\r\n"]
[1164.804962, "o", "Tablica nie jest posortowana\r\n26 31 30 18 1 2 28 6 22 26 11 6 31 6 15 13 \r\n"]
[1164.805062, "o", "1 2 6 6 6 11 13 15 18 22 30 31 26 28 31 26 \r\n1 2 6 6 6 11 13 15 18 22 30 31 26 28 31 26 \r\n1 2 6 6 6 11 13 15 18 22 26 26 28 30 31 31 \r\nTablica jest posortowana\r\n16;315;54797\r\n"]
[1164.806005, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1182.831659, "o", "c"]
[1183.235568, "o", "a"]
[1183.64382, "o", "t"]
[1184.119709, "o", " "]
[1188.415439, "o", "q"]
[1188.819426, "o", "u"]
[1189.003578, "o", "i"]
[1189.111633, "o", "c"]
[1189.30359, "o", "k"]
[1189.68754, "o", "s"]
[1189.867603, "o", "o"]
[1189.991451, "o", "r"]
[1190.311244, "o", "t"]
[1190.767257, "o", "_"]
[1190.963541, "o", "s"]
[1191.135423, "o", "e"]
[1191.26336, "o", "l"]
[1191.367519, "o", "e"]
[1191.559566, "o", "c"]
[1191.78743, "o", "t"]
[1192.307452, "o", "."]
[1192.415481, "o", "c"]
[1192.627419, "o", "p"]
[1192.799505, "o", "p"]
[1194.627253, "o", "\r\n"]
[1194.629462, "o", "cat: quicksort_select.cpp"]
[1194.629565, "o", ": No such file or directory\r\n"]
[1194.630259, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1198.643302, "o", "cat quicksort_select.cpp"]
[1198.831348, "o", "\b"]
[1199.331483, "o", "\b"]
[1199.361586, "o", "\b"]
[1199.391994, "o", "\b"]
[1199.423255, "o", "\b"]
[1199.454171, "o", "\b"]
[1199.484708, "o", "\b"]
[1199.515007, "o", "\b"]
[1199.545701, "o", "\b"]
[1199.576793, "o", "\b"]
[1199.607887, "o", "\b"]
[1199.638575, "o", "\b"]
[1199.669117, "o", "\b"]
[1199.699787, "o", "\b"]
[1199.730064, "o", "\b"]
[1199.867576, "o", "\b"]
[1200.539243, "o", "\u001b[C"]
[1201.191577, "o", "_sort_select.cpp\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"]
[1202.039383, "o", "\r\n"]
[1202.041605, "o", "//MAREK ŚWIERGOŃ 261750\r\n\r\n#include <iostream>\r\n#include <chrono>\r\n\r\nusing namespace std;\r\n\r\nint n = 0;\r\nint no_assigns = 0;\r\nint no_comparisons = 0;\r\n\r\n\r\nvoid assignKey(int& i, int& j) {\r\n  i = j;\r\n  no_assigns++;\r\n}\r\n\r\nvoid swap(int& i, int& j) {\r\n  int help;\r\n  assignKey(help, i);\r\n  assignKey(i, j);\r\n  assignKey(j, help);\r\n}\r\n\r\nbool compare(int i, int j) {\r\n  no_comparisons++;\r\n  if(i > j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nbool compareEquals(int i, int j) {\r\n  no_comparisons++;\r\n  if(i == j) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nvoid insertionSort(int array[], int p, int q) {\r\n  int key;\r\n  for(int j = p+1; j <= q; j++) {\r\n    assignKey(key, array[j]);\r\n    int i = j-1;\r\n    while (i >= 0 && compare(array[i], key)) {\r\n      assignKey(array[i+1], array[i]);\r\n      i--;\r\n    }\r\n    assignKey(array[i+1], key);\r\n  }\r\n}\r\n\r\nvoid printArray(int array[]) {\r\n  if(n < 50) {\r\n    for(int i = 0; i < n; i++) {\r\n      cout << array[i] << \" \";\r\n    }\r\n    cout << endl;\r\n  }\r\n}\r\n\r\nint partition("]
[1202.041708, "o", "int arr[], int p, int q, int pivot) {\r\n  //znajdujemy indeks pivota (bo przy tablicy median go utraciliśmy)\r\n  int pivotIndex;\r\n  for(int i = p; i <= q; i++) {\r\n    if(compareEquals(pivot, arr[i])) {\r\n      pivotIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  if(pivotIndex != p)\r\n    swap(arr[pivotIndex], arr[p]);\r\n  pivotIndex = p;\r\n  int j = p;\r\n  for(int i = p+1; i <= q; i++) {\r\n    if(compare(arr[pivotIndex], arr[i])) {\r\n      j++;\r\n      swap(arr[j], arr[i]);\r\n    }\r\n  }\r\n  swap(arr[j], arr[p]);\r\n  return j;\r\n}\r\n\r\nint select(int arr[], int p, int q, int i) {\r\n  if (p == q){\r\n    return arr[p];\r\n  }\r\n  //zadeklarowanie tablicy median o rozmiarze sufit z rozmiaru tablicy przez 5\r\n  int medianTabSize = ( ((q-p+1)%5 == 0) ? ((q-p+1)/5): (((q-p+1)/5)+1) );\r\n  int medianTab[medianTabSize];\r\n  int index = 0;\r\n  for(int i = p; i <= q; i += 5) {\r\n    if(i + 4 <= q) {\r\n      insertionSort(arr, i, i+4);\r\n      assignKey(medianTab[index], arr[i+2]);\r\n      index++;\r\n    }\r\n    else {\r\n      insertionSort(arr, i, q);\r\n     "]
[1202.041749, "o", " assignKey(medianTab[index], arr[i + ((q-i)/2)]);\r\n    }\r\n  }\r\n  int medianOfMedian = select(medianTab, 0, medianTabSize-1, ((medianTabSize + 1)/2));\r\n  int r = partition(arr, p, q, medianOfMedian);\r\n  int k = r - p + 1;\r\n  if (k == i) return arr[r];\r\n  else if (i < k) return select(arr, p, r-1, i);\r\n  else return select(arr, r+1, q, i-k);\r\n}\r\n\r\nvoid quickSortSelect(int array[], int start, int end) {\r\n  if(start < end) {\r\n    int pivotValue = select(array, start, end, ((end-start+1)/2) );\r\n    int pivotIndex = partition(array, start, end, pivotValue);\r\n    //cout << pivotIndex << endl;\r\n    printArray(array);\r\n    quickSortSelect(array, start, pivotIndex-1);\r\n    quickSortSelect(array, pivotIndex+1, end);\r\n  }\r\n}\r\n\r\nbool isArraySorted(int array[]) {\r\n\r\n  for(int i = 0; i < n; i++) \r\n  if(i > 0) {\r\n    if(array[i-1] > array[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nvoid printArrayStatus(int array[]) {\r\n  if(isArraySorted(array)) {\r\n    cout << \"Tablica jest posortowana\" << endl;\r\n  }\r\n  el"]
[1202.041782, "o", "se {\r\n    cout << \"Tablica nie jest posortowana\" << endl;\r\n  }\r\n}\r\n\r\nint main() {\r\n  cin >> n;\r\n  int array[n] = {0};\r\n  int element = 0;\r\n  int i = 0;\r\n  while(cin >> element) {\r\n    array[i] = element;\r\n    i++;\r\n  }\r\n  if(n<50) printArrayStatus(array);\r\n  printArray(array);\r\n  auto start = chrono::high_resolution_clock::now();\r\n  quickSortSelect(array, 0, n-1);\r\n  auto finish = chrono::high_resolution_clock::now();\r\n  int time = std::chrono::duration_cast<std::chrono::nanoseconds>(finish-start).count();\r\n  if(n<50) printArrayStatus(array);\r\n  cout << n << \";\" << no_comparisons << \";\" << time << endl;\r\n  return 0;\r\n}"]
[1202.042504, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1207.263305, "o", "g"]
[1207.63128, "o", "+"]
[1207.81952, "o", "+"]
[1208.147228, "o", " "]
[1208.303518, "o", "-"]
[1208.515398, "o", "o"]
[1208.915507, "o", " "]
[1209.535588, "o", "q"]
[1209.651268, "o", "u"]
[1209.799499, "o", "i"]
[1209.951194, "o", "c"]
[1210.039249, "o", "k"]
[1210.811411, "o", "_"]
[1211.383259, "o", "s"]
[1211.515474, "o", "o"]
[1211.63536, "o", "r"]
[1211.795322, "o", "t"]
[1212.28329, "o", "_"]
[1212.495344, "o", "s"]
[1212.69135, "o", "e"]
[1212.799348, "o", "l"]
[1212.927206, "o", "e"]
[1213.119308, "o", "c"]
[1213.299407, "o", "t"]
[1213.427225, "o", " "]
[1214.263595, "o", "q"]
[1214.43112, "o", "u"]
[1214.591258, "o", "i"]
[1214.71527, "o", "c"]
[1214.83135, "o", "k"]
[1215.399239, "o", "_"]
[1215.651414, "o", "s"]
[1215.747375, "o", "o"]
[1215.91541, "o", "r"]
[1216.071384, "o", "t"]
[1216.471432, "o", "_"]
[1216.84724, "o", "s"]
[1217.019392, "o", "e"]
[1217.183083, "o", "l"]
[1217.294446, "o", "e"]
[1217.499316, "o", "c"]
[1217.699435, "o", "t"]
[1217.89121, "o", "."]
[1218.02343, "o", "c"]
[1218.291263, "o", "p"]
[1218.46324, "o", "p \r"]
[1220.087237, "o", "\u001b[A\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[Kp\r\n"]
[1220.451138, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1246.219267, "o", "."]
[1246.291023, "o", "/"]
[1246.999156, "o", "g"]
[1247.271442, "o", "e"]
[1247.386932, "o", "n"]
[1247.515089, "o", "e"]
[1247.707256, "o", "r"]
[1247.919319, "o", "a"]
[1248.111067, "o", "t"]
[1248.195131, "o", "o"]
[1248.367156, "o", "r"]
[1248.687277, "o", " "]
[1249.135224, "o", "1"]
[1250.01896, "o", "6"]
[1250.467236, "o", " "]
[1250.89884, "o", "|"]
[1251.16722, "o", " "]
[1252.09903, "o", "q"]
[1252.207174, "o", "u"]
[1252.622891, "o", "\b\u001b[K"]
[1253.119138, "o", "\b\u001b[K"]
[1253.519048, "o", "/"]
[1253.530874, "o", "."]
[1254.82299, "o", "\b\u001b[K"]
[1255.02294, "o", "\b\u001b[K"]
[1255.430912, "o", "."]
[1255.514836, "o", "/"]
[1256.114946, "o", "q"]
[1256.310815, "o", "u"]
[1256.474731, "o", "i"]
[1256.678829, "o", "c"]
[1256.82668, "o", "k"]
[1257.830938, "o", "_"]
[1258.554964, "o", "s"]
[1258.731062, "o", "o"]
[1258.874883, "o", "r"]
[1259.114969, "o", "t"]
[1259.818897, "o", "_"]
[1260.046596, "o", "s"]
[1260.266768, "o", "e"]
[1260.402836, "o", "l"]
[1260.574651, "o", "e"]
[1261.278694, "o", "c"]
[1261.498888, "o", "t"]
[1262.142653, "o", "\r\n"]
[1262.147566, "o", "Tablica nie jest posortowana\r\n9 12 27 13 1 9 21 10 27 1 23 2 13 19 8 26 \r\n10 1 2 8 9 1 9 12 13 27 13 19 21 27 23 26 \r\n1 1 2 8 9 10 9 12 13 27 13 19 21 27 23 26 \r\n1 1 2 8 9 10 9 12 13 27 13 19 21 27 23 26 \r\n1 1 2 8 9 9 10 12 13 27 13 19 21 27 23 26 \r\n"]
[1262.147677, "o", "1 1 2 8 9 9 10 12 13 27 13 19 21 27 23 26 \r\n1 1 2 8 9 9 10 12 13 13 19 21 23 26 27 27 \r\n1 1 2 8 9 9 10 12 13 13 19 21 23 26 27 27 \r\n1 1 2 8 9 9 10 12 13 13 19 21 23 26 27 27 \r\n1 1 2 8 9 9 10 12 13 13 19 21 23 26 27 27 \r\n1 1 2 8 9 9 10 12 13 13 19 21 23 26 27 27 \r\nTablica jest posortowana\r\n16;258;122616\r\n"]
[1262.148503, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1294.422553, "o", "#"]
[1294.74668, "o", " "]
[1294.902558, "o", "a"]
[1295.142449, "o", "l"]
[1295.374553, "o", "g"]
[1295.478698, "o", "o"]
[1295.798648, "o", "r"]
[1296.058422, "o", "y"]
[1296.258448, "o", "t"]
[1296.466493, "o", "m"]
[1296.622925, "o", "y"]
[1296.790644, "o", " "]
[1297.37468, "o", "q"]
[1297.558699, "o", "u"]
[1297.770739, "o", "i"]
[1297.906679, "o", "c"]
[1298.030845, "o", "k"]
[1298.675086, "o", "s"]
[1298.76646, "o", "o"]
[1298.970688, "o", "r"]
[1299.178524, "o", "t"]
[1301.202573, "o", " "]
[1301.538552, "o", "("]
[1301.962549, "o", "s"]
[1302.078549, "o", "i"]
[1302.222446, "o", "n"]
[1302.314456, "o", "g"]
[1302.418522, "o", "l"]
[1302.574414, "o", "e"]
[1302.674388, "o", " "]
[1303.002603, "o", "p"]
[1303.206599, "o", "i"]
[1303.370597, "o", "v"]
[1303.458589, "o", "o"]
[1303.59031, "o", "t"]
[1303.734359, "o", " "]
[1303.9186, "o", "i"]
[1304.046594, "o", " "]
[1304.394539, "o", "d"]
[1304.506536, "o", "u"]
[1304.658707, "o", "a"]
[1304.770415, "o", "l"]
[1304.930568, "o", " "]
[1305.362609, "o", "p"]
[1305.554563, "o", "i"]
[1305.982637, "o", "v \r"]
[1306.10647, "o", "o"]
[1306.222591, "o", "t"]
[1306.942504, "o", ")"]
[1307.25456, "o", " "]
[1307.506595, "o", "t"]
[1307.750476, "o", "a"]
[1307.842339, "o", "k"]
[1307.990481, "o", "i"]
[1308.114457, "o", "e"]
[1308.222528, "o", " "]
[1308.374439, "o", "s"]
[1308.562571, "o", "a"]
[1308.670497, "o", "m"]
[1308.782371, "o", "e"]
[1308.906579, "o", " "]
[1309.098574, "o", "j"]
[1309.23451, "o", "a"]
[1309.326449, "o", "k"]
[1309.730519, "o", " "]
[1320.982579, "o", "w"]
[1321.446603, "o", "\b\u001b[K"]
[1321.762563, "o", "n"]
[1321.902565, "o", "a"]
[1322.046645, "o", " "]
[1323.202456, "o", "l"]
[1323.478652, "o", "i"]
[1323.858375, "o", "ś"]
[1324.062566, "o", "c"]
[1324.170654, "o", "i"]
[1324.302185, "o", "e"]
[1324.414348, "o", " "]
[1325.410379, "o", "2"]
[1325.526543, "o", "."]
[1326.566601, "o", "\r\n"]
[1326.56708, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1327.9384, "o", "#"]
[1328.498642, "o", " "]
[1328.602595, "o", "w"]
[1328.802582, "o", "y"]
[1328.91852, "o", "n"]
[1328.982607, "o", "i"]
[1329.202558, "o", "k"]
[1329.286545, "o", "i"]
[1329.569782, "o", " "]
[1330.04224, "o", "z"]
[1330.162693, "o", "n"]
[1330.310566, "o", "a"]
[1330.426529, "o", "j"]
[1330.546341, "o", "d"]
[1330.798565, "o", "u"]
[1330.990455, "o", "j"]
[1331.422653, "o", "ą"]
[1331.778612, "o", " "]
[1332.062573, "o", "s"]
[1332.146604, "o", "i"]
[1332.490409, "o", "ę"]
[1332.742588, "o", " "]
[1334.014381, "o", "w"]
[1334.094181, "o", " "]
[1334.49034, "o", "f"]
[1334.574325, "o", "o"]
[1334.726321, "o", "l"]
[1335.010574, "o", "d"]
[1335.238479, "o", "e"]
[1335.414533, "o", "r"]
[1335.634494, "o", "z"]
[1335.83847, "o", "e"]
[1335.974493, "o", " "]
[1336.118442, "o", "w"]
[1336.354568, "o", "y"]
[1336.478424, "o", "k"]
[1336.594565, "o", "r"]
[1336.766533, "o", "e"]
[1336.930544, "o", "s"]
[1337.122571, "o", "y"]
[1337.398568, "o", "\r\n"]
[1337.398892, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1344.650391, "o", "#"]
[1345.178546, "o", " "]
[1345.658396, "o", "w"]
[1345.850588, "o", " "]
[1346.346432, "o", "W"]
[1346.758512, "o", "o"]
[1346.878525, "o", "r"]
[1347.094423, "o", "s"]
[1347.290383, "o", "t"]
[1347.67432, "o", "C"]
[1347.90641, "o", "a"]
[1348.098341, "o", "s"]
[1348.290332, "o", "e"]
[1348.406534, "o", " "]
[1349.950704, "o", "Q"]
[1350.358357, "o", "u"]
[1350.542284, "o", "i"]
[1350.6902, "o", "c"]
[1350.814502, "o", "k"]
[1351.345403, "o", "S"]
[1351.586476, "o", "o"]
[1351.714455, "o", "r"]
[1351.882318, "o", "t"]
[1352.002548, "o", " "]
[1352.326229, "o", " "]
[1352.830205, "o", "\b\u001b[K"]
[1353.106357, "o", "z"]
[1353.322376, "o", " "]
[1353.742127, "o", "d"]
[1353.834428, "o", "o"]
[1353.958138, "o", "d"]
[1354.158417, "o", "a"]
[1354.354539, "o", "t"]
[1354.442149, "o", "k"]
[1354.550544, "o", "i"]
[1354.654395, "o", "e"]
[1354.774348, "o", "m"]
[1354.970606, "o", " "]
[1355.318457, "o", "s"]
[1355.934508, "o", "\b\u001b[K"]
[1356.402261, "o", "S"]
[1356.706322, "o", "e"]
[1356.814523, "o", "l"]
[1356.934471, "o", "e"]
[1357.110211, "o", "c"]
[1357.306466, "o", "t"]
[1357.406474, "o", " "]
[1357.59039, "o", "d"]
[1357.790309, "o", "z"]
[1357.966319, "o", "i \r"]
[1358.110115, "o", "a"]
[1358.422412, "o", "ł"]
[1358.658308, "o", "a"]
[1358.978482, "o", " "]
[1361.246256, "o", "o"]
[1361.982405, "o", "\b\u001b[K"]
[1362.12626, "o", "a"]
[1362.318436, "o", "s"]
[1362.57038, "o", "y"]
[1362.678133, "o", "m"]
[1362.862424, "o", "p"]
[1363.038317, "o", "t"]
[1363.174071, "o", "o"]
[1363.558166, "o", "t"]
[1363.734196, "o", "y"]
[1363.970438, "o", "c"]
[1364.166173, "o", "z"]
[1364.270381, "o", "n"]
[1364.326247, "o", "i"]
[1364.434372, "o", "e"]
[1364.550365, "o", " "]
[1364.766429, "o", "l"]
[1364.902243, "o", "e"]
[1365.058493, "o", "p"]
[1365.278294, "o", "i"]
[1365.430378, "o", "e"]
[1365.530321, "o", "j"]
[1366.194247, "o", " "]
[1366.654334, "o", "("]
[1368.222303, "o", "m"]
[1368.914173, "o", "\b\u001b[K"]
[1369.326011, "o", "n"]
[1370.886301, "o", "*"]
[1371.110184, "o", "l"]
[1371.314328, "o", "o"]
[1371.510207, "o", "g"]
[1372.102451, "o", "n"]
[1372.902163, "o", ")"]
[1374.950135, "o", " "]
[1375.198385, "o", "v"]
[1375.446285, "o", "s"]
[1375.618382, "o", " "]
[1376.566202, "o", "n"]
[1376.998113, "o", "^"]
[1377.734111, "o", "2"]
[1381.166228, "o", ")"]
[1382.358321, "o", "\b"]
[1382.522353, "o", "\b"]
[1382.678097, "o", "\b"]
[1383.010155, "o", "\b"]
[1383.66637, "o", "(n^2)\b\b\b\b"]
[1384.350522, "o", "\u001b[C"]
[1384.851165, "o", "\u001b[C"]
[1384.88175, "o", "\u001b[C"]
[1384.912749, "o", "\u001b[C"]
[1384.943335, "o", "\u0007"]
[1384.972982, "o", "\u0007"]
[1385.422309, "o", " "]
[1385.74616, "o", "n"]
[1385.826125, "o", "i"]
[1386.250219, "o", "ż"]
[1387.714309, "o", " "]
[1389.482178, "o", "Q"]
[1389.766251, "o", "u"]
[1389.941959, "o", "i"]
[1390.030207, "o", "c"]
[1390.154208, "o", "k"]
[1390.633975, "o", "S"]
[1390.878257, "o", "o"]
[1390.99419, "o", "r"]
[1391.149977, "o", "t"]
[1391.298132, "o", " "]
[1391.462121, "o", "k"]
[1391.638177, "o", "l"]
[1391.798053, "o", "a"]
[1391.993943, "o", "s"]
[1392.205901, "o", "y"]
[1392.285115, "o", "c"]
[1392.477854, "o", "z"]
[1392.626085, "o", "n"]
[1392.666072, "o", "y"]
[1393.470069, "o", "\r\n"]
[1393.470496, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1394.930065, "o", "#"]
[1395.534049, "o", " "]
[1395.702195, "o", "j"]
[1395.830169, "o", "e"]
[1395.974092, "o", "d"]
[1396.086207, "o", "n"]
[1396.250234, "o", "a"]
[1396.322112, "o", "k"]
[1396.506292, "o", " "]
[1396.85419, "o", "w"]
[1397.022236, "o", "r"]
[1397.23789, "o", "a"]
[1397.482062, "o", "z"]
[1397.62222, "o", " "]
[1397.757987, "o", "z"]
[1397.954113, "o", "e"]
[1398.069524, "o", " "]
[1398.2462, "o", "w"]
[1399.486182, "o", "z"]
[1399.71417, "o", "r"]
[1399.85017, "o", "o"]
[1400.110045, "o", "s"]
[1400.329965, "o", "t"]
[1400.502116, "o", "e"]
[1400.602168, "o", "m"]
[1400.801962, "o", " "]
[1400.922207, "o", "r"]
[1401.061847, "o", "o"]
[1401.338254, "o", "m"]
[1401.681931, "o", "\b\u001b[K"]
[1401.818093, "o", "z"]
[1401.934036, "o", "m"]
[1402.017914, "o", "i"]
[1402.141868, "o", "a"]
[1402.378128, "o", "r"]
[1402.498165, "o", "u"]
[1402.626058, "o", " "]
[1402.762119, "o", "t"]
[1403.025945, "o", "a"]
[1403.293914, "o", "b"]
[1403.365845, "o", "l"]
[1403.545757, "o", "i"]
[1403.662131, "o", "c"]
[1403.861918, "o", "y"]
[1404.533944, "o", ","]
[1404.770258, "o", " "]
[1405.325791, "o", "W"]
[1405.625906, "o", "o \r"]
[1405.741879, "o", "r"]
[1405.954066, "o", "s"]
[1406.142025, "o", "t"]
[1406.554085, "o", "C"]
[1406.78995, "o", "a"]
[1406.974001, "o", "s"]
[1407.16604, "o", "e"]
[1407.270132, "o", " "]
[1407.417872, "o", "s"]
[1407.606075, "o", "t"]
[1408.098132, "o", "a"]
[1408.289979, "o", "j"]
[1408.406143, "o", "e"]
[1408.537958, "o", " "]
[1408.717976, "o", "s"]
[1408.797951, "o", "i"]
[1409.129975, "o", "ę"]
[1409.330158, "o", " "]
[1409.718052, "o", "c"]
[1409.81804, "o", "o"]
[1409.986067, "o", "r"]
[1410.557929, "o", "\b\u001b[K"]
[1410.786186, "o", " "]
[1410.853897, "o", "r"]
[1411.08601, "o", "a"]
[1411.445911, "o", "z"]
[1411.610024, "o", " "]
[1411.841796, "o", "m"]
[1412.066116, "o", "n"]
[1412.1339, "o", "i"]
[1412.245896, "o", "e"]
[1412.357779, "o", "j"]
[1412.566183, "o", " "]
[1412.773907, "o", "p"]
[1412.913996, "o", "r"]
[1413.109927, "o", "a"]
[1413.305984, "o", "w"]
[1413.481744, "o", "d"]
[1413.566031, "o", "o"]
[1413.761713, "o", "p"]
[1413.938114, "o", "o"]
[1414.089903, "o", "d"]
[1414.197883, "o", "o"]
[1414.389906, "o", "b"]
[1414.518091, "o", "n"]
[1414.678025, "o", "y"]
[1416.47791, "o", ","]
[1416.657895, "o", " "]
[1416.854037, "o", "j"]
[1417.049996, "o", "e"]
[1417.206048, "o", "g"]
[1417.253741, "o", "o"]
[1417.406072, "o", " "]
[1417.92624, "o", "p"]
[1418.050068, "o", "p"]
[1418.161731, "o", "b"]
[1418.289895, "o", " "]
[1418.594043, "o", "z"]
[1418.877952, "o", "b"]
[1418.977756, "o", "i"]
[1419.173835, "o", "e"]
[1419.301903, "o", "g"]
[1419.549905, "o", "a"]
[1419.67405, "o", " "]
[1419.837874, "o", "d"]
[1419.97385, "o", "o"]
[1420.154124, "o", " "]
[1420.294011, "o", "s"]
[1420.569846, "o", "\b\u001b[K"]
[1420.694027, "o", "z"]
[1420.913975, "o", "e"]
[1421.073936, "o", "r"]
[1421.322017, "o", "a"]
[1421.777808, "o", "\r\n"]
[1421.778153, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1423.514037, "o", "#"]
[1424.249789, "o", " "]
[1425.721999, "o", "Q"]
[1425.973653, "o", "u"]
[1426.145848, "o", "i"]
[1426.273608, "o", "c"]
[1426.369576, "o", "k"]
[1426.917951, "o", "S"]
[1427.145818, "o", "o"]
[1427.269972, "o", "r"]
[1427.417633, "o", "t"]
[1427.51399, "o", " "]
[1428.28986, "o", "z"]
[1428.398059, "o", " "]
[1428.561901, "o", "d"]
[1428.689612, "o", "o"]
[1428.845834, "o", "d"]
[1429.097922, "o", "a"]
[1429.349913, "o", "t"]
[1429.497896, "o", "k"]
[1429.66997, "o", "i"]
[1430.049933, "o", "m"]
[1430.361683, "o", "\b\u001b[K"]
[1430.445886, "o", "e"]
[1430.585789, "o", "m"]
[1430.825766, "o", " "]
[1431.229904, "o", "S"]
[1431.517899, "o", "e"]
[1431.653959, "o", "l"]
[1431.801953, "o", "e"]
[1431.989762, "o", "c"]
[1432.205665, "o", "t"]
[1432.334009, "o", " "]
[1497.773265, "o", "j"]
[1497.941201, "o", "e"]
[1498.149412, "o", "s"]
[1498.305464, "o", " "]
[1498.713407, "o", "\b\u001b[K"]
[1498.857143, "o", "t"]
[1499.009476, "o", " "]
[1499.477402, "o", "b"]
[1499.633396, "o", "a"]
[1499.809447, "o", "r"]
[1499.99317, "o", "d"]
[1500.217394, "o", "z"]
[1500.321375, "o", "i"]
[1500.501305, "o", "e"]
[1500.661416, "o", "j"]
[1500.857246, "o", " "]
[1501.105312, "o", "s \r"]
[1501.253342, "o", "k"]
[1501.337295, "o", "o"]
[1501.557125, "o", "m"]
[1501.769212, "o", "p"]
[1501.937393, "o", "l"]
[1502.129379, "o", "i"]
[1502.309409, "o", "k"]
[1502.701347, "o", "o"]
[1503.301031, "o", "w"]
[1503.553455, "o", "a"]
[1503.717392, "o", "n"]
[1504.009161, "o", "y"]
[1504.285291, "o", ","]
[1504.485432, "o", " "]
[1504.729195, "o", "s"]
[1504.881244, "o", "t"]
[1505.10139, "o", "a"]
[1505.329408, "o", "ł"]
[1505.505412, "o", "a"]
[1505.829337, "o", " "]
[1506.077216, "o", "s"]
[1506.32524, "o", "t"]
[1506.41701, "o", "o"]
[1506.565281, "o", "j"]
[1506.981411, "o", "ą"]
[1507.3773, "o", "c"]
[1507.8732, "o", "a"]
[1508.02919, "o", " "]
[1509.813275, "o", "p"]
[1509.965189, "o", "r"]
[1510.217366, "o", "z"]
[1510.657276, "o", "y"]
[1510.857863, "o", " "]
[1511.961476, "o", "g"]
[1512.217208, "o", "ł"]
[1512.525169, "o", "ó"]
[1512.764908, "o", "w"]
[1512.909123, "o", "n"]
[1513.061255, "o", "y"]
[1513.165179, "o", "m"]
[1513.337343, "o", " "]
[1513.545355, "o", "a"]
[1513.789135, "o", "s"]
[1514.069223, "o", "y"]
[1514.189103, "o", "m"]
[1514.401141, "o", "p"]
[1514.533313, "o", "t"]
[1514.653281, "o", "o"]
[1514.837185, "o", "t"]
[1515.037201, "o", "y"]
[1515.361211, "o", "c"]
[1515.541075, "o", "z"]
[1515.637216, "o", "n"]
[1515.688928, "o", "i"]
[1515.809232, "o", "e"]
[1515.913338, "o", " "]
[1516.0653, "o", "c"]
[1516.233308, "o", "z"]
[1516.469074, "o", "y"]
[1516.74118, "o", "n"]
[1516.893283, "o", "n"]
[1517.049457, "o", "i"]
[1517.229184, "o", "k"]
[1517.581299, "o", "u"]
[1517.777268, "o", " "]
[1517.965093, "o", "j"]
[1518.097053, "o", "e"]
[1518.289149, "o", "s"]
[1518.469261, "o", "t"]
[1518.593363, "o", " "]
[1518.873148, "o", "d"]
[1519.033122, "o", "u"]
[1519.397278, "o", "ż"]
[1519.601116, "o", "o"]
[1519.789089, "o", " "]
[1519.945231, "o", "w"]
[1520.06516, "o", "i"]
[1520.424962, "o", "ę"]
[1520.63304, "o", "k"]
[1520.772965, "o", "s"]
[1521.021708, "o", "a"]
[1521.417264, "o", "\b\u001b[K"]
[1521.529026, "o", "z"]
[1521.705299, "o", "a"]
[1521.884924, "o", ","]
[1522.237291, "o", " "]
[1522.349266, "o", "s"]
[1522.529104, "o", "t"]
[1522.813153, "o", "ą"]
[1523.01723, "o", "d"]
[1523.161294, "o", " "]
[1524.965082, "o", "j"]
[1525.085176, "o", "e"]
[1525.265172, "o", "s"]
[1525.452995, "o", "t"]
[1525.565328, "o", " "]
[1525.949257, "o", "o"]
[1526.161077, "o", "n"]
[1529.31325, "o", " "]
[1529.580918, "o", "n"]
[1529.656982, "o", "i"]
[1529.796752, "o", "e"]
[1529.909271, "o", "p \r"]
[1530.069157, "o", "r"]
[1530.312867, "o", "a"]
[1530.545026, "o", "k"]
[1530.681027, "o", "t"]
[1530.877034, "o", "y"]
[1531.117045, "o", "c"]
[1531.328916, "o", "z"]
[1531.476974, "o", "n"]
[1531.617113, "o", "y"]
[1533.009219, "o", " "]
[1533.161114, "o", "w"]
[1533.253244, "o", " "]
[1533.769203, "o", "A"]
[1533.993133, "o", "v"]
[1534.213009, "o", "e"]
[1534.340819, "o", "r"]
[1534.556773, "o", "a"]
[1534.752907, "o", "g"]
[1534.928945, "o", "e"]
[1535.661075, "o", "C"]
[1535.917437, "o", "a"]
[1536.121142, "o", "s"]
[1536.309004, "o", "e"]
[1537.057352, "o", "\r\n\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista3\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista3\u001b[00m$ "]
[1541.526891, "o", "exit\r\n"]
