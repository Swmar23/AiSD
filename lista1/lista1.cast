{"version": 2, "width": 203, "height": 55, "timestamp": 1647007764, "idle_time_limit": 0.1, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.019112, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[1.418167, "o", "#"]
[2.006052, "o", "M"]
[2.154175, "o", "a"]
[2.369898, "o", "r"]
[2.534037, "o", "e"]
[2.669979, "o", "k"]
[3.6781, "o", " "]
[4.142051, "o", "Ś"]
[4.442104, "o", "w"]
[4.562053, "o", "i"]
[4.725926, "o", "e"]
[4.901914, "o", "r"]
[5.086049, "o", "g"]
[5.190036, "o", "o"]
[5.542123, "o", "ń"]
[5.782085, "o", " "]
[6.325276, "o", "2"]
[6.501752, "o", "6"]
[6.638009, "o", "1"]
[6.746013, "o", "7"]
[6.90999, "o", "5"]
[7.041982, "o", "0"]
[8.077837, "o", ","]
[8.312967, "o", " "]
[8.734112, "o", "A"]
[9.333856, "o", "i"]
[9.778015, "o", "S"]
[10.129899, "o", "D"]
[10.68995, "o", " "]
[11.017929, "o", "l"]
[11.337527, "o", "s"]
[11.63793, "o", "\b\u001b[K"]
[11.865926, "o", "i"]
[11.965824, "o", "s"]
[12.133944, "o", "t"]
[12.353273, "o", "a"]
[12.522009, "o", " "]
[12.705881, "o", "1"]
[12.913969, "o", "."]
[13.637855, "o", "\r\n"]
[13.638142, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[15.533849, "o", "#"]
[17.177992, "o", "\b\u001b[K"]
[17.537854, "o", "l"]
[17.657914, "o", "s"]
[17.870133, "o", " "]
[18.834279, "o", "\r\n"]
[18.83682, "o", "lista1.cast\r\n"]
[18.83751, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[21.357707, "o", "s"]
[21.61388, "o", "v"]
[21.842025, "o", "n"]
[22.12991, "o", " "]
[22.473904, "o", "e"]
[22.693944, "o", "x"]
[22.765808, "o", "p"]
[22.945897, "o", "o"]
[23.061776, "o", "r"]
[23.245862, "o", "t"]
[23.422029, "o", " "]
[25.250993, "o", "https://repo.cs.pwr.edu.pl/261750/lista1"]
[26.56589, "o", "\r\n"]
[27.145238, "o", "A    lista1\r\n"]
[27.292347, "o", "A    lista1/wyniki_zadanie2.txt\r\n"]
[27.292493, "o", "A    lista1/wyniki_zadanie3.txt\r\n"]
[27.295994, "o", "A    lista1/zadanie1.c\r\n"]
[27.298067, "o", "A    lista1/zadanie2.c\r\n"]
[27.300329, "o", "A    lista1/zadanie3.c\r\n"]
[27.300492, "o", "Wyeksportowano wersję 1.\r\n"]
[27.301968, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[28.445714, "o", "l"]
[28.593796, "o", "s"]
[28.873579, "o", "\r\n"]
[28.876659, "o", "\u001b[0m\u001b[01;34mlista1\u001b[0m  lista1.cast\r\n"]
[28.877442, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja\u001b[00m$ "]
[30.36504, "o", "c"]
[30.549765, "o", "d"]
[30.681826, "o", " "]
[31.185628, "o", "l"]
[31.393637, "o", "i"]
[31.501739, "o", "s"]
[31.665786, "o", "t"]
[31.937905, "o", "a"]
[32.213766, "o", "1"]
[32.921761, "o", "\r\n"]
[32.922312, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[34.609526, "o", "#"]
[35.021678, "o", "Z"]
[35.609596, "o", "A"]
[35.79379, "o", "D"]
[35.965749, "o", "A"]
[36.069784, "o", "N"]
[36.153743, "o", "I"]
[36.277742, "o", "E"]
[36.553879, "o", " "]
[36.877862, "o", "!"]
[37.469623, "o", "\b\u001b[K"]
[37.537737, "o", "1"]
[38.197613, "o", "\r\n"]
[38.197923, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[39.653057, "o", "#"]
[40.05376, "o", " "]
[40.397497, "o", "k"]
[40.489734, "o", "o"]
[40.597585, "o", "d"]
[40.77391, "o", " "]
[41.365743, "o", "ź"]
[41.64175, "o", "r"]
[41.929826, "o", "ó"]
[42.141749, "o", "d"]
[42.36082, "o", "ł"]
[42.577806, "o", "o"]
[42.721825, "o", "w"]
[43.141836, "o", "y"]
[44.09369, "o", "\r\n"]
[44.094054, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[44.761689, "o", "c"]
[45.009792, "o", "a"]
[45.217695, "o", "t"]
[45.360902, "o", " "]
[45.653653, "o", "z"]
[45.853709, "o", "a"]
[45.977786, "o", "d"]
[46.157773, "o", "a"]
[46.265805, "o", "n"]
[46.317713, "o", "i"]
[46.453645, "o", "e"]
[46.781716, "o", "1"]
[46.933767, "o", "."]
[47.141711, "o", "c"]
[47.505688, "o", "\r\n"]
[47.507915, "o", "//Marek Świergoń 261750 L1Z1\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n\r\n// KOLEJKA LIFO - IMPLEMENTACJA STATYCZNA\r\nstruct Stos {\r\n  int szczyt;\r\n  int pojemnosc;\r\n  int* s;\r\n};\r\n\r\nstruct Stos* nowyStos(int poj) {\r\n  struct Stos* stos = (struct Stos*)malloc(sizeof(struct Stos));\r\n  stos->pojemnosc = poj;\r\n  stos->szczyt = -1; // pusty stos\r\n  stos->s = (int*)malloc(stos->pojemnosc * sizeof(int));\r\n  return stos;\r\n}\r\n\r\nint czyPelny(struct Stos* stos) {\r\n  if(stos->szczyt == (stos->pojemnosc - 1)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nint czyPusty(struct Stos* stos) {\r\n  if(stos->szczyt == -1) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nvoid dodaj(struct Stos* stos, int element) {\r\n  if(czyPelny(stos)) {\r\n    printf(\"Stos jest pełny!\\n\");\r\n    return;\r\n  }\r\n  stos->szczyt++;\r\n  stos->s[stos->szczyt] = element; \r\n  printf(\"Dodano element %d. (Stos LIFO)\\n\", element);\r\n}\r\n\r\nint zabierz(struct Stos* stos){\r\n  if (czyPusty(stos)) {\r\n    printf(\"Stos jest pusty! Zwracam liczbę"]
[47.508209, "o", " -1 (error).\\n\");\r\n    return -1;\r\n  }\r\n  int element = stos->s[stos->szczyt];\r\n  stos->szczyt--;\r\n  printf(\"Zabrano element %d. (Stos LIFO)\\n\", element);\r\n  return element;\r\n}\r\n\r\nint podejrzyj(struct Stos* stos){\r\n  if (czyPusty(stos)) {\r\n    printf(\"Stos jest pusty! Zwracam liczbę -1 (error).\\n\");\r\n    return -1;\r\n  }\r\n  int element = stos->s[stos->szczyt];\r\n  return element;\r\n}\r\n\r\n\r\n// KOLEJKA FIFO - IMPLEMENTACJA STATYCZNA, CYKLICZNA (implementacja modyfikacji pseudokodu z notatek)\r\nstruct Kolejka {\r\n  int poczatek;\r\n  int koniec;\r\n  int obecny_rozmiar;\r\n  int pojemnosc;\r\n  int* q;\r\n};\r\n\r\nstruct Kolejka* nowaKolejka(int poj) {\r\n  struct Kolejka* kolejka = (struct Kolejka*)malloc(sizeof(struct Kolejka));\r\n  kolejka->pojemnosc = poj;\r\n  kolejka->obecny_rozmiar = 0;\r\n  kolejka->poczatek = kolejka->obecny_rozmiar; // pusta kolejka\r\n  kolejka->koniec = poj - 1;\r\n  kolejka->q = (int*)malloc(kolejka->pojemnosc * sizeof(int));\r\n  return kolejka;\r\n}\r\n\r\nint czyKolejkaPelna(struct Kolejka* kolejka) {\r\n  if(kolejka-"]
[47.508443, "o", ">obecny_rozmiar == kolejka->pojemnosc) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nint czyKolejkaPusta(struct Kolejka* kolejka) {\r\n  if(kolejka->obecny_rozmiar == 0) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nvoid dodajDoKolejki(struct Kolejka* kolejka, int element) {\r\n  if(czyKolejkaPelna(kolejka)) {\r\n    printf(\"kolejka jest pełna!\\n\");\r\n    return;\r\n  }\r\n  if (kolejka->koniec == (kolejka->pojemnosc - 1)) {\r\n    kolejka->koniec = 0;\r\n  }\r\n  else {\r\n    kolejka->koniec++;\r\n  }\r\n  kolejka->q[kolejka->koniec] = element;\r\n  kolejka->obecny_rozmiar++;\r\n  printf(\"Dodano element %d. (Kolejka FIFO)\\n\", element);\r\n}\r\n\r\nint zabierzZKolejki(struct Kolejka* kolejka){\r\n  if (czyKolejkaPusta(kolejka)) {\r\n    printf(\"Kolejka jest pusta! Zwracam liczbę -1 (error).\\n\");\r\n    return -1;\r\n  }\r\n  int element = kolejka->q[kolejka->poczatek];\r\n  if (kolejka->poczatek == (kolejka->pojemnosc - 1)){\r\n    kolejka->poczatek = 0;\r\n  }\r\n  else {\r\n    kolejka->poczatek++;\r\n  }\r\n  kolejka->obecny_rozmiar--;\r\n  printf(\"Zabrano "]
[47.508694, "o", "element %d. (Kolejka FIFO)\\n\", element);\r\n  return element;\r\n}\r\n\r\nint podejrzyjKolejke(struct Kolejka* kolejka){\r\n  if (czyKolejkaPusta(kolejka)) {\r\n    printf(\"kolejka jest pusta! Zwracam liczbę -1 (error).\\n\");\r\n    return -1;\r\n  }\r\n  int element = kolejka->q[kolejka->poczatek];\r\n  return element;\r\n}\r\n\r\nint main() {\r\n  struct Kolejka* kolejka = nowaKolejka(100);\r\n  struct Stos* stos = nowyStos(100);\r\n  printf(\"DODAWANIE 100 ELEMENTOW DO KOLEJKI I STOSU:\\n\");\r\n  for(int i = 1; i<= 100; i++) {\r\n    dodajDoKolejki(kolejka, i);\r\n    dodaj(stos, i);\r\n  }\r\n\r\n  printf(\"\\n\\nProba przepelnienia kolejki i stosu:\\n\");\r\n  //proba przepelnienia stosu i kolejki:\r\n  dodajDoKolejki(kolejka, 2100);\r\n  dodaj(stos, 37);\r\n\r\n  printf(\"\\n\\nZABIERANIE ELEMENTOW Z KOLEJKI I STOSU:\\n\");\r\n  for(int i = 1; i<= 100; i++) {\r\n    zabierzZKolejki(kolejka);\r\n    zabierz(stos);\r\n  }\r\n\r\n  printf(\"\\n\\nProba zabrania elementow z pustej kolejki i pustego stosu:\\n\");\r\n  zabierzZKolejki(kolejka);\r\n  zabierz(stos);\r\n  return 0;\r\n}\r\n"]
[47.508869, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[50.301723, "o", "g"]
[50.889454, "o", "c"]
[51.029737, "o", "c"]
[51.297786, "o", " "]
[51.54969, "o", "-"]
[51.849738, "o", "o"]
[52.169698, "o", " "]
[52.325445, "o", "z"]
[52.481685, "o", "a"]
[52.625395, "o", "d"]
[52.777666, "o", "a"]
[52.897632, "o", "n"]
[52.993781, "o", "i"]
[53.085633, "o", "e"]
[54.04962, "o", "1"]
[54.149643, "o", " "]
[54.360778, "o", "z"]
[54.541445, "o", "a"]
[54.681625, "o", "d"]
[54.853679, "o", "a"]
[54.985712, "o", "n"]
[55.045457, "o", "i"]
[55.165578, "o", "e"]
[55.653598, "o", "1"]
[56.213706, "o", "."]
[56.813614, "o", "c"]
[57.141601, "o", "\r\n"]
[57.194163, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[57.817656, "o", "."]
[57.901723, "o", "/"]
[58.069597, "o", "z"]
[58.245618, "o", "a"]
[58.397107, "o", "d"]
[58.549684, "o", "a"]
[58.729744, "o", "n"]
[58.797687, "o", "i"]
[58.933621, "o", "e"]
[59.301443, "o", "1"]
[59.865649, "o", "\r\n"]
[59.86779, "o", "DODAWANIE 100 ELEMENTOW DO KOLEJKI I STOSU:\r\nDodano element 1. (Kolejka FIFO)\r\nDodano element 1. (Stos LIFO)\r\nDodano element 2. (Kolejka FIFO)\r\nDodano element 2. (Stos LIFO)\r\nDodano element 3. (Kolejka FIFO)\r\nDodano element 3. (Stos LIFO)\r\nDodano element 4. (Kolejka FIFO)\r\nDodano element 4. (Stos LIFO)\r\nDodano element 5. (Kolejka FIFO)\r\nDodano element 5. (Stos LIFO)\r\nDodano element 6. (Kolejka FIFO)\r\nDodano element 6. (Stos LIFO)\r\nDodano element 7. (Kolejka FIFO)\r\nDodano element 7. (Stos LIFO)\r\nDodano element 8. (Kolejka FIFO)\r\nDodano element 8. (Stos LIFO)\r\nDodano element 9. (Kolejka FIFO)\r\nDodano element 9. (Stos LIFO)\r\nDodano element 10. (Kolejka FIFO)\r\nDodano element 10. (Stos LIFO)\r\n"]
[59.868063, "o", "Dodano element 11. (Kolejka FIFO)\r\nDodano element 11. (Stos LIFO)\r\nDodano element 12. (Kolejka FIFO)\r\nDodano element 12. (Stos LIFO)\r\nDodano element 13. (Kolejka FIFO)\r\nDodano element 13. (Stos LIFO)\r\nDodano element 14. (Kolejka FIFO)\r\nDodano element 14. (Stos LIFO)\r\nDodano element 15. (Kolejka FIFO)\r\nDodano element 15. (Stos LIFO)\r\nDodano element 16. (Kolejka FIFO)\r\nDodano element 16. (Stos LIFO)\r\nDodano element 17. (Kolejka FIFO)\r\nDodano element 17. (Stos LIFO)\r\nDodano element 18. (Kolejka FIFO)\r\nDodano element 18. (Stos LIFO)\r\nDodano element 19. (Kolejka FIFO)\r\n"]
[59.868176, "o", "Dodano element 19. (Stos LIFO)\r\nDodano element 20. (Kolejka FIFO)\r\nDodano element 20. (Stos LIFO)\r\nDodano element 21. (Kolejka FIFO)\r\nDodano element 21. (Stos LIFO)\r\nDodano element 22. (Kolejka FIFO)\r\nDodano element 22. (Stos LIFO)\r\nDodano element 23. (Kolejka FIFO)\r\nDodano element 23. (Stos LIFO)\r\nDodano element 24. (Kolejka FIFO)\r\nDodano element 24. (Stos LIFO)\r\nDodano element 25. (Kolejka FIFO)\r\nDodano element 25. (Stos LIFO)\r\nDodano element 26. (Kolejka FIFO)\r\nDodano element 26. (Stos LIFO)\r\nDodano element 27. (Kolejka FIFO)\r\nDodano element 27. (Stos LIFO)\r\nDodano element 28. (Kolejka FIFO)\r\nDodano element 28. (Stos LIFO)\r\nDodano element 29. (Kolejka FIFO)\r\nDodano element 29. (Stos LIFO)\r\nDodano element 30. (Kolejka FIFO)\r\nDodano element 30. (Stos LIFO)\r\nDodano element 31. (Kolejka FIFO)\r\nDodano element 31. (Stos LIFO)\r\nDodano element 32. (Kolejka FIFO)\r\nDodano element 32. (Stos LIFO)\r\nDodano element 33. (Kolejka FIFO)\r\nDodano element 33. (Stos LIFO)\r\nDodano element 34. (Kolejka FIFO)\r\nDodano element 34. "]
[59.868228, "o", "(Stos LIFO)\r\nDodano element 35. (Kolejka FIFO)\r\nDodano element 35. (Stos LIFO)\r\nDodano element 36. (Kolejka FIFO)\r\nDodano element 36. (Stos LIFO)\r\nDodano element 37. (Kolejka FIFO)\r\nDodano element 37. (Stos LIFO)\r\nDodano element 38. (Kolejka FIFO)\r\nDodano element 38. (Stos LIFO)\r\nDodano element 39. (Kolejka FIFO)\r\nDodano element 39. (Stos LIFO)\r\nDodano element 40. (Kolejka FIFO)\r\nDodano element 40. (Stos LIFO)\r\nDodano element 41. (Kolejka FIFO)\r\nDodano element 41. (Stos LIFO)\r\nDodano element 42. (Kolejka FIFO)\r\nDodano element 42. (Stos LIFO)\r\nDodano element 43. (Kolejka FIFO)\r\nDodano element 43. (Stos LIFO)\r\nDodano element 44. (Kolejka FIFO)\r\nDodano element 44. (Stos LIFO)\r\nDodano element 45. (Kolejka FIFO)\r\nDodano element 45. (Stos LIFO)\r\nDodano element 46. (Kolejka FIFO)\r\nDodano element 46. (Stos LIFO)\r\nDodano element 47. (Kolejka FIFO)\r\nDodano element 47. (Stos LIFO)\r\nDodano element 48. (Kolejka FIFO)\r\nDodano element 48. (Stos LIFO)\r\nDodano element 49. (Kolejka FIFO)\r\nDodano element 49. (Stos LIFO)\r\nDodano"]
[59.868266, "o", " element 50. (Kolejka FIFO)\r\nDodano element 50. (Stos LIFO)\r\nDodano element 51. (Kolejka FIFO)\r\nDodano element 51. (Stos LIFO)\r\nDodano element 52. (Kolejka FIFO)\r\nDodano element 52. (Stos LIFO)\r\nDodano element 53. (Kolejka FIFO)\r\nDodano element 53. (Stos LIFO)\r\nDodano element 54. (Kolejka FIFO)\r\n"]
[59.868311, "o", "Dodano element 54. (Stos LIFO)\r\nDodano element 55. (Kolejka FIFO)\r\nDodano element 55. (Stos LIFO)\r\n"]
[59.868346, "o", "Dodano element 56. (Kolejka FIFO)\r\nDodano element 56. (Stos LIFO)\r\nDodano element 57. (Kolejka FIFO)\r\nDodano element 57. (Stos LIFO)\r\nDodano element 58. (Kolejka FIFO)\r\nDodano element 58. (Stos LIFO)\r\nDodano element 59. (Kolejka FIFO)\r\nDodano element 59. (Stos LIFO)\r\nDodano element 60. (Kolejka FIFO)\r\nDodano element 60. (Stos LIFO)\r\nDodano element 61. (Kolejka FIFO)\r\n"]
[59.868735, "o", "Dodano element 61. (Stos LIFO)\r\nDodano element 62. (Kolejka FIFO)\r\nDodano element 62. (Stos LIFO)\r\nDodano element 63. (Kolejka FIFO)\r\nDodano element 63. (Stos LIFO)\r\nDodano element 64. (Kolejka FIFO)\r\nDodano element 64. (Stos LIFO)\r\nDodano element 65. (Kolejka FIFO)\r\nDodano element 65. (Stos LIFO)\r\nDodano element 66. (Kolejka FIFO)\r\nDodano element 66. (Stos LIFO)\r\nDodano element 67. (Kolejka FIFO)\r\nDodano element 67. (Stos LIFO)\r\nDodano element 68. (Kolejka FIFO)\r\nDodano element 68. (Stos LIFO)\r\nDodano element 69. (Kolejka FIFO)\r\nDodano element 69. (Stos LIFO)\r\nDodano element 70. (Kolejka FIFO)\r\nDodano element 70. (Stos LIFO)\r\nDodano element 71. (Kolejka FIFO)\r\nDodano element 71. (Stos LIFO)\r\nDodano element 72. (Kolejka FIFO)\r\nDodano element 72. (Stos LIFO)\r\nDodano element 73. (Kolejka FIFO)\r\nDodano element 73. (Stos LIFO)\r\nDodano element 74. (Kolejka FIFO)\r\nDodano element 74. (Stos LIFO)\r\nDodano element 75. (Kolejka FIFO)\r\nDodano element 75. (Stos LIFO)\r\nDodano element 76. (Kolejka FIFO)\r\nDodano element 76. "]
[59.868828, "o", "(Stos LIFO)\r\nDodano element 77. (Kolejka FIFO)\r\nDodano element 77. (Stos LIFO)\r\nDodano element 78. (Kolejka FIFO)\r\nDodano element 78. (Stos LIFO)\r\nDodano element 79. (Kolejka FIFO)\r\nDodano element 79. (Stos LIFO)\r\nDodano element 80. (Kolejka FIFO)\r\nDodano element 80. (Stos LIFO)\r\nDodano element 81. (Kolejka FIFO)\r\nDodano element 81. (Stos LIFO)\r\nDodano element 82. (Kolejka FIFO)\r\nDodano element 82. (Stos LIFO)\r\nDodano element 83. (Kolejka FIFO)\r\nDodano element 83. (Stos LIFO)\r\nDodano element 84. (Kolejka FIFO)\r\nDodano element 84. (Stos LIFO)\r\nDodano element 85. (Kolejka FIFO)\r\nDodano element 85. (Stos LIFO)\r\nDodano element 86. (Kolejka FIFO)\r\nDodano element 86. (Stos LIFO)\r\nDodano element 87. (Kolejka FIFO)\r\nDodano element 87. (Stos LIFO)\r\nDodano element 88. (Kolejka FIFO)\r\nDodano element 88. (Stos LIFO)\r\nDodano element 89. (Kolejka FIFO)\r\nDodano element 89. (Stos LIFO)\r\nDodano element 90. (Kolejka FIFO)\r\nDodano element 90. (Stos LIFO)\r\nDodano element 91. (Kolejka FIFO)\r\nDodano element 91. (Stos LIFO)\r\nDodano"]
[59.868877, "o", " element 92. (Kolejka FIFO)\r\nDodano element 92. (Stos LIFO)\r\nDodano element 93. (Kolejka FIFO)\r\nDodano element 93. (Stos LIFO)\r\nDodano element 94. (Kolejka FIFO)\r\nDodano element 94. (Stos LIFO)\r\nDodano element 95. (Kolejka FIFO)\r\nDodano element 95. (Stos LIFO)\r\nDodano element 96. (Kolejka FIFO)\r\nDodano element 96. (Stos LIFO)\r\nDodano element 97. (Kolejka FIFO)\r\nDodano element 97. (Stos LIFO)\r\nDodano element 98. (Kolejka FIFO)\r\nDodano element 98. (Stos LIFO)\r\nDodano element 99. (Kolejka FIFO)\r\nDodano element 99. (Stos LIFO)\r\nDodano element 100. (Kolejka FIFO)\r\nDodano element 100. (Stos LIFO)\r\n\r\n\r\nProba przepelnienia kolejki i stosu:\r\nkolejka jest pełna!\r\nStos jest pełny!\r\n\r\n\r\nZABIERANIE ELEMENTOW Z KOLEJKI I STOSU:\r\nZabrano element 1. (Kolejka FIFO)\r\nZabrano element 100. (Stos LIFO)\r\nZabrano element 2. (Kolejka FIFO)\r\nZabrano element 99. (Stos LIFO)\r\nZabrano element 3. (Kolejka FIFO)\r\nZabrano element 98. (Stos LIFO)\r\nZabrano element 4. (Kolejka FIFO)\r\nZabrano element 97. (Stos LIFO)\r\nZabrano element 5. (Kole"]
[59.868919, "o", "jka FIFO)\r\nZabrano element 96. (Stos LIFO)\r\nZabrano element 6. (Kolejka FIFO)\r\nZabrano element 95. (Stos LIFO)\r\nZabrano element 7. (Kolejka FIFO)\r\nZabrano element 94. (Stos LIFO)\r\nZabrano element 8. (Kolejka FIFO)\r\nZabrano element 93. (Stos LIFO)\r\nZabrano element 9. (Kolejka FIFO)\r\nZabrano element 92. (Stos LIFO)\r\nZabrano element 10. (Kolejka FIFO)\r\nZabrano element 91. (Stos LIFO)\r\nZabrano element 11. (Kolejka FIFO)\r\nZabrano element 90. (Stos LIFO)\r\nZabrano element 12. (Kolejka FIFO)\r\nZabrano element 89. (Stos LIFO)\r\nZabrano element 13. (Kolejka FIFO)\r\nZabrano element 88. (Stos LIFO)\r\nZabrano element 14. (Kolejka FIFO)\r\nZabrano element 87. (Stos LIFO)\r\nZabrano element 15. (Kolejka FIFO)\r\nZabrano element 86. (Stos LIFO)\r\nZabrano element 16. (Kolejka FIFO)\r\nZabrano element 85. (Stos LIFO)\r\nZabrano element 17. (Kolejka FIFO)\r\n"]
[59.868968, "o", "Zabrano element 84. (Stos LIFO)\r\nZabrano element 18. (Kolejka FIFO)\r\nZabrano element 83. (Stos LIFO)\r\nZabrano element 19. (Kolejka FIFO)\r\nZabrano element 82. (Stos LIFO)\r\nZabrano element 20. (Kolejka FIFO)\r\nZabrano element 81. (Stos LIFO)\r\n"]
[59.869029, "o", "Zabrano element 21. (Kolejka FIFO)\r\nZabrano element 80. (Stos LIFO)\r\nZabrano element 22. (Kolejka FIFO)\r\nZabrano element 79. (Stos LIFO)\r\n"]
[59.86937, "o", "Zabrano element 23. (Kolejka FIFO)\r\nZabrano element 78. (Stos LIFO)\r\nZabrano element 24. (Kolejka FIFO)\r\nZabrano element 77. (Stos LIFO)\r\nZabrano element 25. (Kolejka FIFO)\r\nZabrano element 76. (Stos LIFO)\r\nZabrano element 26. (Kolejka FIFO)\r\nZabrano element 75. (Stos LIFO)\r\nZabrano element 27. (Kolejka FIFO)\r\nZabrano element 74. (Stos LIFO)\r\nZabrano element 28. (Kolejka FIFO)\r\nZabrano element 73. (Stos LIFO)\r\nZabrano element 29. (Kolejka FIFO)\r\nZabrano element 72. (Stos LIFO)\r\nZabrano element 30. (Kolejka FIFO)\r\nZabrano element 71. (Stos LIFO)\r\nZabrano element 31. (Kolejka FIFO)\r\nZabrano element 70. (Stos LIFO)\r\nZabrano element 32. (Kolejka FIFO)\r\nZabrano element 69. (Stos LIFO)\r\nZabrano element 33. (Kolejka FIFO)\r\nZabrano element 68. (Stos LIFO)\r\nZabrano element 34. (Kolejka FIFO)\r\nZabrano element 67. (Stos LIFO)\r\nZabrano element 35. (Kolejka FIFO)\r\nZabrano element 66. (Stos LIFO)\r\nZabrano element 36. (Kolejka FIFO)\r\nZabrano element 65. (Stos LIFO)\r\nZabrano element 37. (Kolejka FIFO)\r\nZabrano element 64. (S"]
[59.869435, "o", "tos LIFO)\r\nZabrano element 38. (Kolejka FIFO)\r\nZabrano element 63. (Stos LIFO)\r\nZabrano element 39. (Kolejka FIFO)\r\nZabrano element 62. (Stos LIFO)\r\nZabrano element 40. (Kolejka FIFO)\r\nZabrano element 61. (Stos LIFO)\r\nZabrano element 41. (Kolejka FIFO)\r\nZabrano element 60. (Stos LIFO)\r\nZabrano element 42. (Kolejka FIFO)\r\nZabrano element 59. (Stos LIFO)\r\nZabrano element 43. (Kolejka FIFO)\r\nZabrano element 58. (Stos LIFO)\r\nZabrano element 44. (Kolejka FIFO)\r\nZabrano element 57. (Stos LIFO)\r\nZabrano element 45. (Kolejka FIFO)\r\nZabrano element 56. (Stos LIFO)\r\nZabrano element 46. (Kolejka FIFO)\r\nZabrano element 55. (Stos LIFO)\r\nZabrano element 47. (Kolejka FIFO)\r\nZabrano element 54. (Stos LIFO)\r\nZabrano element 48. (Kolejka FIFO)\r\nZabrano element 53. (Stos LIFO)\r\nZabrano element 49. (Kolejka FIFO)\r\nZabrano element 52. (Stos LIFO)\r\nZabrano element 50. (Kolejka FIFO)\r\nZabrano element 51. (Stos LIFO)\r\nZabrano element 51. (Kolejka FIFO)\r\nZabrano element 50. (Stos LIFO)\r\nZabrano element 52. (Kolejka FIFO)\r\nZabrano ele"]
[59.869472, "o", "ment 49. (Stos LIFO)\r\nZabrano element 53. (Kolejka FIFO)\r\nZabrano element 48. (Stos LIFO)\r\nZabrano element 54. (Kolejka FIFO)\r\nZabrano element 47. (Stos LIFO)\r\nZabrano element 55. (Kolejka FIFO)\r\nZabrano element 46. (Stos LIFO)\r\nZabrano element 56. (Kolejka FIFO)\r\nZabrano element 45. (Stos LIFO)\r\nZabrano element 57. (Kolejka FIFO)\r\nZabrano element 44. (Stos LIFO)\r\nZabrano element 58. (Kolejka FIFO)\r\nZabrano element 43. (Stos LIFO)\r\nZabrano element 59. (Kolejka FIFO)\r\nZabrano element 42. (Stos LIFO)\r\nZabrano element 60. (Kolejka FIFO)\r\nZabrano element 41. (Stos LIFO)\r\nZabrano element 61. (Kolejka FIFO)\r\nZabrano element 40. (Stos LIFO)\r\nZabrano element 62. (Kolejka FIFO)\r\nZabrano element 39. (Stos LIFO)\r\nZabrano element 63. (Kolejka FIFO)\r\nZabrano element 38. (Stos LIFO)\r\nZabrano element 64. (Kolejka FIFO)\r\nZabrano element 37. (Stos LIFO)\r\nZabrano element 65. (Kolejka FIFO)\r\nZabrano element 36. (Stos LIFO)\r\nZabrano element 66. (Kolejka FIFO)\r\n"]
[59.869507, "o", "Zabrano element 35. (Stos LIFO)\r\nZabrano element 67. (Kolejka FIFO)\r\nZabrano element 34. (Stos LIFO)\r\nZabrano element 68. (Kolejka FIFO)\r\n"]
[59.869537, "o", "Zabrano element 33. (Stos LIFO)\r\nZabrano element 69. (Kolejka FIFO)\r\nZabrano element 32. (Stos LIFO)\r\nZabrano element 70. (Kolejka FIFO)\r\nZabrano element 31. (Stos LIFO)\r\n"]
[59.869573, "o", "Zabrano element 71. (Kolejka FIFO)\r\nZabrano element 30. (Stos LIFO)\r\nZabrano element 72. (Kolejka FIFO)\r\nZabrano element 29. (Stos LIFO)\r\nZabrano element 73. (Kolejka FIFO)\r\n"]
[59.869615, "o", "Zabrano element 28. (Stos LIFO)\r\nZabrano element 74. (Kolejka FIFO)\r\nZabrano element 27. (Stos LIFO)\r\nZabrano element 75. (Kolejka FIFO)\r\nZabrano element 26. (Stos LIFO)\r\nZabrano element 76. (Kolejka FIFO)\r\n"]
[59.869653, "o", "Zabrano element 25. (Stos LIFO)\r\nZabrano element 77. (Kolejka FIFO)\r\nZabrano element 24. (Stos LIFO)\r\nZabrano element 78. (Kolejka FIFO)\r\nZabrano element 23. (Stos LIFO)\r\nZabrano element 79. (Kolejka FIFO)\r\n"]
[59.869688, "o", "Zabrano element 22. (Stos LIFO)\r\nZabrano element 80. (Kolejka FIFO)\r\nZabrano element 21. (Stos LIFO)\r\nZabrano element 81. (Kolejka FIFO)\r\nZabrano element 20. (Stos LIFO)\r\n"]
[59.869719, "o", "Zabrano element 82. (Kolejka FIFO)\r\nZabrano element 19. (Stos LIFO)\r\nZabrano element 83. (Kolejka FIFO)\r\nZabrano element 18. (Stos LIFO)\r\nZabrano element 84. (Kolejka FIFO)\r\n"]
[59.869747, "o", "Zabrano element 17. (Stos LIFO)\r\nZabrano element 85. (Kolejka FIFO)\r\nZabrano element 16. (Stos LIFO)\r\nZabrano element 86. (Kolejka FIFO)\r\n"]
[59.869776, "o", "Zabrano element 15. (Stos LIFO)\r\nZabrano element 87. (Kolejka FIFO)\r\nZabrano element 14. (Stos LIFO)\r\nZabrano element 88. (Kolejka FIFO)\r\nZabrano element 13. (Stos LIFO)"]
[59.869807, "o", "\r\nZabrano element 89. (Kolejka FIFO)\r\nZabrano element 12. (Stos LIFO)\r\nZabrano element 90. (Kolejka FIFO)\r\nZabrano element 11. (Stos LIFO)\r\nZabrano element 91. (Kolejka FIFO)\r\n"]
[59.869837, "o", "Zabrano element 10. (Stos LIFO)\r\nZabrano element 92. (Kolejka FIFO)\r\nZabrano element 9. (Stos LIFO)\r\nZabrano element 93. (Kolejka FIFO)\r\n"]
[59.869869, "o", "Zabrano element 8. (Stos LIFO)\r\nZabrano element 94. (Kolejka FIFO)\r\nZabrano element 7. (Stos LIFO)\r\nZabrano element 95. (Kolejka FIFO)\r\nZabrano element 6. (Stos LIFO)\r\n"]
[59.869917, "o", "Zabrano element 96. (Kolejka FIFO)\r\nZabrano element 5. (Stos LIFO)\r\nZabrano element 97. (Kolejka FIFO)\r\nZabrano element 4. (Stos LIFO)\r\nZabrano element 98. (Kolejka FIFO)\r\n"]
[59.869944, "o", "Zabrano element 3. (Stos LIFO)\r\nZabrano element 99. (Kolejka FIFO)\r\nZabrano element 2. (Stos LIFO)\r\nZabrano element 100. (Kolejka FIFO)\r\nZabrano element 1. (Stos LIFO)\r\n"]
[59.869971, "o", "\r\n\r\nProba zabrania elementow z pustej kolejki i pustego stosu:\r\nKolejka jest pusta! Zwracam liczbę -1 (error).\r\nStos jest pusty! Zwracam liczbę -1 (error).\r\n"]
[59.870671, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[64.173766, "o", "./zadanie1"]
[65.021546, "o", "\b\u001b[K"]
[65.197604, "o", "\b\u001b[K"]
[65.360701, "o", "\b\u001b[K"]
[65.533485, "o", "\b\u001b[K"]
[65.677673, "o", "\b\u001b[K"]
[65.829474, "o", "\b\u001b[K"]
[65.981646, "o", "\b\u001b[K"]
[66.149595, "o", "\b\u001b[K"]
[66.321443, "o", "\b\u001b[K"]
[66.493654, "o", "\b\u001b[K"]
[68.633457, "o", "#"]
[69.021611, "o", "Z"]
[69.261665, "o", "a"]
[69.461641, "o", "d"]
[69.685586, "o", "\b\u001b[K"]
[69.825603, "o", "\b\u001b[K"]
[70.201642, "o", "A"]
[70.372666, "o", "D"]
[70.516943, "o", "A"]
[70.665488, "o", "N"]
[70.789568, "o", "I"]
[70.941467, "o", "E"]
[71.384691, "o", " "]
[71.757442, "o", "2"]
[73.621368, "o", "\r\n"]
[73.62179, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[74.101593, "o", "c"]
[74.35676, "o", "s"]
[74.600841, "o", "a"]
[74.865515, "o", "\b\u001b[K"]
[74.993562, "o", "\b\u001b[K"]
[75.081648, "o", "a"]
[75.24153, "o", "t"]
[75.364628, "o", " "]
[76.469029, "o", "z"]
[76.653441, "o", "a"]
[76.817412, "o", "d"]
[76.969646, "o", "a"]
[77.097547, "o", "n"]
[77.145432, "o", "i"]
[77.3175, "o", "e"]
[77.577444, "o", "2"]
[77.785534, "o", "."]
[78.029426, "o", "c"]
[78.557477, "o", "\r\n"]
[78.559806, "o", "//Marek Świergoń 261750 L1Z2\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <time.h>\r\n#include <sys/time.h>\r\n\r\nstruct timeval tvalBefore, tvalAfter;\r\n\r\nstruct ElementListy {\r\n  int wartosc;\r\n  struct ElementListy* nastepny;\r\n};\r\n\r\ntypedef struct ElementListy* Lista;\r\n\r\nLista nowaLista(int i){\r\n  Lista nowa = malloc(sizeof(struct ElementListy));\r\n  nowa->wartosc = i;\r\n  nowa->nastepny = NULL;\r\n  return nowa;\r\n}\r\n\r\nvoid wyswietlElementy(Lista lista) {\r\n  if(lista == NULL) {\r\n    printf(\"lista pusta\\n\");\r\n  }\r\n  while(lista != NULL) {\r\n    printf(\"%d\\n\", lista->wartosc);\r\n    lista = lista->nastepny;\r\n  }\r\n}\r\n\r\nLista dodajElementPoczatek(Lista lista, int wart) {\r\n  Lista nowa = nowaLista(wart);\r\n  nowa->nastepny = lista;\r\n  return nowa;\r\n}\r\n\r\nvoid dodajElementKoniec(Lista* lista, int wart) {\r\n  Lista nowa = nowaLista(wart);\r\n  Lista pomocnicza;\r\n  if((*lista) == NULL) {\r\n    (*lista) = nowa;\r\n  }\r\n  else {\r\n    pomocnicza = *lista;\r\n    while(pomocnicza->nastepny != NULL) {\r\n      pom"]
[78.560172, "o", "ocnicza = pomocnicza->nastepny;\r\n    }\r\n    pomocnicza->nastepny = nowa;\r\n  }\r\n}\r\n\r\nint getWartosc(Lista lista, int indeks) {\r\n  int i = 0;\r\n  while(lista != NULL) {\r\n    if(i == indeks) {\r\n      return lista->wartosc;\r\n    }\r\n    lista = lista->nastepny;\r\n    i++;\r\n  }\r\n  printf(\"error: brak elementu o indeksie i=%d\", i);\r\n  return -1;\r\n}\r\n\r\nvoid usunListe(Lista* lista) {\r\n  Lista temp;\r\n  while(*lista != NULL) {\r\n    temp = (*lista)->nastepny;\r\n    free(*lista);\r\n    *lista = temp;\r\n  }\r\n}\r\n\r\n//funkcja merge laczy obie listy - wskazanie na element listy lista_a i lista_b\r\n//po wywolaniu merge(lista_a, lista_b) dzialaja wewnatrz duzej listy ab\r\nvoid merge(Lista lista_a, Lista lista_b) {\r\n  while(lista_a->nastepny != NULL) {\r\n    lista_a = lista_a->nastepny;\r\n  }\r\n  lista_a->nastepny = lista_b;\r\n}\r\n\r\nint main() {\r\n  //z braku lepszego generatora pseudolosowego - rand, niepolecany\r\n  srand(time(NULL));\r\n  Lista lista = nowaLista(rand()%10000);\r\n  for(int i = 0; i<1000; i++) {\r\n    dodajElementKoniec(&lista, ra"]
[78.560431, "o", "nd()%10000);\r\n  }\r\n  //wyswietlElementy(lista);\r\n  FILE *out_file = fopen(\"wyniki_zadanie2.txt\", \"w\");\r\n  fprintf(out_file, \"Test sredniego czasu dostepu do elementow o indeksach i = 0,50,...,950 (i;sr_czas[ms]):\\n\");\r\n  long suma;\r\n  int element = -1;\r\n  double sredni_czas = -1.0;\r\n  for(int i = 0; i < 1000; i += 50) {\r\n    suma = 0;\r\n    for(int j=0; j < 100; j++) {\r\n      gettimeofday (&tvalBefore, NULL);\r\n      element = getWartosc(lista, i);\r\n      gettimeofday (&tvalAfter, NULL);\r\n      suma += ((tvalAfter.tv_sec - tvalBefore.tv_sec)*1000000L+tvalAfter.tv_usec) - tvalBefore.tv_usec;\r\n      element = -1;\r\n    }\r\n    sredni_czas = (double)suma/100.0;\r\n    fprintf(out_file, \"%d;%lf\\n\",i,sredni_czas);\r\n  }\r\n\r\n  //TEST FUNKCJI MERGE\r\n  Lista lista_a = nowaLista(rand());\r\n  for(int i = 0; i<5; i++) {\r\n    dodajElementKoniec(&lista_a, rand()%1000);\r\n  }\r\n  printf(\"Elementy listy a:\\n\");\r\n  wyswietlElementy(lista_a);\r\n\r\n  Lista lista_b = nowaLista(rand());\r\n  for(int i = 0; i<3; i++) {\r\n    dodajElementKoniec(&"]
[78.560608, "o", "lista_b, rand()%1000);\r\n  }\r\n  printf(\"Elementy listy b:\\n\");\r\n  wyswietlElementy(lista_b);\r\n\r\n  merge(lista_a, lista_b);\r\n\r\n  printf(\"Elementy złączenia ab:\\n\");\r\n  wyswietlElementy(lista_a);\r\n\r\n  usunListe(&lista);\r\n  printf(\"\\n\\nCzy zawartosc listy zostala usunieta?\\n\");\r\n  wyswietlElementy(lista);\r\n  return 0;\r\n}\r\n\r\n//WNIOSEK:\r\n//IM DALEJ ELEMENT, DO KTÓREGO CHCESZ MIEĆ DOSTĘP, LEŻY OD ELEMENTU\r\n//POCZĄTKOWEGO LISTY, TYM DŁUŻSZY JEST CZAS POTRZEBNY DO UZYSKANIA\r\n//ŻĄDANEGO ELEMENTU.\r\n\r\n//CZAS TEN ROŚNIE LINIOWO (THETA(n), gdzie n to odleglosc elementu\r\n//szukanego od elementu poczatkowego)"]
[78.560731, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[82.272964, "o", "g"]
[82.493398, "o", "c"]
[82.641375, "o", "c"]
[82.777688, "o", " "]
[83.217593, "o", "-"]
[83.541414, "o", "o"]
[83.69368, "o", " "]
[83.901473, "o", "z"]
[84.113464, "o", "a"]
[84.249347, "o", "d"]
[84.404716, "o", "a"]
[84.537451, "o", "n"]
[84.609297, "o", "i"]
[84.745446, "o", "e"]
[85.785255, "o", "2"]
[85.941639, "o", " "]
[86.113478, "o", "z"]
[86.288589, "o", "a"]
[86.43344, "o", "d"]
[86.589429, "o", "a"]
[86.713489, "o", "n"]
[86.789371, "o", "i"]
[86.893399, "o", "e"]
[87.141203, "o", "2"]
[87.281494, "o", "."]
[87.485411, "o", "c"]
[88.033418, "o", "\r\n"]
[88.086086, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[88.533439, "o", "."]
[88.749438, "o", "z"]
[89.097493, "o", "\b\u001b[K"]
[89.444635, "o", "/"]
[89.70541, "o", "z"]
[89.917555, "o", "a"]
[90.073434, "o", "d"]
[90.229431, "o", "a"]
[90.349401, "o", "n"]
[90.409048, "o", "i"]
[90.533385, "o", "r"]
[91.053477, "o", "\b\u001b[K"]
[91.577273, "o", "e"]
[91.805571, "o", " "]
[92.24143, "o", "\b\u001b[K"]
[92.389264, "o", "2"]
[92.805398, "o", "\r\n"]
[92.82314, "o", "Elementy listy a:\r\n227194946\r\n860\r\n122\r\n643\r\n889\r\n346\r\nElementy listy b:\r\n537495363\r\n543\r\n392\r\n498\r\nElementy złączenia ab:\r\n227194946\r\n860\r\n122\r\n643\r\n889\r\n346\r\n537495363\r\n543\r\n392\r\n498\r\n"]
[92.82346, "o", "\r\n\r\nCzy zawartosc listy zostala usunieta?\r\nlista pusta\r\n"]
[92.824042, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[95.465399, "o", "#"]
[96.305286, "o", "W"]
[96.50138, "o", "Y"]
[96.61749, "o", "N"]
[96.681207, "o", "I"]
[96.961432, "o", "I"]
[97.501529, "o", "+"]
[97.757438, "o", "\b\u001b[K"]
[97.929328, "o", "\b\u001b[K"]
[98.161454, "o", "K"]
[98.341425, "o", "I"]
[98.533358, "o", " "]
[99.021353, "o", "T"]
[99.197287, "o", "E"]
[99.373131, "o", "S"]
[99.541418, "o", "T"]
[99.797417, "o", "Ó"]
[100.153378, "o", "W"]
[100.497298, "o", " "]
[101.101428, "o", "S"]
[101.593472, "o", "Ą"]
[101.917433, "o", " "]
[102.105325, "o", "Z"]
[102.265485, "o", "A"]
[102.361279, "o", "P"]
[102.577379, "o", "I"]
[102.68531, "o", "S"]
[102.889315, "o", "Y"]
[103.08533, "o", "W"]
[103.301398, "o", "A"]
[103.400584, "o", "N"]
[103.581368, "o", "E"]
[103.705463, "o", " "]
[103.901273, "o", "W"]
[103.997409, "o", " "]
[104.265457, "o", "P"]
[104.460375, "o", "L"]
[104.741272, "o", "I"]
[104.913389, "o", "K"]
[105.325429, "o", "U"]
[105.416801, "o", " "]
[105.837328, "o", "T"]
[106.025239, "o", "E"]
[106.237235, "o", "S"]
[106.404555, "o", "K"]
[106.657235, "o", "T"]
[106.88529, "o", "O"]
[107.101326, "o", "W"]
[107.369205, "o", "Y"]
[107.529291, "o", "M"]
[108.365345, "o", " "]
[108.545321, "o", "w"]
[108.781325, "o", "y"]
[108.865399, "o", "n"]
[108.929162, "o", "i"]
[109.085282, "o", "k"]
[109.165244, "o", "i"]
[109.721254, "o", "_"]
[110.289383, "o", "z"]
[110.460973, "o", "a"]
[110.629218, "o", "d"]
[110.79738, "o", "a"]
[110.95725, "o", "n"]
[111.005074, "o", "i"]
[111.129228, "o", "e"]
[111.408517, "o", "2"]
[111.561101, "o", "."]
[111.881301, "o", "t"]
[112.353231, "o", "x"]
[112.513245, "o", "t"]
[112.961103, "o", "\r\n"]
[112.96155, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[120.457164, "o", "#"]
[120.78528, "o", " "]
[121.157223, "o", "Z"]
[121.337334, "o", "A"]
[121.513126, "o", "D"]
[121.677137, "o", "A"]
[121.777058, "o", "N"]
[121.849019, "o", "I"]
[121.988982, "o", "E"]
[122.245237, "o", " "]
[122.673108, "o", "#"]
[123.27711, "o", "\b\u001b[K"]
[123.377065, "o", "3"]
[124.849319, "o", "\r\n"]
[124.849703, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[126.064965, "o", "c"]
[126.233246, "o", "a"]
[126.417107, "o", "t"]
[126.528147, "o", " "]
[126.693047, "o", "z"]
[126.873299, "o", "a"]
[127.005163, "o", "d"]
[127.153224, "o", "a"]
[127.285224, "o", "n"]
[127.357053, "o", "i"]
[127.456936, "o", "e"]
[127.684913, "o", "3"]
[127.917096, "o", "."]
[128.149256, "o", "c"]
[128.49278, "o", "\r\n"]
[128.494409, "o", "//Marek Świergoń 261750 L1Z2\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <time.h>\r\n#include <sys/time.h>\r\n\r\nstruct timeval tvalBefore, tvalAfter;\r\n\r\nstruct ElementListy {\r\n  int wartosc;\r\n  struct ElementListy* poprzedni;\r\n  struct ElementListy* nastepny;\r\n};\r\n\r\ntypedef struct ElementListy* Lista;\r\n\r\nLista nowaLista(int i) {\r\n  Lista nowa = malloc(sizeof(struct ElementListy));\r\n  nowa->wartosc = i;\r\n  nowa->poprzedni = nowa;\r\n  nowa->nastepny = nowa;\r\n  return nowa;\r\n}\r\n\r\nvoid dodajPoczatek(Lista* lista, int wart) {\r\n  if(*lista == NULL) {\r\n    Lista nowy = nowaLista(wart);\r\n    *lista = nowy;\r\n  }\r\n  else {\r\n    Lista nowy = nowaLista(wart);\r\n    nowy->nastepny = *lista;\r\n    nowy->poprzedni = (*lista)->poprzedni;\r\n    (*lista)->poprzedni->nastepny = nowy;\r\n    (*lista)->poprzedni = nowy;\r\n    *lista = nowy;\r\n  }\r\n}\r\n\r\nvoid wyswietlElementy(Lista lista) {\r\n  if(lista == NULL) {\r\n    printf(\"lista pusta\\n\");\r\n  }\r\n  else {\r\n    Lista pomoc = lista;\r\n      printf(\"%d\\n\", pomoc->w"]
[128.494667, "o", "artosc);\r\n    while(pomoc->nastepny != lista) {\r\n      pomoc = pomoc->nastepny;\r\n      printf(\"%d\\n\", pomoc->wartosc);\r\n    }\r\n  }\r\n}\r\n\r\nbool searchWithoutMove(Lista lista, int wart) {\r\n  if (lista == NULL) {\r\n    printf(\"lista pusta!\");\r\n    return false;\r\n  }\r\n  Lista temp = lista;\r\n  while(lista->nastepny != temp) {\r\n    if(lista->wartosc == wart) {\r\n      return true;\r\n    }\r\n    lista = lista->nastepny;\r\n  }\r\n  return false;\r\n}\r\n\r\nbool searchWithMove(Lista* lista, int wart) {\r\n  if (*lista == NULL) {\r\n    printf(\"lista pusta!\");\r\n    return false;\r\n  }\r\n  Lista temp = *lista;\r\n  while((*lista)->nastepny != temp) {\r\n    if((*lista)->wartosc == wart) {\r\n      return true;\r\n    }\r\n    (*lista) = (*lista)->nastepny;\r\n  }\r\n  return false;\r\n}\r\n\r\n//przechodze kolejno po elementach listy, zapamietuje kolejny i usuwam obecny\r\nvoid usunListe(Lista* lista) {\r\n  Lista mem = (*lista);\r\n  if(*lista!=NULL) {\r\n    Lista temp;\r\n    do {\r\n      temp = (*lista)->nastepny;\r\n      printf(\"usuwam element o kluczu: %d\\n\", (*li"]
[128.49475, "o", "sta)->wartosc);\r\n      free(*lista);\r\n      *lista = temp;\r\n    } while(*lista != mem);\r\n    *lista = NULL;\r\n  }\r\n}\r\n\r\n//funkcja merge laczy obie listy - wskazanie na element listy lista_a i lista_b\r\n//po wywolaniu merge(lista_a, lista_b) dzialaja wewnatrz duzej listy ab\r\nvoid merge(Lista lista_a, Lista lista_b) {\r\n  lista_a->nastepny->poprzedni = lista_b->poprzedni;\r\n  lista_b->poprzedni->nastepny = lista_a->nastepny;\r\n  lista_a->nastepny = lista_b;\r\n  lista_b->poprzedni = lista_a;\r\n}\r\n\r\nint main() {\r\n\r\n  //Test funkcji merge, wyswietlania elementow i wyszukiwania\r\n  printf(\"Próba wyswietlenia elementów listy pustej:\\n\");\r\n  Lista lista_a = NULL;\r\n  wyswietlElementy(lista_a);\r\n  printf(\"\\n\");\r\n  dodajPoczatek(&lista_a, 6);\r\n  dodajPoczatek(&lista_a, 5);\r\n  dodajPoczatek(&lista_a, 4);\r\n  dodajPoczatek(&lista_a, 3);\r\n  printf(\"Elementy listy a:\\n\");\r\n  wyswietlElementy(lista_a);\r\n  printf(\"\\n\");\r\n\r\n  Lista lista_b = nowaLista(10);\r\n  dodajPoczatek(&lista_b, 9);\r\n  dodajPoczatek(&lista_b, 8);\r\n  dodajPoczatek"]
[128.494784, "o", "(&lista_b, 7);\r\n  printf(\"Elementy listy b:\\n\");\r\n  wyswietlElementy(lista_b);\r\n  printf(\"\\n\");\r\n\r\n  merge(lista_a, lista_b);\r\n\r\n  printf(\"Elementy złączenia ab:\\n\");\r\n  wyswietlElementy(lista_a);\r\n  printf(\"\\n\");  \r\n\r\n  searchWithoutMove(lista_a, 6);\r\n  printf(\"Elementy listy ab po wyszukiwaniu elementu o kluczu 6 bez (docelowego!) przesuniecia na element:\\n\");\r\n  wyswietlElementy(lista_a);\r\n  printf(\"\\n\");\r\n  searchWithMove(&lista_a, 6);\r\n  printf(\"Elementy listy ab po wyszukiwaniu elementu o kluczu 6 z docelowym przesunieciem na element:\\n\");\r\n  wyswietlElementy(lista_a);\r\n  printf(\"\\n\");\r\n  printf(\"Elementy listy ab po wyszukiwaniu elementu o kluczu 6 po raz drugi z\\n\");\r\n  printf(\"docelowym przesunieciem na element (brak zmian):\\n\");\r\n  searchWithMove(&lista_a, 6);\r\n  wyswietlElementy(lista_a);\r\n  printf(\"\\n\");\r\n  searchWithMove(&lista_a, 8);\r\n  printf(\"Elementy listy ab po wyszukiwaniu elementu o kluczu 8 z docelowym przesunieciem na element:\\n\");\r\n  wyswietlElementy(lista_a);\r\n\r\n\r\n  //TESTOWANIE SZYB"]
[128.494811, "o", "KOŚCI DOSTĘPU DO ELEMENTÓW\r\n  //1. SZYBKOŚĆ DOSTĘPU W ZALEŻNOŚCI OD ODLEGŁOŚCI\r\n\r\n\r\n  FILE *out_file = fopen(\"wyniki_zadanie3.txt\", \"w\");\r\n\r\n  //wstawienie 1000 elementów - o wartosciach posortowanych rosnąco [0,...,999]\r\n  Lista lista = nowaLista(999);\r\n  for(int i = 998; i>=0; i--) {\r\n    dodajPoczatek(&lista, i);\r\n  }\r\n\r\n  int suma = 0;\r\n  double sredni_czas = 0.0;\r\n\r\n\r\n  //TEST CZASU DOSTĘPU DO TEGO SAMEGO ELEMENTU (dla funkcji z przesuwaniem - przesunięcie na dany\r\n  //element raz i potem za każdym kolejnym razem bezposredni dostep)\r\n  //powtarzam test 1000 razy dla elementow [0, 100, 200, ..., 900]\r\n  fprintf(out_file, \"Test sredniego czasu dostepu do tego samego elementu dla funkcji przesuwajacej liste na szukany element\\n\");\r\n  fprintf(out_file, \"1000 powtorzen dla kazdego klucza i, i=0,100,...,900 (i, sr_czas[ms]):\\n\");\r\n  for (int i = 0; i<1000; i += 100) {\r\n    for (int j = 0; j<1000; j++) {\r\n      gettimeofday (&tvalBefore, NULL);\r\n      searchWithMove(&lista, i);\r\n      gettimeofda"]
[128.494837, "o", "y (&tvalAfter, NULL);\r\n      suma += ((tvalAfter.tv_sec - tvalBefore.tv_sec)*1000000L+tvalAfter.tv_usec) - tvalBefore.tv_usec;\r\n    }\r\n    sredni_czas = (double)suma/1000.0;\r\n    fprintf(out_file, \"%d;%lf\\n\", i, sredni_czas);\r\n    sredni_czas = 0.0;\r\n    suma = 0;\r\n  }\r\n\r\n\r\n  //TEST CZASU DOSTEPU DO LOSOWEGO ELEMENTU (dla funkcji z przesuwaniem - choc tu bez znaczenia)\r\n  //10000 powtorzen\r\n  fprintf(out_file, \"\\nTest sredniego czasu dostepu do losowego elementu (1000 powtorzen) [ms]:\\n\");\r\n  srand(time(NULL));\r\n  for (int i = 0; i<1000; i++) {\r\n    gettimeofday (&tvalBefore, NULL);\r\n    searchWithMove(&lista, (rand()%1000));\r\n    gettimeofday (&tvalAfter, NULL);\r\n    suma += ((tvalAfter.tv_sec - tvalBefore.tv_sec)*1000000L+tvalAfter.tv_usec) - tvalBefore.tv_usec;\r\n  }\r\n  sredni_czas = (double)suma/1000.0;\r\n  fprintf(out_file, \"%lf\\n\", sredni_czas);\r\n\r\n  printf(\"\\n\\nUsuwam liste a element po elemencie:\\n\");\r\n  usunListe(&lista_a);\r\n  printf(\"Czy zawartosc listy a zostala usunieta?\\n\");\r\n  wyswietlElementy(lis"]
[128.494868, "o", "ta_a);\r\n  return 0;\r\n}\r\n\r\n//WNIOSEK:\r\n//KIEDY UŻYWAMY FUNKCJI Z WYSZUKIWANIEM ELEMENTU Z PRZESUNIECIEM NA NIEGO,\r\n//MAMY BARDZO SZYBKI (BEZPOSREDNI) DOSTEP DO TEGO SAMEGO ELEMENTU Z KAŻDYM KOLEJNYM RAZEM.\r\n//DZIEKI TEMU CZAS WIELOKROTNEGO DOSTEPU DO TEGO SAMEGO ELEMENTU JEST ZNACZNIE NIZSZY\r\n//NIZ CZAS WIELOKROTNEGO DOSTEPU DO ZA KAZDYM RAZEM INNEGO ELEMENTU (PRZYPADEK Z LOSOWYM DOSTEPEM).\r\n\r\n//(uwaga, czasem można oczywiscie wylosowac ten sam klucz, ale jest to rzadkie, mówimy o przypadku średnim)"]
[128.495412, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[132.949058, "o", "z"]
[136.160419, "o", "\b\u001b[K"]
[138.089178, "o", "f"]
[138.381146, "o", "\b\u001b[K"]
[138.497054, "o", "g"]
[138.717076, "o", "c"]
[138.865127, "o", "c"]
[139.065132, "o", " "]
[139.493201, "o", "z"]
[139.677214, "o", "a"]
[139.824969, "o", "d"]
[139.98509, "o", "a"]
[140.10513, "o", "n"]
[140.365084, "o", "\b\u001b[K"]
[140.497044, "o", "\b\u001b[K"]
[140.629056, "o", "\b\u001b[K"]
[140.753099, "o", "\b\u001b[K"]
[140.881039, "o", "\b\u001b[K"]
[141.381136, "o", "-"]
[141.701094, "o", "o"]
[141.901227, "o", " "]
[142.009027, "o", "z"]
[142.169179, "o", "a"]
[142.312951, "o", "d"]
[142.477031, "o", "a"]
[142.585241, "o", "n"]
[142.652978, "o", "i"]
[143.321096, "o", "e"]
[143.877071, "o", "3"]
[144.025128, "o", " "]
[144.264938, "o", "z"]
[144.741096, "o", "a"]
[144.997096, "o", "d"]
[145.245058, "o", "a"]
[145.34499, "o", "n"]
[145.424237, "o", "i"]
[145.532967, "o", "e"]
[145.789243, "o", "3"]
[145.925107, "o", "."]
[146.22513, "o", "c"]
[147.001035, "o", "\r\n"]
[147.055248, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[147.821131, "o", "."]
[147.85672, "o", "/"]
[148.145088, "o", "z"]
[148.333079, "o", "a"]
[148.497025, "o", "d"]
[148.652941, "o", "a"]
[148.817058, "o", "n"]
[148.884991, "o", "i"]
[149.029092, "o", "e"]
[149.849047, "o", "3"]
[150.217209, "o", "\r\n"]
[150.219254, "o", "Próba wyswietlenia elementów listy pustej:\r\nlista pusta\r\n\r\nElementy listy a:\r\n3\r\n4\r\n5\r\n6\r\n\r\nElementy listy b:\r\n7\r\n8\r\n9\r\n10\r\n\r\nElementy złączenia ab:\r\n3\r\n"]
[150.219353, "o", "7\r\n8\r\n9\r\n10\r\n4\r\n5\r\n6\r\n\r\nElementy listy ab po wyszukiwaniu elementu o kluczu 6 bez (docelowego!) przesuniecia na element:\r\n3\r\n7\r\n8\r\n9\r\n10\r\n4\r\n5\r\n6\r\n\r\nElementy listy ab po wyszukiwaniu elementu o kluczu 6 z docelowym przesunieciem na element:\r\n"]
[150.219732, "o", "6\r\n3\r\n7\r\n8\r\n9\r\n10\r\n4\r\n5\r\n\r\nElementy listy ab po wyszukiwaniu elementu o kluczu 6 po raz drugi z\r\ndocelowym przesunieciem na element (brak zmian):\r\n6\r\n3\r\n7\r\n8\r\n9\r\n10\r\n4\r\n5\r\n\r\nElementy listy ab po wyszukiwaniu elementu o kluczu 8 z docelowym przesunieciem na element:\r\n8\r\n9\r\n10\r\n4\r\n5\r\n6\r\n3\r\n7\r\n"]
[150.223897, "o", "\r\n\r\nUsuwam liste a element po elemencie:\r\nusuwam element o kluczu: 8\r\nusuwam element o kluczu: 9\r\nusuwam element o kluczu: 10\r\nusuwam element o kluczu: 4\r\nusuwam element o kluczu: 5\r\nusuwam element o kluczu: 6\r\nusuwam element o kluczu: 3\r\nusuwam element o kluczu: 7\r\nCzy zawartosc listy a zostala usunieta?\r\nlista pusta\r\n"]
[150.224348, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[154.617033, "o", "#"]
[154.785022, "o", " "]
[154.993027, "o", "W"]
[155.353029, "o", "Y"]
[155.493033, "o", "N"]
[155.576989, "o", "I"]
[155.789055, "o", "K"]
[155.876961, "o", "I"]
[156.097264, "o", " "]
[156.341042, "o", "T"]
[156.529046, "o", "E"]
[156.696964, "o", "S"]
[156.869024, "o", "T"]
[157.860826, "o", "Ó"]
[158.173108, "o", "W"]
[158.373161, "o", " "]
[158.673045, "o", "S"]
[159.181093, "o", "Ą"]
[159.464262, "o", " "]
[159.641049, "o", "W"]
[159.749055, "o", " "]
[159.985068, "o", "P"]
[160.156954, "o", "L"]
[160.38902, "o", "I"]
[160.557067, "o", "K"]
[161.105061, "o", "U"]
[161.305056, "o", " "]
[161.796988, "o", "z"]
[161.997063, "o", "a"]
[162.144927, "o", "d"]
[162.288935, "o", "a"]
[162.440175, "o", "n"]
[162.508898, "o", "i"]
[162.632921, "o", "e"]
[163.077036, "o", "\b\u001b[K"]
[163.213035, "o", "\b\u001b[K"]
[163.345028, "o", "\b\u001b[K"]
[163.468319, "o", "\b\u001b[K"]
[163.596934, "o", "\b\u001b[K"]
[163.728677, "o", "\b\u001b[K"]
[163.865137, "o", "\b\u001b[K"]
[164.16108, "o", "w"]
[164.373043, "o", "y"]
[164.456194, "o", "n"]
[164.540835, "o", "i"]
[164.680975, "o", "k"]
[164.768968, "o", "i"]
[165.292932, "o", "_"]
[165.836974, "o", "z"]
[166.032965, "o", "a"]
[166.340867, "o", "d"]
[166.524859, "o", "a"]
[166.717088, "o", "n"]
[166.876933, "o", "i"]
[167.016845, "o", "e"]
[167.476384, "o", "3"]
[168.156939, "o", "."]
[168.32497, "o", "t"]
[168.552795, "o", "x"]
[168.708924, "o", "t"]
[169.424941, "o", "\r\n"]
[169.425424, "o", "\u001b]0;swmar@swmar-GL553VD: ~/Desktop/pustyprezentacja/lista1\u0007\u001b[01;32mswmar@swmar-GL553VD\u001b[00m:\u001b[01;34m~/Desktop/pustyprezentacja/lista1\u001b[00m$ "]
[172.464184, "o", "exit\r\n"]
